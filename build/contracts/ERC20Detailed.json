{
  "contractName": "ERC20Detailed",
  "abi": [
    {
      "constant": false,
      "inputs": [
        {
          "name": "spender",
          "type": "address"
        },
        {
          "name": "value",
          "type": "uint256"
        }
      ],
      "name": "approve",
      "outputs": [
        {
          "name": "",
          "type": "bool"
        }
      ],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "totalSupply",
      "outputs": [
        {
          "name": "",
          "type": "uint256"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "name": "from",
          "type": "address"
        },
        {
          "name": "to",
          "type": "address"
        },
        {
          "name": "value",
          "type": "uint256"
        }
      ],
      "name": "transferFrom",
      "outputs": [
        {
          "name": "",
          "type": "bool"
        }
      ],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "name": "spender",
          "type": "address"
        },
        {
          "name": "addedValue",
          "type": "uint256"
        }
      ],
      "name": "increaseAllowance",
      "outputs": [
        {
          "name": "",
          "type": "bool"
        }
      ],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [
        {
          "name": "owner",
          "type": "address"
        }
      ],
      "name": "balanceOf",
      "outputs": [
        {
          "name": "",
          "type": "uint256"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "name": "spender",
          "type": "address"
        },
        {
          "name": "subtractedValue",
          "type": "uint256"
        }
      ],
      "name": "decreaseAllowance",
      "outputs": [
        {
          "name": "",
          "type": "bool"
        }
      ],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "name": "to",
          "type": "address"
        },
        {
          "name": "value",
          "type": "uint256"
        }
      ],
      "name": "transfer",
      "outputs": [
        {
          "name": "",
          "type": "bool"
        }
      ],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [
        {
          "name": "owner",
          "type": "address"
        },
        {
          "name": "spender",
          "type": "address"
        }
      ],
      "name": "allowance",
      "outputs": [
        {
          "name": "",
          "type": "uint256"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "name": "name",
          "type": "string"
        },
        {
          "name": "symbol",
          "type": "string"
        },
        {
          "name": "decimals",
          "type": "uint8"
        }
      ],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "constructor"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "name": "from",
          "type": "address"
        },
        {
          "indexed": true,
          "name": "to",
          "type": "address"
        },
        {
          "indexed": false,
          "name": "value",
          "type": "uint256"
        }
      ],
      "name": "Transfer",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "name": "owner",
          "type": "address"
        },
        {
          "indexed": true,
          "name": "spender",
          "type": "address"
        },
        {
          "indexed": false,
          "name": "value",
          "type": "uint256"
        }
      ],
      "name": "Approval",
      "type": "event"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "name",
      "outputs": [
        {
          "name": "",
          "type": "string"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "symbol",
      "outputs": [
        {
          "name": "",
          "type": "string"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "decimals",
      "outputs": [
        {
          "name": "",
          "type": "uint8"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    }
  ],
  "metadata": "{\"compiler\":{\"version\":\"0.4.24+commit.e67f0147\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"constant\":true,\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"name\":\"\",\"type\":\"string\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"spender\",\"type\":\"address\"},{\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"from\",\"type\":\"address\"},{\"name\":\"to\",\"type\":\"address\"},{\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"decimals\",\"outputs\":[{\"name\":\"\",\"type\":\"uint8\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"spender\",\"type\":\"address\"},{\"name\":\"addedValue\",\"type\":\"uint256\"}],\"name\":\"increaseAllowance\",\"outputs\":[{\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"name\":\"\",\"type\":\"string\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"spender\",\"type\":\"address\"},{\"name\":\"subtractedValue\",\"type\":\"uint256\"}],\"name\":\"decreaseAllowance\",\"outputs\":[{\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"to\",\"type\":\"address\"},{\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"owner\",\"type\":\"address\"},{\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"name\":\"name\",\"type\":\"string\"},{\"name\":\"symbol\",\"type\":\"string\"},{\"name\":\"decimals\",\"type\":\"uint8\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"}],\"devdoc\":{\"methods\":{\"allowance(address,address)\":{\"details\":\"Function to check the amount of tokens that an owner allowed to a spender.\\r\",\"params\":{\"owner\":\"address The address which owns the funds.\\r\",\"spender\":\"address The address which will spend the funds.\\r\"},\"return\":\"A uint256 specifying the amount of tokens still available for the spender.\\r\"},\"approve(address,uint256)\":{\"details\":\"Approve the passed address to spend the specified amount of tokens on behalf of msg.sender.\\r Beware that changing an allowance with this method brings the risk that someone may use both the old\\r and the new allowance by unfortunate transaction ordering. One possible solution to mitigate this\\r race condition is to first reduce the spender's allowance to 0 and set the desired value afterwards:\\r https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729\\r\",\"params\":{\"spender\":\"The address which will spend the funds.\\r\",\"value\":\"The amount of tokens to be spent.\\r\"}},\"balanceOf(address)\":{\"details\":\"Gets the balance of the specified address.\\r\",\"params\":{\"owner\":\"The address to query the balance of.\\r\"},\"return\":\"An uint256 representing the amount owned by the passed address.\\r\"},\"decimals()\":{\"return\":\"the number of decimals of the token.\\r\"},\"decreaseAllowance(address,uint256)\":{\"details\":\"Decrease the amount of tokens that an owner allowed to a spender.\\r approve should be called when allowed_[_spender] == 0. To decrement\\r allowed value is better to use this function to avoid 2 calls (and wait until\\r the first transaction is mined)\\r From MonolithDAO Token.sol\\r\",\"params\":{\"spender\":\"The address which will spend the funds.\\r\",\"subtractedValue\":\"The amount of tokens to decrease the allowance by.\\r\"}},\"increaseAllowance(address,uint256)\":{\"details\":\"Increase the amount of tokens that an owner allowed to a spender.\\r approve should be called when allowed_[_spender] == 0. To increment\\r allowed value is better to use this function to avoid 2 calls (and wait until\\r the first transaction is mined)\\r From MonolithDAO Token.sol\\r\",\"params\":{\"addedValue\":\"The amount of tokens to increase the allowance by.\\r\",\"spender\":\"The address which will spend the funds.\\r\"}},\"name()\":{\"return\":\"the name of the token.\\r\"},\"symbol()\":{\"return\":\"the symbol of the token.\\r\"},\"totalSupply()\":{\"details\":\"Total number of tokens in existence\\r\"},\"transfer(address,uint256)\":{\"details\":\"Transfer token for a specified address\\r\",\"params\":{\"to\":\"The address to transfer to.\\r\",\"value\":\"The amount to be transferred.\\r\"}},\"transferFrom(address,address,uint256)\":{\"details\":\"Transfer tokens from one address to another\\r\",\"params\":{\"from\":\"address The address which you want to send tokens from\\r\",\"to\":\"address The address which you want to transfer to\\r\",\"value\":\"uint256 the amount of tokens to be transferred\\r\"}}},\"title\":\"ERC20Detailed token\\r\"},\"userdoc\":{\"methods\":{}}},\"settings\":{\"compilationTarget\":{\"project:/contracts/ERC20Detailed.sol\":\"ERC20Detailed\"},\"evmVersion\":\"byzantium\",\"libraries\":{},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"openzeppelin-contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0xfb503c84ca760818d8e4be66ee5f22d9565362106c82be1d20766261c58c4c0e\",\"urls\":[\"bzzr://c28f5ca4682608dbe95291adcf07dfed134f708cd126b5c8bba43bcbfcefc1cf\"]},\"openzeppelin-solidity/contracts/math/SafeMath.sol\":{\"keccak256\":\"0x6f859ac66b474844c08916cd628b116978fb0f211489a5f45b1fb4a2f7db56b1\",\"urls\":[\"bzzr://761ddde6ebe029775b131a31d4f9d4f1c80f4bae7f13b27421d46fcbc036c662\"]},\"project:/contracts/ERC20Detailed.sol\":{\"keccak256\":\"0x20a400fd0fa60651280ee71c2dfbb01bf9cff1d1cb919abc67f1b146d3ef78d4\",\"urls\":[\"bzzr://3c935e2165d6f68cef2cbec90a1c92472134c8ec780b9679accf1f1b9413c521\"]},\"project:/contracts/ERC20Token.sol\":{\"keccak256\":\"0x97cf5e8dbd29a9affaa558f693587613c1d504267720430ab09f56db329ea9cf\",\"urls\":[\"bzzr://c990f61decace26f27e0ed5a27b6179e8efc411a4837dc57c71dbc0619bbb821\"]}},\"version\":1}",
  "bytecode": "0x60806040523480156200001157600080fd5b506040516200129d3803806200129d833981018060405281019080805182019291906020018051820192919060200180519060200190929190505050826003908051906020019062000065929190620000a3565b5081600490805190602001906200007e929190620000a3565b5080600560006101000a81548160ff021916908360ff16021790555050505062000152565b828054600181600116156101000203166002900490600052602060002090601f016020900481019282601f10620000e657805160ff191683800117855562000117565b8280016001018555821562000117579182015b8281111562000116578251825591602001919060010190620000f9565b5b5090506200012691906200012a565b5090565b6200014f91905b808211156200014b57600081600090555060010162000131565b5090565b90565b61113b80620001626000396000f3006080604052600436106100af576000357c0100000000000000000000000000000000000000000000000000000000900463ffffffff16806306fdde03146100b4578063095ea7b31461014457806318160ddd146101a957806323b872dd146101d4578063313ce56714610259578063395093511461028a57806370a08231146102ef57806395d89b4114610346578063a457c2d7146103d6578063a9059cbb1461043b578063dd62ed3e146104a0575b600080fd5b3480156100c057600080fd5b506100c9610517565b6040518080602001828103825283818151815260200191508051906020019080838360005b838110156101095780820151818401526020810190506100ee565b50505050905090810190601f1680156101365780820380516001836020036101000a031916815260200191505b509250505060405180910390f35b34801561015057600080fd5b5061018f600480360381019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190803590602001909291905050506105b9565b604051808215151515815260200191505060405180910390f35b3480156101b557600080fd5b506101be6106e6565b6040518082815260200191505060405180910390f35b3480156101e057600080fd5b5061023f600480360381019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190803573ffffffffffffffffffffffffffffffffffffffff169060200190929190803590602001909291905050506106f0565b604051808215151515815260200191505060405180910390f35b34801561026557600080fd5b5061026e610709565b604051808260ff1660ff16815260200191505060405180910390f35b34801561029657600080fd5b506102d5600480360381019080803573ffffffffffffffffffffffffffffffffffffffff16906020019092919080359060200190929190505050610720565b604051808215151515815260200191505060405180910390f35b3480156102fb57600080fd5b50610330600480360381019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190505050610957565b6040518082815260200191505060405180910390f35b34801561035257600080fd5b5061035b61099f565b6040518080602001828103825283818151815260200191508051906020019080838360005b8381101561039b578082015181840152602081019050610380565b50505050905090810190601f1680156103c85780820380516001836020036101000a031916815260200191505b509250505060405180910390f35b3480156103e257600080fd5b50610421600480360381019080803573ffffffffffffffffffffffffffffffffffffffff16906020019092919080359060200190929190505050610a41565b604051808215151515815260200191505060405180910390f35b34801561044757600080fd5b50610486600480360381019080803573ffffffffffffffffffffffffffffffffffffffff16906020019092919080359060200190929190505050610c78565b604051808215151515815260200191505060405180910390f35b3480156104ac57600080fd5b50610501600480360381019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190803573ffffffffffffffffffffffffffffffffffffffff169060200190929190505050610c8f565b6040518082815260200191505060405180910390f35b606060038054600181600116156101000203166002900480601f0160208091040260200160405190810160405280929190818152602001828054600181600116156101000203166002900480156105af5780601f10610584576101008083540402835291602001916105af565b820191906000526020600020905b81548152906001019060200180831161059257829003601f168201915b5050505050905090565b60008073ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff16141515156105f657600080fd5b81600160003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020819055508273ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff167f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925846040518082815260200191505060405180910390a36001905092915050565b6000600254905090565b60006106fe33858585610d16565b600190509392505050565b6000600560009054906101000a900460ff16905090565b60008073ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff161415151561075d57600080fd5b6107ec82600160003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054610ec190919063ffffffff16565b600160003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020819055508273ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff167f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925600160003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008773ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020546040518082815260200191505060405180910390a36001905092915050565b60008060008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020549050919050565b606060048054600181600116156101000203166002900480601f016020809104026020016040519081016040528092919081815260200182805460018160011615610100020316600290048015610a375780601f10610a0c57610100808354040283529160200191610a37565b820191906000526020600020905b815481529060010190602001808311610a1a57829003601f168201915b5050505050905090565b60008073ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff1614151515610a7e57600080fd5b610b0d82600160003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054610edd90919063ffffffff16565b600160003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020819055508273ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff167f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925600160003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008773ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020546040518082815260200191505060405180910390a36001905092915050565b6000610c85338484610ef6565b6001905092915050565b6000600160008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054905092915050565b600160008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020548111151515610da157600080fd5b610e3081600160008673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008773ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054610edd90919063ffffffff16565b600160008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002081905550610ebb838383610ef6565b50505050565b60008183019050828110151515610ed457fe5b80905092915050565b6000828211151515610eeb57fe5b818303905092915050565b6000808473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020548111151515610f4357600080fd5b600073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff1614151515610f7f57600080fd5b610fd0816000808673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054610edd90919063ffffffff16565b6000808573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002081905550611063816000808573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054610ec190919063ffffffff16565b6000808473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020819055508173ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef836040518082815260200191505060405180910390a35050505600a165627a7a723058209738afeed537e0caac60dbd6f176f7415d7add2a98bf558bc704335b2ab9e9070029",
  "deployedBytecode": "0x6080604052600436106100af576000357c0100000000000000000000000000000000000000000000000000000000900463ffffffff16806306fdde03146100b4578063095ea7b31461014457806318160ddd146101a957806323b872dd146101d4578063313ce56714610259578063395093511461028a57806370a08231146102ef57806395d89b4114610346578063a457c2d7146103d6578063a9059cbb1461043b578063dd62ed3e146104a0575b600080fd5b3480156100c057600080fd5b506100c9610517565b6040518080602001828103825283818151815260200191508051906020019080838360005b838110156101095780820151818401526020810190506100ee565b50505050905090810190601f1680156101365780820380516001836020036101000a031916815260200191505b509250505060405180910390f35b34801561015057600080fd5b5061018f600480360381019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190803590602001909291905050506105b9565b604051808215151515815260200191505060405180910390f35b3480156101b557600080fd5b506101be6106e6565b6040518082815260200191505060405180910390f35b3480156101e057600080fd5b5061023f600480360381019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190803573ffffffffffffffffffffffffffffffffffffffff169060200190929190803590602001909291905050506106f0565b604051808215151515815260200191505060405180910390f35b34801561026557600080fd5b5061026e610709565b604051808260ff1660ff16815260200191505060405180910390f35b34801561029657600080fd5b506102d5600480360381019080803573ffffffffffffffffffffffffffffffffffffffff16906020019092919080359060200190929190505050610720565b604051808215151515815260200191505060405180910390f35b3480156102fb57600080fd5b50610330600480360381019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190505050610957565b6040518082815260200191505060405180910390f35b34801561035257600080fd5b5061035b61099f565b6040518080602001828103825283818151815260200191508051906020019080838360005b8381101561039b578082015181840152602081019050610380565b50505050905090810190601f1680156103c85780820380516001836020036101000a031916815260200191505b509250505060405180910390f35b3480156103e257600080fd5b50610421600480360381019080803573ffffffffffffffffffffffffffffffffffffffff16906020019092919080359060200190929190505050610a41565b604051808215151515815260200191505060405180910390f35b34801561044757600080fd5b50610486600480360381019080803573ffffffffffffffffffffffffffffffffffffffff16906020019092919080359060200190929190505050610c78565b604051808215151515815260200191505060405180910390f35b3480156104ac57600080fd5b50610501600480360381019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190803573ffffffffffffffffffffffffffffffffffffffff169060200190929190505050610c8f565b6040518082815260200191505060405180910390f35b606060038054600181600116156101000203166002900480601f0160208091040260200160405190810160405280929190818152602001828054600181600116156101000203166002900480156105af5780601f10610584576101008083540402835291602001916105af565b820191906000526020600020905b81548152906001019060200180831161059257829003601f168201915b5050505050905090565b60008073ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff16141515156105f657600080fd5b81600160003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020819055508273ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff167f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925846040518082815260200191505060405180910390a36001905092915050565b6000600254905090565b60006106fe33858585610d16565b600190509392505050565b6000600560009054906101000a900460ff16905090565b60008073ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff161415151561075d57600080fd5b6107ec82600160003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054610ec190919063ffffffff16565b600160003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020819055508273ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff167f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925600160003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008773ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020546040518082815260200191505060405180910390a36001905092915050565b60008060008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020549050919050565b606060048054600181600116156101000203166002900480601f016020809104026020016040519081016040528092919081815260200182805460018160011615610100020316600290048015610a375780601f10610a0c57610100808354040283529160200191610a37565b820191906000526020600020905b815481529060010190602001808311610a1a57829003601f168201915b5050505050905090565b60008073ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff1614151515610a7e57600080fd5b610b0d82600160003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054610edd90919063ffffffff16565b600160003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020819055508273ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff167f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925600160003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008773ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020546040518082815260200191505060405180910390a36001905092915050565b6000610c85338484610ef6565b6001905092915050565b6000600160008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054905092915050565b600160008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020548111151515610da157600080fd5b610e3081600160008673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008773ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054610edd90919063ffffffff16565b600160008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002081905550610ebb838383610ef6565b50505050565b60008183019050828110151515610ed457fe5b80905092915050565b6000828211151515610eeb57fe5b818303905092915050565b6000808473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020548111151515610f4357600080fd5b600073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff1614151515610f7f57600080fd5b610fd0816000808673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054610edd90919063ffffffff16565b6000808573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002081905550611063816000808573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054610ec190919063ffffffff16565b6000808473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020819055508173ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef836040518082815260200191505060405180910390a35050505600a165627a7a723058209738afeed537e0caac60dbd6f176f7415d7add2a98bf558bc704335b2ab9e9070029",
  "sourceMap": "299:670:7:-;;;423:138;8:9:-1;5:2;;;30:1;27;20:12;5:2;423:138:7;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;501:4;493:5;:12;;;;;;;;;;;;:::i;:::-;;522:6;512:7;:16;;;;;;;;;;;;:::i;:::-;;547:8;535:9;;:20;;;;;;;;;;;;;;;;;;423:138;;;299:670;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;:::o;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;:::-;;;;;;;",
  "deployedSourceMap": "299:670:7:-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;618:69;;8:9:-1;5:2;;;30:1;27;20:12;5:2;618:69:7;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;23:1:-1;8:100;33:3;30:1;27:10;8:100;;;99:1;94:3;90:11;84:18;80:1;75:3;71:11;64:39;52:2;49:1;45:10;40:15;;8:100;;;12:14;618:69:7;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2049:244:8;;8:9:-1;5:2;;;30:1;27;20:12;5:2;2049:244:8;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;458:91;;8:9:-1;5:2;;;30:1;27;20:12;5:2;458:91:8;;;;;;;;;;;;;;;;;;;;;;;2897:225;;8:9:-1;5:2;;;30:1;27;20:12;5:2;2897:225:8;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;890:76:7;;8:9:-1;5:2;;;30:1;27;20:12;5:2;890:76:7;;;;;;;;;;;;;;;;;;;;;;;;;;;3929:383:8;;8:9:-1;5:2;;;30:1;27;20:12;5:2;3929:383:8;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;769:106;;8:9:-1;5:2;;;30:1;27;20:12;5:2;769:106:8;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;746:73:7;;8:9:-1;5:2;;;30:1;27;20:12;5:2;746:73:7;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;23:1:-1;8:100;33:3;30:1;27:10;8:100;;;99:1;94:3;90:11;84:18;80:1;75:3;71:11;64:39;52:2;49:1;45:10;40:15;;8:100;;;12:14;746:73:7;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;4799:393:8;;8:9:-1;5:2;;;30:1;27;20:12;5:2;4799:393:8;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2468:140;;8:9:-1;5:2;;;30:1;27;20:12;5:2;2468:140:8;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1214:188;;8:9:-1;5:2;;;30:1;27;20:12;5:2;1214:188:8;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;618:69:7;654:6;676:5;669:12;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;618:69;:::o;2049:244:8:-;2114:4;2158:1;2139:21;;:7;:21;;;;2131:30;;;;;;;;2206:5;2174:8;:20;2183:10;2174:20;;;;;;;;;;;;;;;:29;2195:7;2174:29;;;;;;;;;;;;;;;:37;;;;2248:7;2227:36;;2236:10;2227:36;;;2257:5;2227:36;;;;;;;;;;;;;;;;;;2281:4;2274:11;;2049:244;;;;:::o;458:91::-;502:7;529:12;;522:19;;458:91;:::o;2897:225::-;3028:4;3050:42;3064:10;3076:4;3082:2;3086:5;3050:13;:42::i;:::-;3110:4;3103:11;;2897:225;;;;;:::o;890:76:7:-;930:5;951:9;;;;;;;;;;;944:16;;890:76;:::o;3929:383:8:-;4052:4;4101:1;4082:21;;:7;:21;;;;4074:30;;;;;;;;4160:45;4194:10;4160:8;:20;4169:10;4160:20;;;;;;;;;;;;;;;:29;4181:7;4160:29;;;;;;;;;;;;;;;;:33;;:45;;;;:::i;:::-;4117:8;:20;4126:10;4117:20;;;;;;;;;;;;;;;:29;4138:7;4117:29;;;;;;;;;;;;;;;:89;;;;4243:7;4222:60;;4231:10;4222:60;;;4252:8;:20;4261:10;4252:20;;;;;;;;;;;;;;;:29;4273:7;4252:29;;;;;;;;;;;;;;;;4222:60;;;;;;;;;;;;;;;;;;4300:4;4293:11;;3929:383;;;;:::o;769:106::-;824:7;851:9;:16;861:5;851:16;;;;;;;;;;;;;;;;844:23;;769:106;;;:::o;746:73:7:-;784:6;806:7;799:14;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;746:73;:::o;4799:393:8:-;4927:4;4976:1;4957:21;;:7;:21;;;;4949:30;;;;;;;;5035:50;5069:15;5035:8;:20;5044:10;5035:20;;;;;;;;;;;;;;;:29;5056:7;5035:29;;;;;;;;;;;;;;;;:33;;:50;;;;:::i;:::-;4992:8;:20;5001:10;4992:20;;;;;;;;;;;;;;;:29;5013:7;4992:29;;;;;;;;;;;;;;;:94;;;;5123:7;5102:60;;5111:10;5102:60;;;5132:8;:20;5141:10;5132:20;;;;;;;;;;;;;;;:29;5153:7;5132:29;;;;;;;;;;;;;;;;5102:60;;;;;;;;;;;;;;;;;;5180:4;5173:11;;4799:393;;;;:::o;2468:140::-;2529:4;2546:32;2556:10;2568:2;2572:5;2546:9;:32::i;:::-;2596:4;2589:11;;2468:140;;;;:::o;1214:188::-;1338:7;1370:8;:15;1379:5;1370:15;;;;;;;;;;;;;;;:24;1386:7;1370:24;;;;;;;;;;;;;;;;1363:31;;1214:188;;;;:::o;3130:317::-;3305:8;:14;3314:4;3305:14;;;;;;;;;;;;;;;:23;3320:7;3305:23;;;;;;;;;;;;;;;;3296:5;:32;;3288:41;;;;;;;;3368:34;3396:5;3368:8;:14;3377:4;3368:14;;;;;;;;;;;;;;;:23;3383:7;3368:23;;;;;;;;;;;;;;;;:27;;:34;;;;:::i;:::-;3342:8;:14;3351:4;3342:14;;;;;;;;;;;;;;;:23;3357:7;3342:23;;;;;;;;;;;;;;;:60;;;;3413:26;3423:4;3429:2;3433:5;3413:9;:26::i;:::-;3130:317;;;;:::o;1214:123:3:-;1272:9;1297:1;1293;:5;1289:9;;1316:1;1311;:6;;1304:14;;;;;;1331:1;1324:8;;1214:123;;;;:::o;1042:110::-;1100:7;1127:1;1122;:6;;1115:14;;;;;;1146:1;1142;:5;1135:12;;1042:110;;;;:::o;5414:304:8:-;5511:9;:15;5521:4;5511:15;;;;;;;;;;;;;;;;5502:5;:24;;5494:33;;;;;;;;5560:1;5546:16;;:2;:16;;;;5538:25;;;;;;;;5592:26;5612:5;5592:9;:15;5602:4;5592:15;;;;;;;;;;;;;;;;:19;;:26;;;;:::i;:::-;5574:9;:15;5584:4;5574:15;;;;;;;;;;;;;;;:44;;;;5645:24;5663:5;5645:9;:13;5655:2;5645:13;;;;;;;;;;;;;;;;:17;;:24;;;;:::i;:::-;5629:9;:13;5639:2;5629:13;;;;;;;;;;;;;;;:40;;;;5700:2;5685:25;;5694:4;5685:25;;;5704:5;5685:25;;;;;;;;;;;;;;;;;;5414:304;;;:::o",
  "source": "pragma solidity ^0.4.24;\r\n\r\n\r\nimport \"./ERC20Token.sol\";\r\n\r\n/**\r\n * @title ERC20Detailed token\r\n * @dev The decimals are only for visualization purposes.\r\n * All the operations are done using the smallest and indivisible token unit,\r\n * just as on Ethereum all the operations are done in wei.\r\n */\r\ncontract ERC20Detailed is ERC20Token {\r\n  string private _name;\r\n  string private _symbol;\r\n  uint8 private _decimals;\r\n\r\n  constructor(string name, string symbol, uint8 decimals) public {\r\n    _name = name;\r\n    _symbol = symbol;\r\n    _decimals = decimals;\r\n  }\r\n\r\n  /**\r\n   * @return the name of the token.\r\n   */\r\n  function name() public view returns(string) {\r\n    return _name;\r\n  }\r\n\r\n  /**\r\n   * @return the symbol of the token.\r\n   */\r\n  function symbol() public view returns(string) {\r\n    return _symbol;\r\n  }\r\n\r\n  /**\r\n   * @return the number of decimals of the token.\r\n   */\r\n  function decimals() public view returns(uint8) {\r\n    return _decimals;\r\n  }\r\n}\r\n",
  "sourcePath": "C:\\Users\\User\\rsto\\contracts\\ERC20Detailed.sol",
  "ast": {
    "absolutePath": "project:/contracts/ERC20Detailed.sol",
    "exportedSymbols": {
      "ERC20Detailed": [
        825
      ]
    },
    "id": 826,
    "nodeType": "SourceUnit",
    "nodes": [
      {
        "id": 769,
        "literals": [
          "solidity",
          "^",
          "0.4",
          ".24"
        ],
        "nodeType": "PragmaDirective",
        "src": "0:24:7"
      },
      {
        "absolutePath": "project:/contracts/ERC20Token.sol",
        "file": "./ERC20Token.sol",
        "id": 770,
        "nodeType": "ImportDirective",
        "scope": 826,
        "sourceUnit": 1287,
        "src": "30:26:7",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "baseContracts": [
          {
            "arguments": null,
            "baseName": {
              "contractScope": null,
              "id": 771,
              "name": "ERC20Token",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 1286,
              "src": "325:10:7",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_ERC20Token_$1286",
                "typeString": "contract ERC20Token"
              }
            },
            "id": 772,
            "nodeType": "InheritanceSpecifier",
            "src": "325:10:7"
          }
        ],
        "contractDependencies": [
          251,
          1286
        ],
        "contractKind": "contract",
        "documentation": "@title ERC20Detailed token\r\n@dev The decimals are only for visualization purposes.\r\nAll the operations are done using the smallest and indivisible token unit,\r\njust as on Ethereum all the operations are done in wei.\r",
        "fullyImplemented": true,
        "id": 825,
        "linearizedBaseContracts": [
          825,
          1286,
          251
        ],
        "name": "ERC20Detailed",
        "nodeType": "ContractDefinition",
        "nodes": [
          {
            "constant": false,
            "id": 774,
            "name": "_name",
            "nodeType": "VariableDeclaration",
            "scope": 825,
            "src": "341:20:7",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_string_storage",
              "typeString": "string"
            },
            "typeName": {
              "id": 773,
              "name": "string",
              "nodeType": "ElementaryTypeName",
              "src": "341:6:7",
              "typeDescriptions": {
                "typeIdentifier": "t_string_storage_ptr",
                "typeString": "string"
              }
            },
            "value": null,
            "visibility": "private"
          },
          {
            "constant": false,
            "id": 776,
            "name": "_symbol",
            "nodeType": "VariableDeclaration",
            "scope": 825,
            "src": "366:22:7",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_string_storage",
              "typeString": "string"
            },
            "typeName": {
              "id": 775,
              "name": "string",
              "nodeType": "ElementaryTypeName",
              "src": "366:6:7",
              "typeDescriptions": {
                "typeIdentifier": "t_string_storage_ptr",
                "typeString": "string"
              }
            },
            "value": null,
            "visibility": "private"
          },
          {
            "constant": false,
            "id": 778,
            "name": "_decimals",
            "nodeType": "VariableDeclaration",
            "scope": 825,
            "src": "393:23:7",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_uint8",
              "typeString": "uint8"
            },
            "typeName": {
              "id": 777,
              "name": "uint8",
              "nodeType": "ElementaryTypeName",
              "src": "393:5:7",
              "typeDescriptions": {
                "typeIdentifier": "t_uint8",
                "typeString": "uint8"
              }
            },
            "value": null,
            "visibility": "private"
          },
          {
            "body": {
              "id": 799,
              "nodeType": "Block",
              "src": "486:75:7",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 789,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "id": 787,
                      "name": "_name",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 774,
                      "src": "493:5:7",
                      "typeDescriptions": {
                        "typeIdentifier": "t_string_storage",
                        "typeString": "string storage ref"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "id": 788,
                      "name": "name",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 780,
                      "src": "501:4:7",
                      "typeDescriptions": {
                        "typeIdentifier": "t_string_memory_ptr",
                        "typeString": "string memory"
                      }
                    },
                    "src": "493:12:7",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage",
                      "typeString": "string storage ref"
                    }
                  },
                  "id": 790,
                  "nodeType": "ExpressionStatement",
                  "src": "493:12:7"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 793,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "id": 791,
                      "name": "_symbol",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 776,
                      "src": "512:7:7",
                      "typeDescriptions": {
                        "typeIdentifier": "t_string_storage",
                        "typeString": "string storage ref"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "id": 792,
                      "name": "symbol",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 782,
                      "src": "522:6:7",
                      "typeDescriptions": {
                        "typeIdentifier": "t_string_memory_ptr",
                        "typeString": "string memory"
                      }
                    },
                    "src": "512:16:7",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage",
                      "typeString": "string storage ref"
                    }
                  },
                  "id": 794,
                  "nodeType": "ExpressionStatement",
                  "src": "512:16:7"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 797,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "id": 795,
                      "name": "_decimals",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 778,
                      "src": "535:9:7",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint8",
                        "typeString": "uint8"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "id": 796,
                      "name": "decimals",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 784,
                      "src": "547:8:7",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint8",
                        "typeString": "uint8"
                      }
                    },
                    "src": "535:20:7",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint8",
                      "typeString": "uint8"
                    }
                  },
                  "id": 798,
                  "nodeType": "ExpressionStatement",
                  "src": "535:20:7"
                }
              ]
            },
            "documentation": null,
            "id": 800,
            "implemented": true,
            "isConstructor": true,
            "isDeclaredConst": false,
            "modifiers": [],
            "name": "",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 785,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 780,
                  "name": "name",
                  "nodeType": "VariableDeclaration",
                  "scope": 800,
                  "src": "435:11:7",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 779,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "435:6:7",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 782,
                  "name": "symbol",
                  "nodeType": "VariableDeclaration",
                  "scope": 800,
                  "src": "448:13:7",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 781,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "448:6:7",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 784,
                  "name": "decimals",
                  "nodeType": "VariableDeclaration",
                  "scope": 800,
                  "src": "463:14:7",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint8",
                    "typeString": "uint8"
                  },
                  "typeName": {
                    "id": 783,
                    "name": "uint8",
                    "nodeType": "ElementaryTypeName",
                    "src": "463:5:7",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint8",
                      "typeString": "uint8"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "434:44:7"
            },
            "payable": false,
            "returnParameters": {
              "id": 786,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "486:0:7"
            },
            "scope": 825,
            "src": "423:138:7",
            "stateMutability": "nonpayable",
            "superFunction": null,
            "visibility": "public"
          },
          {
            "body": {
              "id": 807,
              "nodeType": "Block",
              "src": "662:25:7",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 805,
                    "name": "_name",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 774,
                    "src": "676:5:7",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage",
                      "typeString": "string storage ref"
                    }
                  },
                  "functionReturnParameters": 804,
                  "id": 806,
                  "nodeType": "Return",
                  "src": "669:12:7"
                }
              ]
            },
            "documentation": "@return the name of the token.\r",
            "id": 808,
            "implemented": true,
            "isConstructor": false,
            "isDeclaredConst": true,
            "modifiers": [],
            "name": "name",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 801,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "631:2:7"
            },
            "payable": false,
            "returnParameters": {
              "id": 804,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 803,
                  "name": "",
                  "nodeType": "VariableDeclaration",
                  "scope": 808,
                  "src": "654:6:7",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 802,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "654:6:7",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "653:8:7"
            },
            "scope": 825,
            "src": "618:69:7",
            "stateMutability": "view",
            "superFunction": null,
            "visibility": "public"
          },
          {
            "body": {
              "id": 815,
              "nodeType": "Block",
              "src": "792:27:7",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 813,
                    "name": "_symbol",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 776,
                    "src": "806:7:7",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage",
                      "typeString": "string storage ref"
                    }
                  },
                  "functionReturnParameters": 812,
                  "id": 814,
                  "nodeType": "Return",
                  "src": "799:14:7"
                }
              ]
            },
            "documentation": "@return the symbol of the token.\r",
            "id": 816,
            "implemented": true,
            "isConstructor": false,
            "isDeclaredConst": true,
            "modifiers": [],
            "name": "symbol",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 809,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "761:2:7"
            },
            "payable": false,
            "returnParameters": {
              "id": 812,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 811,
                  "name": "",
                  "nodeType": "VariableDeclaration",
                  "scope": 816,
                  "src": "784:6:7",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 810,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "784:6:7",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "783:8:7"
            },
            "scope": 825,
            "src": "746:73:7",
            "stateMutability": "view",
            "superFunction": null,
            "visibility": "public"
          },
          {
            "body": {
              "id": 823,
              "nodeType": "Block",
              "src": "937:29:7",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 821,
                    "name": "_decimals",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 778,
                    "src": "951:9:7",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint8",
                      "typeString": "uint8"
                    }
                  },
                  "functionReturnParameters": 820,
                  "id": 822,
                  "nodeType": "Return",
                  "src": "944:16:7"
                }
              ]
            },
            "documentation": "@return the number of decimals of the token.\r",
            "id": 824,
            "implemented": true,
            "isConstructor": false,
            "isDeclaredConst": true,
            "modifiers": [],
            "name": "decimals",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 817,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "907:2:7"
            },
            "payable": false,
            "returnParameters": {
              "id": 820,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 819,
                  "name": "",
                  "nodeType": "VariableDeclaration",
                  "scope": 824,
                  "src": "930:5:7",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint8",
                    "typeString": "uint8"
                  },
                  "typeName": {
                    "id": 818,
                    "name": "uint8",
                    "nodeType": "ElementaryTypeName",
                    "src": "930:5:7",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint8",
                      "typeString": "uint8"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "929:7:7"
            },
            "scope": 825,
            "src": "890:76:7",
            "stateMutability": "view",
            "superFunction": null,
            "visibility": "public"
          }
        ],
        "scope": 826,
        "src": "299:670:7"
      }
    ],
    "src": "0:971:7"
  },
  "legacyAST": {
    "attributes": {
      "absolutePath": "project:/contracts/ERC20Detailed.sol",
      "exportedSymbols": {
        "ERC20Detailed": [
          825
        ]
      }
    },
    "children": [
      {
        "attributes": {
          "literals": [
            "solidity",
            "^",
            "0.4",
            ".24"
          ]
        },
        "id": 769,
        "name": "PragmaDirective",
        "src": "0:24:7"
      },
      {
        "attributes": {
          "SourceUnit": 1287,
          "absolutePath": "project:/contracts/ERC20Token.sol",
          "file": "./ERC20Token.sol",
          "scope": 826,
          "symbolAliases": [
            null
          ],
          "unitAlias": ""
        },
        "id": 770,
        "name": "ImportDirective",
        "src": "30:26:7"
      },
      {
        "attributes": {
          "contractDependencies": [
            251,
            1286
          ],
          "contractKind": "contract",
          "documentation": "@title ERC20Detailed token\r\n@dev The decimals are only for visualization purposes.\r\nAll the operations are done using the smallest and indivisible token unit,\r\njust as on Ethereum all the operations are done in wei.\r",
          "fullyImplemented": true,
          "linearizedBaseContracts": [
            825,
            1286,
            251
          ],
          "name": "ERC20Detailed",
          "scope": 826
        },
        "children": [
          {
            "attributes": {
              "arguments": null
            },
            "children": [
              {
                "attributes": {
                  "contractScope": null,
                  "name": "ERC20Token",
                  "referencedDeclaration": 1286,
                  "type": "contract ERC20Token"
                },
                "id": 771,
                "name": "UserDefinedTypeName",
                "src": "325:10:7"
              }
            ],
            "id": 772,
            "name": "InheritanceSpecifier",
            "src": "325:10:7"
          },
          {
            "attributes": {
              "constant": false,
              "name": "_name",
              "scope": 825,
              "stateVariable": true,
              "storageLocation": "default",
              "type": "string",
              "value": null,
              "visibility": "private"
            },
            "children": [
              {
                "attributes": {
                  "name": "string",
                  "type": "string"
                },
                "id": 773,
                "name": "ElementaryTypeName",
                "src": "341:6:7"
              }
            ],
            "id": 774,
            "name": "VariableDeclaration",
            "src": "341:20:7"
          },
          {
            "attributes": {
              "constant": false,
              "name": "_symbol",
              "scope": 825,
              "stateVariable": true,
              "storageLocation": "default",
              "type": "string",
              "value": null,
              "visibility": "private"
            },
            "children": [
              {
                "attributes": {
                  "name": "string",
                  "type": "string"
                },
                "id": 775,
                "name": "ElementaryTypeName",
                "src": "366:6:7"
              }
            ],
            "id": 776,
            "name": "VariableDeclaration",
            "src": "366:22:7"
          },
          {
            "attributes": {
              "constant": false,
              "name": "_decimals",
              "scope": 825,
              "stateVariable": true,
              "storageLocation": "default",
              "type": "uint8",
              "value": null,
              "visibility": "private"
            },
            "children": [
              {
                "attributes": {
                  "name": "uint8",
                  "type": "uint8"
                },
                "id": 777,
                "name": "ElementaryTypeName",
                "src": "393:5:7"
              }
            ],
            "id": 778,
            "name": "VariableDeclaration",
            "src": "393:23:7"
          },
          {
            "attributes": {
              "constant": false,
              "documentation": null,
              "implemented": true,
              "isConstructor": true,
              "modifiers": [
                null
              ],
              "name": "",
              "payable": false,
              "scope": 825,
              "stateMutability": "nonpayable",
              "superFunction": null,
              "visibility": "public"
            },
            "children": [
              {
                "children": [
                  {
                    "attributes": {
                      "constant": false,
                      "name": "name",
                      "scope": 800,
                      "stateVariable": false,
                      "storageLocation": "default",
                      "type": "string",
                      "value": null,
                      "visibility": "internal"
                    },
                    "children": [
                      {
                        "attributes": {
                          "name": "string",
                          "type": "string"
                        },
                        "id": 779,
                        "name": "ElementaryTypeName",
                        "src": "435:6:7"
                      }
                    ],
                    "id": 780,
                    "name": "VariableDeclaration",
                    "src": "435:11:7"
                  },
                  {
                    "attributes": {
                      "constant": false,
                      "name": "symbol",
                      "scope": 800,
                      "stateVariable": false,
                      "storageLocation": "default",
                      "type": "string",
                      "value": null,
                      "visibility": "internal"
                    },
                    "children": [
                      {
                        "attributes": {
                          "name": "string",
                          "type": "string"
                        },
                        "id": 781,
                        "name": "ElementaryTypeName",
                        "src": "448:6:7"
                      }
                    ],
                    "id": 782,
                    "name": "VariableDeclaration",
                    "src": "448:13:7"
                  },
                  {
                    "attributes": {
                      "constant": false,
                      "name": "decimals",
                      "scope": 800,
                      "stateVariable": false,
                      "storageLocation": "default",
                      "type": "uint8",
                      "value": null,
                      "visibility": "internal"
                    },
                    "children": [
                      {
                        "attributes": {
                          "name": "uint8",
                          "type": "uint8"
                        },
                        "id": 783,
                        "name": "ElementaryTypeName",
                        "src": "463:5:7"
                      }
                    ],
                    "id": 784,
                    "name": "VariableDeclaration",
                    "src": "463:14:7"
                  }
                ],
                "id": 785,
                "name": "ParameterList",
                "src": "434:44:7"
              },
              {
                "attributes": {
                  "parameters": [
                    null
                  ]
                },
                "children": [],
                "id": 786,
                "name": "ParameterList",
                "src": "486:0:7"
              },
              {
                "children": [
                  {
                    "children": [
                      {
                        "attributes": {
                          "argumentTypes": null,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "operator": "=",
                          "type": "string storage ref"
                        },
                        "children": [
                          {
                            "attributes": {
                              "argumentTypes": null,
                              "overloadedDeclarations": [
                                null
                              ],
                              "referencedDeclaration": 774,
                              "type": "string storage ref",
                              "value": "_name"
                            },
                            "id": 787,
                            "name": "Identifier",
                            "src": "493:5:7"
                          },
                          {
                            "attributes": {
                              "argumentTypes": null,
                              "overloadedDeclarations": [
                                null
                              ],
                              "referencedDeclaration": 780,
                              "type": "string memory",
                              "value": "name"
                            },
                            "id": 788,
                            "name": "Identifier",
                            "src": "501:4:7"
                          }
                        ],
                        "id": 789,
                        "name": "Assignment",
                        "src": "493:12:7"
                      }
                    ],
                    "id": 790,
                    "name": "ExpressionStatement",
                    "src": "493:12:7"
                  },
                  {
                    "children": [
                      {
                        "attributes": {
                          "argumentTypes": null,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "operator": "=",
                          "type": "string storage ref"
                        },
                        "children": [
                          {
                            "attributes": {
                              "argumentTypes": null,
                              "overloadedDeclarations": [
                                null
                              ],
                              "referencedDeclaration": 776,
                              "type": "string storage ref",
                              "value": "_symbol"
                            },
                            "id": 791,
                            "name": "Identifier",
                            "src": "512:7:7"
                          },
                          {
                            "attributes": {
                              "argumentTypes": null,
                              "overloadedDeclarations": [
                                null
                              ],
                              "referencedDeclaration": 782,
                              "type": "string memory",
                              "value": "symbol"
                            },
                            "id": 792,
                            "name": "Identifier",
                            "src": "522:6:7"
                          }
                        ],
                        "id": 793,
                        "name": "Assignment",
                        "src": "512:16:7"
                      }
                    ],
                    "id": 794,
                    "name": "ExpressionStatement",
                    "src": "512:16:7"
                  },
                  {
                    "children": [
                      {
                        "attributes": {
                          "argumentTypes": null,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "operator": "=",
                          "type": "uint8"
                        },
                        "children": [
                          {
                            "attributes": {
                              "argumentTypes": null,
                              "overloadedDeclarations": [
                                null
                              ],
                              "referencedDeclaration": 778,
                              "type": "uint8",
                              "value": "_decimals"
                            },
                            "id": 795,
                            "name": "Identifier",
                            "src": "535:9:7"
                          },
                          {
                            "attributes": {
                              "argumentTypes": null,
                              "overloadedDeclarations": [
                                null
                              ],
                              "referencedDeclaration": 784,
                              "type": "uint8",
                              "value": "decimals"
                            },
                            "id": 796,
                            "name": "Identifier",
                            "src": "547:8:7"
                          }
                        ],
                        "id": 797,
                        "name": "Assignment",
                        "src": "535:20:7"
                      }
                    ],
                    "id": 798,
                    "name": "ExpressionStatement",
                    "src": "535:20:7"
                  }
                ],
                "id": 799,
                "name": "Block",
                "src": "486:75:7"
              }
            ],
            "id": 800,
            "name": "FunctionDefinition",
            "src": "423:138:7"
          },
          {
            "attributes": {
              "constant": true,
              "documentation": "@return the name of the token.\r",
              "implemented": true,
              "isConstructor": false,
              "modifiers": [
                null
              ],
              "name": "name",
              "payable": false,
              "scope": 825,
              "stateMutability": "view",
              "superFunction": null,
              "visibility": "public"
            },
            "children": [
              {
                "attributes": {
                  "parameters": [
                    null
                  ]
                },
                "children": [],
                "id": 801,
                "name": "ParameterList",
                "src": "631:2:7"
              },
              {
                "children": [
                  {
                    "attributes": {
                      "constant": false,
                      "name": "",
                      "scope": 808,
                      "stateVariable": false,
                      "storageLocation": "default",
                      "type": "string",
                      "value": null,
                      "visibility": "internal"
                    },
                    "children": [
                      {
                        "attributes": {
                          "name": "string",
                          "type": "string"
                        },
                        "id": 802,
                        "name": "ElementaryTypeName",
                        "src": "654:6:7"
                      }
                    ],
                    "id": 803,
                    "name": "VariableDeclaration",
                    "src": "654:6:7"
                  }
                ],
                "id": 804,
                "name": "ParameterList",
                "src": "653:8:7"
              },
              {
                "children": [
                  {
                    "attributes": {
                      "functionReturnParameters": 804
                    },
                    "children": [
                      {
                        "attributes": {
                          "argumentTypes": null,
                          "overloadedDeclarations": [
                            null
                          ],
                          "referencedDeclaration": 774,
                          "type": "string storage ref",
                          "value": "_name"
                        },
                        "id": 805,
                        "name": "Identifier",
                        "src": "676:5:7"
                      }
                    ],
                    "id": 806,
                    "name": "Return",
                    "src": "669:12:7"
                  }
                ],
                "id": 807,
                "name": "Block",
                "src": "662:25:7"
              }
            ],
            "id": 808,
            "name": "FunctionDefinition",
            "src": "618:69:7"
          },
          {
            "attributes": {
              "constant": true,
              "documentation": "@return the symbol of the token.\r",
              "implemented": true,
              "isConstructor": false,
              "modifiers": [
                null
              ],
              "name": "symbol",
              "payable": false,
              "scope": 825,
              "stateMutability": "view",
              "superFunction": null,
              "visibility": "public"
            },
            "children": [
              {
                "attributes": {
                  "parameters": [
                    null
                  ]
                },
                "children": [],
                "id": 809,
                "name": "ParameterList",
                "src": "761:2:7"
              },
              {
                "children": [
                  {
                    "attributes": {
                      "constant": false,
                      "name": "",
                      "scope": 816,
                      "stateVariable": false,
                      "storageLocation": "default",
                      "type": "string",
                      "value": null,
                      "visibility": "internal"
                    },
                    "children": [
                      {
                        "attributes": {
                          "name": "string",
                          "type": "string"
                        },
                        "id": 810,
                        "name": "ElementaryTypeName",
                        "src": "784:6:7"
                      }
                    ],
                    "id": 811,
                    "name": "VariableDeclaration",
                    "src": "784:6:7"
                  }
                ],
                "id": 812,
                "name": "ParameterList",
                "src": "783:8:7"
              },
              {
                "children": [
                  {
                    "attributes": {
                      "functionReturnParameters": 812
                    },
                    "children": [
                      {
                        "attributes": {
                          "argumentTypes": null,
                          "overloadedDeclarations": [
                            null
                          ],
                          "referencedDeclaration": 776,
                          "type": "string storage ref",
                          "value": "_symbol"
                        },
                        "id": 813,
                        "name": "Identifier",
                        "src": "806:7:7"
                      }
                    ],
                    "id": 814,
                    "name": "Return",
                    "src": "799:14:7"
                  }
                ],
                "id": 815,
                "name": "Block",
                "src": "792:27:7"
              }
            ],
            "id": 816,
            "name": "FunctionDefinition",
            "src": "746:73:7"
          },
          {
            "attributes": {
              "constant": true,
              "documentation": "@return the number of decimals of the token.\r",
              "implemented": true,
              "isConstructor": false,
              "modifiers": [
                null
              ],
              "name": "decimals",
              "payable": false,
              "scope": 825,
              "stateMutability": "view",
              "superFunction": null,
              "visibility": "public"
            },
            "children": [
              {
                "attributes": {
                  "parameters": [
                    null
                  ]
                },
                "children": [],
                "id": 817,
                "name": "ParameterList",
                "src": "907:2:7"
              },
              {
                "children": [
                  {
                    "attributes": {
                      "constant": false,
                      "name": "",
                      "scope": 824,
                      "stateVariable": false,
                      "storageLocation": "default",
                      "type": "uint8",
                      "value": null,
                      "visibility": "internal"
                    },
                    "children": [
                      {
                        "attributes": {
                          "name": "uint8",
                          "type": "uint8"
                        },
                        "id": 818,
                        "name": "ElementaryTypeName",
                        "src": "930:5:7"
                      }
                    ],
                    "id": 819,
                    "name": "VariableDeclaration",
                    "src": "930:5:7"
                  }
                ],
                "id": 820,
                "name": "ParameterList",
                "src": "929:7:7"
              },
              {
                "children": [
                  {
                    "attributes": {
                      "functionReturnParameters": 820
                    },
                    "children": [
                      {
                        "attributes": {
                          "argumentTypes": null,
                          "overloadedDeclarations": [
                            null
                          ],
                          "referencedDeclaration": 778,
                          "type": "uint8",
                          "value": "_decimals"
                        },
                        "id": 821,
                        "name": "Identifier",
                        "src": "951:9:7"
                      }
                    ],
                    "id": 822,
                    "name": "Return",
                    "src": "944:16:7"
                  }
                ],
                "id": 823,
                "name": "Block",
                "src": "937:29:7"
              }
            ],
            "id": 824,
            "name": "FunctionDefinition",
            "src": "890:76:7"
          }
        ],
        "id": 825,
        "name": "ContractDefinition",
        "src": "299:670:7"
      }
    ],
    "id": 826,
    "name": "SourceUnit",
    "src": "0:971:7"
  },
  "compiler": {
    "name": "solc",
    "version": "0.4.24+commit.e67f0147.Emscripten.clang"
  },
  "networks": {},
  "schemaVersion": "3.4.2",
  "updatedAt": "2021-08-07T13:45:05.326Z",
  "devdoc": {
    "methods": {
      "allowance(address,address)": {
        "details": "Function to check the amount of tokens that an owner allowed to a spender.\r",
        "params": {
          "owner": "address The address which owns the funds.\r",
          "spender": "address The address which will spend the funds.\r"
        },
        "return": "A uint256 specifying the amount of tokens still available for the spender.\r"
      },
      "approve(address,uint256)": {
        "details": "Approve the passed address to spend the specified amount of tokens on behalf of msg.sender.\r Beware that changing an allowance with this method brings the risk that someone may use both the old\r and the new allowance by unfortunate transaction ordering. One possible solution to mitigate this\r race condition is to first reduce the spender's allowance to 0 and set the desired value afterwards:\r https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729\r",
        "params": {
          "spender": "The address which will spend the funds.\r",
          "value": "The amount of tokens to be spent.\r"
        }
      },
      "balanceOf(address)": {
        "details": "Gets the balance of the specified address.\r",
        "params": {
          "owner": "The address to query the balance of.\r"
        },
        "return": "An uint256 representing the amount owned by the passed address.\r"
      },
      "decimals()": {
        "return": "the number of decimals of the token.\r"
      },
      "decreaseAllowance(address,uint256)": {
        "details": "Decrease the amount of tokens that an owner allowed to a spender.\r approve should be called when allowed_[_spender] == 0. To decrement\r allowed value is better to use this function to avoid 2 calls (and wait until\r the first transaction is mined)\r From MonolithDAO Token.sol\r",
        "params": {
          "spender": "The address which will spend the funds.\r",
          "subtractedValue": "The amount of tokens to decrease the allowance by.\r"
        }
      },
      "increaseAllowance(address,uint256)": {
        "details": "Increase the amount of tokens that an owner allowed to a spender.\r approve should be called when allowed_[_spender] == 0. To increment\r allowed value is better to use this function to avoid 2 calls (and wait until\r the first transaction is mined)\r From MonolithDAO Token.sol\r",
        "params": {
          "addedValue": "The amount of tokens to increase the allowance by.\r",
          "spender": "The address which will spend the funds.\r"
        }
      },
      "name()": {
        "return": "the name of the token.\r"
      },
      "symbol()": {
        "return": "the symbol of the token.\r"
      },
      "totalSupply()": {
        "details": "Total number of tokens in existence\r"
      },
      "transfer(address,uint256)": {
        "details": "Transfer token for a specified address\r",
        "params": {
          "to": "The address to transfer to.\r",
          "value": "The amount to be transferred.\r"
        }
      },
      "transferFrom(address,address,uint256)": {
        "details": "Transfer tokens from one address to another\r",
        "params": {
          "from": "address The address which you want to send tokens from\r",
          "to": "address The address which you want to transfer to\r",
          "value": "uint256 the amount of tokens to be transferred\r"
        }
      }
    },
    "title": "ERC20Detailed token\r"
  },
  "userdoc": {
    "methods": {}
  }
}