{
  "contractName": "ERC1594",
  "abi": [
    {
      "constant": false,
      "inputs": [
        {
          "name": "spender",
          "type": "address"
        },
        {
          "name": "value",
          "type": "uint256"
        }
      ],
      "name": "approve",
      "outputs": [
        {
          "name": "",
          "type": "bool"
        }
      ],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "totalSupply",
      "outputs": [
        {
          "name": "",
          "type": "uint256"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "name": "from",
          "type": "address"
        },
        {
          "name": "to",
          "type": "address"
        },
        {
          "name": "value",
          "type": "uint256"
        }
      ],
      "name": "transferFrom",
      "outputs": [
        {
          "name": "",
          "type": "bool"
        }
      ],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "name": "spender",
          "type": "address"
        },
        {
          "name": "addedValue",
          "type": "uint256"
        }
      ],
      "name": "increaseAllowance",
      "outputs": [
        {
          "name": "",
          "type": "bool"
        }
      ],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [
        {
          "name": "owner",
          "type": "address"
        }
      ],
      "name": "balanceOf",
      "outputs": [
        {
          "name": "",
          "type": "uint256"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [],
      "name": "renounceOwnership",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "owner",
      "outputs": [
        {
          "name": "",
          "type": "address"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "name": "spender",
          "type": "address"
        },
        {
          "name": "subtractedValue",
          "type": "uint256"
        }
      ],
      "name": "decreaseAllowance",
      "outputs": [
        {
          "name": "",
          "type": "bool"
        }
      ],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "name": "to",
          "type": "address"
        },
        {
          "name": "value",
          "type": "uint256"
        }
      ],
      "name": "transfer",
      "outputs": [
        {
          "name": "",
          "type": "bool"
        }
      ],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [
        {
          "name": "owner",
          "type": "address"
        },
        {
          "name": "spender",
          "type": "address"
        }
      ],
      "name": "allowance",
      "outputs": [
        {
          "name": "",
          "type": "uint256"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "name": "_newOwner",
          "type": "address"
        }
      ],
      "name": "transferOwnership",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "constructor"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "name": "previousOwner",
          "type": "address"
        }
      ],
      "name": "OwnershipRenounced",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "name": "previousOwner",
          "type": "address"
        },
        {
          "indexed": true,
          "name": "newOwner",
          "type": "address"
        }
      ],
      "name": "OwnershipTransferred",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "name": "from",
          "type": "address"
        },
        {
          "indexed": true,
          "name": "to",
          "type": "address"
        },
        {
          "indexed": false,
          "name": "value",
          "type": "uint256"
        }
      ],
      "name": "Transfer",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "name": "owner",
          "type": "address"
        },
        {
          "indexed": true,
          "name": "spender",
          "type": "address"
        },
        {
          "indexed": false,
          "name": "value",
          "type": "uint256"
        }
      ],
      "name": "Approval",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "name": "_operator",
          "type": "address"
        },
        {
          "indexed": true,
          "name": "_to",
          "type": "address"
        },
        {
          "indexed": false,
          "name": "_value",
          "type": "uint256"
        },
        {
          "indexed": false,
          "name": "_data",
          "type": "bytes"
        }
      ],
      "name": "Issued",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "name": "_operator",
          "type": "address"
        },
        {
          "indexed": true,
          "name": "_from",
          "type": "address"
        },
        {
          "indexed": false,
          "name": "_value",
          "type": "uint256"
        },
        {
          "indexed": false,
          "name": "_data",
          "type": "bytes"
        }
      ],
      "name": "Redeemed",
      "type": "event"
    },
    {
      "constant": false,
      "inputs": [
        {
          "name": "_to",
          "type": "address"
        },
        {
          "name": "_value",
          "type": "uint256"
        },
        {
          "name": "_data",
          "type": "bytes"
        }
      ],
      "name": "transferWithData",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "name": "_from",
          "type": "address"
        },
        {
          "name": "_to",
          "type": "address"
        },
        {
          "name": "_value",
          "type": "uint256"
        },
        {
          "name": "_data",
          "type": "bytes"
        }
      ],
      "name": "transferFromWithData",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "isIssuable",
      "outputs": [
        {
          "name": "",
          "type": "bool"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "name": "_tokenHolder",
          "type": "address"
        },
        {
          "name": "_value",
          "type": "uint256"
        },
        {
          "name": "_data",
          "type": "bytes"
        }
      ],
      "name": "issue",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "name": "_value",
          "type": "uint256"
        },
        {
          "name": "_data",
          "type": "bytes"
        }
      ],
      "name": "redeem",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "name": "_tokenHolder",
          "type": "address"
        },
        {
          "name": "_value",
          "type": "uint256"
        },
        {
          "name": "_data",
          "type": "bytes"
        }
      ],
      "name": "redeemFrom",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [
        {
          "name": "_to",
          "type": "address"
        },
        {
          "name": "_value",
          "type": "uint256"
        },
        {
          "name": "_data",
          "type": "bytes"
        }
      ],
      "name": "canTransfer",
      "outputs": [
        {
          "name": "",
          "type": "bool"
        },
        {
          "name": "",
          "type": "bytes1"
        },
        {
          "name": "",
          "type": "bytes32"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [
        {
          "name": "_from",
          "type": "address"
        },
        {
          "name": "_to",
          "type": "address"
        },
        {
          "name": "_value",
          "type": "uint256"
        },
        {
          "name": "_data",
          "type": "bytes"
        }
      ],
      "name": "canTransferFrom",
      "outputs": [
        {
          "name": "",
          "type": "bool"
        },
        {
          "name": "",
          "type": "bytes1"
        },
        {
          "name": "",
          "type": "bytes32"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    }
  ],
  "metadata": "{\"compiler\":{\"version\":\"0.4.24+commit.e67f0147\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"constant\":false,\"inputs\":[{\"name\":\"spender\",\"type\":\"address\"},{\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"_from\",\"type\":\"address\"},{\"name\":\"_to\",\"type\":\"address\"},{\"name\":\"_value\",\"type\":\"uint256\"},{\"name\":\"_data\",\"type\":\"bytes\"}],\"name\":\"canTransferFrom\",\"outputs\":[{\"name\":\"\",\"type\":\"bool\"},{\"name\":\"\",\"type\":\"bytes1\"},{\"name\":\"\",\"type\":\"bytes32\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"_to\",\"type\":\"address\"},{\"name\":\"_value\",\"type\":\"uint256\"},{\"name\":\"_data\",\"type\":\"bytes\"}],\"name\":\"canTransfer\",\"outputs\":[{\"name\":\"\",\"type\":\"bool\"},{\"name\":\"\",\"type\":\"bytes1\"},{\"name\":\"\",\"type\":\"bytes32\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"from\",\"type\":\"address\"},{\"name\":\"to\",\"type\":\"address\"},{\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_to\",\"type\":\"address\"},{\"name\":\"_value\",\"type\":\"uint256\"},{\"name\":\"_data\",\"type\":\"bytes\"}],\"name\":\"transferWithData\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"isIssuable\",\"outputs\":[{\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"spender\",\"type\":\"address\"},{\"name\":\"addedValue\",\"type\":\"uint256\"}],\"name\":\"increaseAllowance\",\"outputs\":[{\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[],\"name\":\"renounceOwnership\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_tokenHolder\",\"type\":\"address\"},{\"name\":\"_value\",\"type\":\"uint256\"},{\"name\":\"_data\",\"type\":\"bytes\"}],\"name\":\"redeemFrom\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"spender\",\"type\":\"address\"},{\"name\":\"subtractedValue\",\"type\":\"uint256\"}],\"name\":\"decreaseAllowance\",\"outputs\":[{\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"to\",\"type\":\"address\"},{\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_tokenHolder\",\"type\":\"address\"},{\"name\":\"_value\",\"type\":\"uint256\"},{\"name\":\"_data\",\"type\":\"bytes\"}],\"name\":\"issue\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"owner\",\"type\":\"address\"},{\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_value\",\"type\":\"uint256\"},{\"name\":\"_data\",\"type\":\"bytes\"}],\"name\":\"redeem\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_from\",\"type\":\"address\"},{\"name\":\"_to\",\"type\":\"address\"},{\"name\":\"_value\",\"type\":\"uint256\"},{\"name\":\"_data\",\"type\":\"bytes\"}],\"name\":\"transferFromWithData\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_newOwner\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"name\":\"previousOwner\",\"type\":\"address\"}],\"name\":\"OwnershipRenounced\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"name\":\"previousOwner\",\"type\":\"address\"},{\"indexed\":true,\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"name\":\"_operator\",\"type\":\"address\"},{\"indexed\":true,\"name\":\"_to\",\"type\":\"address\"},{\"indexed\":false,\"name\":\"_value\",\"type\":\"uint256\"},{\"indexed\":false,\"name\":\"_data\",\"type\":\"bytes\"}],\"name\":\"Issued\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"name\":\"_operator\",\"type\":\"address\"},{\"indexed\":true,\"name\":\"_from\",\"type\":\"address\"},{\"indexed\":false,\"name\":\"_value\",\"type\":\"uint256\"},{\"indexed\":false,\"name\":\"_data\",\"type\":\"bytes\"}],\"name\":\"Redeemed\",\"type\":\"event\"}],\"devdoc\":{\"methods\":{\"allowance(address,address)\":{\"details\":\"Function to check the amount of tokens that an owner allowed to a spender.\\r\",\"params\":{\"owner\":\"address The address which owns the funds.\\r\",\"spender\":\"address The address which will spend the funds.\\r\"},\"return\":\"A uint256 specifying the amount of tokens still available for the spender.\\r\"},\"approve(address,uint256)\":{\"details\":\"Approve the passed address to spend the specified amount of tokens on behalf of msg.sender.\\r Beware that changing an allowance with this method brings the risk that someone may use both the old\\r and the new allowance by unfortunate transaction ordering. One possible solution to mitigate this\\r race condition is to first reduce the spender's allowance to 0 and set the desired value afterwards:\\r https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729\\r\",\"params\":{\"spender\":\"The address which will spend the funds.\\r\",\"value\":\"The amount of tokens to be spent.\\r\"}},\"balanceOf(address)\":{\"details\":\"Gets the balance of the specified address.\\r\",\"params\":{\"owner\":\"The address to query the balance of.\\r\"},\"return\":\"An uint256 representing the amount owned by the passed address.\\r\"},\"canTransfer(address,uint256,bytes)\":{\"params\":{\"_data\":\"The `bytes _data` allows arbitrary data to be submitted alongside the transfer.\\r\",\"_to\":\"address The address which you want to transfer to\\r\",\"_value\":\"uint256 the amount of tokens to be transferred\\r\"},\"return\":\"bool It signifies whether the transaction will be executed or not.\\rbyte Ethereum status code (ESC)\\rbytes32 Application specific reason code \\r\"},\"canTransferFrom(address,address,uint256,bytes)\":{\"params\":{\"_data\":\"The `bytes _data` allows arbitrary data to be submitted alongside the transfer.\\r\",\"_from\":\"address The address which you want to send tokens from\\r\",\"_to\":\"address The address which you want to transfer to\\r\",\"_value\":\"uint256 the amount of tokens to be transferred\\r\"},\"return\":\"bool It signifies whether the transaction will be executed or not.\\rbyte Ethereum status code (ESC)\\rbytes32 Application specific reason code \\r\"},\"decreaseAllowance(address,uint256)\":{\"details\":\"Decrease the amount of tokens that an owner allowed to a spender.\\r approve should be called when allowed_[_spender] == 0. To decrement\\r allowed value is better to use this function to avoid 2 calls (and wait until\\r the first transaction is mined)\\r From MonolithDAO Token.sol\\r\",\"params\":{\"spender\":\"The address which will spend the funds.\\r\",\"subtractedValue\":\"The amount of tokens to decrease the allowance by.\\r\"}},\"increaseAllowance(address,uint256)\":{\"details\":\"Increase the amount of tokens that an owner allowed to a spender.\\r approve should be called when allowed_[_spender] == 0. To increment\\r allowed value is better to use this function to avoid 2 calls (and wait until\\r the first transaction is mined)\\r From MonolithDAO Token.sol\\r\",\"params\":{\"addedValue\":\"The amount of tokens to increase the allowance by.\\r\",\"spender\":\"The address which will spend the funds.\\r\"}},\"isIssuable()\":{\"details\":\"If a token returns FALSE for `isIssuable()` then it MUST always return FALSE in the future.\\r If a token returns FALSE for `isIssuable()` then it MUST never allow additional tokens to be issued.\\r\",\"return\":\"bool `true` signifies the minting is allowed. While `false` denotes the end of minting\\r\"},\"issue(address,uint256,bytes)\":{\"details\":\"It only be called by the token issuer or the operator defined by the issuer. ERC1594 doesn't have\\r have the any logic related to operator but its superset ERC1400 have the operator logic and this function\\r is allowed to call by the operator.\\r\",\"params\":{\"_data\":\"The `bytes _data` allows arbitrary data to be submitted alongside the transfer.\\r\",\"_tokenHolder\":\"The account that will receive the created tokens (account should be whitelisted or KYCed).\\r\",\"_value\":\"The amount of tokens need to be issued\\r\"}},\"redeem(uint256,bytes)\":{\"params\":{\"_data\":\"The `bytes _data` it can be used in the token contract to authenticate the redemption.\\r\",\"_value\":\"The amount of tokens need to be redeemed\\r\"}},\"redeemFrom(address,uint256,bytes)\":{\"details\":\"It is analogy to `transferFrom`\\r\",\"params\":{\"_data\":\"The `bytes _data` it can be used in the token contract to authenticate the redemption.\\r\",\"_tokenHolder\":\"The account whose tokens gets redeemed.\\r\",\"_value\":\"The amount of tokens need to be redeemed\\r\"}},\"renounceOwnership()\":{\"details\":\"Allows the current owner to relinquish control of the contract.\"},\"totalSupply()\":{\"details\":\"Total number of tokens in existence\\r\"},\"transfer(address,uint256)\":{\"details\":\"Transfer token for a specified address\\r\",\"params\":{\"to\":\"The address to transfer to.\\r\",\"value\":\"The amount to be transferred.\\r\"}},\"transferFrom(address,address,uint256)\":{\"details\":\"Transfer tokens from one address to another\\r\",\"params\":{\"from\":\"address The address which you want to send tokens from\\r\",\"to\":\"address The address which you want to transfer to\\r\",\"value\":\"uint256 the amount of tokens to be transferred\\r\"}},\"transferFromWithData(address,address,uint256,bytes)\":{\"details\":\"`msg.sender` MUST have a sufficient `allowance` set and this `allowance` must be debited by the `_value`.\\r\",\"params\":{\"_data\":\"The `bytes _data` allows arbitrary data to be submitted alongside the transfer.\\r for the token contract to interpret or record. This could be signed data authorising the transfer\\r (e.g. a dynamic whitelist) but is flexible enough to accomadate other use-cases.\\r\",\"_from\":\"address The address which you want to send tokens from\\r\",\"_to\":\"address The address which you want to transfer to\\r\",\"_value\":\"uint256 the amount of tokens to be transferred\\r\"}},\"transferOwnership(address)\":{\"details\":\"Allows the current owner to transfer control of the contract to a newOwner.\",\"params\":{\"_newOwner\":\"The address to transfer ownership to.\"}},\"transferWithData(address,uint256,bytes)\":{\"params\":{\"_data\":\"The `bytes _data` allows arbitrary data to be submitted alongside the transfer.\\r for the token contract to interpret or record. This could be signed data authorising the transfer\\r (e.g. a dynamic whitelist) but is flexible enough to accomadate other use-cases.\\r\",\"_to\":\"address The address which you want to transfer to\\r\",\"_value\":\"uint256 the amount of tokens to be transferred\\r\"}}},\"title\":\"Standard implementation of ERC1594 (Subset of ERC1400 https://github.com/ethereum/EIPs/issues/1411)\\r\"},\"userdoc\":{\"methods\":{\"canTransfer(address,uint256,bytes)\":{\"notice\":\"Transfers of securities may fail for a number of reasons. So this function will used to understand the\\r cause of failure by getting the byte value. Which will be the ESC that follows the EIP 1066. ESC can be mapped \\r with a reson string to understand the failure cause, table of Ethereum status code will always reside off-chain\\r\"},\"canTransferFrom(address,address,uint256,bytes)\":{\"notice\":\"Transfers of securities may fail for a number of reasons. So this function will used to understand the\\r cause of failure by getting the byte value. Which will be the ESC that follows the EIP 1066. ESC can be mapped \\r with a reson string to understand the failure cause, table of Ethereum status code will always reside off-chain\\r\"},\"isIssuable()\":{\"notice\":\"A security token issuer can specify that issuance has finished for the token\\r (i.e. no new tokens can be minted or issued).\\r\"},\"issue(address,uint256,bytes)\":{\"notice\":\"This function must be called to increase the total supply (Corresponds to mint function of ERC20).\\r\"},\"redeem(uint256,bytes)\":{\"notice\":\"This function redeem an amount of the token of a msg.sender. For doing so msg.sender may incentivize\\r using different ways that could be implemented with in the `redeem` function definition. But those implementations\\r are out of the scope of the ERC1594. \\r\"},\"redeemFrom(address,uint256,bytes)\":{\"notice\":\"This function redeem an amount of the token of a msg.sender. For doing so msg.sender may incentivize\\r using different ways that could be implemented with in the `redeem` function definition. But those implementations\\r are out of the scope of the ERC1594. \\r\"},\"transferFromWithData(address,address,uint256,bytes)\":{\"notice\":\"Transfer restrictions can take many forms and typically involve on-chain rules or whitelists.\\r However for many types of approved transfers, maintaining an on-chain list of approved transfers can be\\r cumbersome and expensive. An alternative is the co-signing approach, where in addition to the token holder\\r approving a token transfer, and authorised entity provides signed data which further validates the transfer.\\r\"},\"transferWithData(address,uint256,bytes)\":{\"notice\":\"Transfer restrictions can take many forms and typically involve on-chain rules or whitelists.\\r However for many types of approved transfers, maintaining an on-chain list of approved transfers can be\\r cumbersome and expensive. An alternative is the co-signing approach, where in addition to the token holder\\r approving a token transfer, and authorised entity provides signed data which further validates the transfer.\\r\"}}}},\"settings\":{\"compilationTarget\":{\"project:/contracts/ERC1594.sol\":\"ERC1594\"},\"evmVersion\":\"byzantium\",\"libraries\":{},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"eip-spec/contracts/ERC1594/IERC1594.sol\":{\"keccak256\":\"0x365cf41ba72e9d4dbffda08d12db25538a1f84d95ede422eb76941557c2f79f2\",\"urls\":[\"bzzr://2589667f1fdf11396b3f7a3dd88275141696369cce730e20a817a050283e34d9\"]},\"eip-spec/contracts/math/KindMath.sol\":{\"keccak256\":\"0x29e97730207f66ccb1a11f63fb4eb0e1fa791adbc9272d32e37443eb33903178\",\"urls\":[\"bzzr://dc56df52abf103cbaf7079ad8c270edc5e16388abdbc72849d6b11ab4f59720a\"]},\"openzeppelin-contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0xfb503c84ca760818d8e4be66ee5f22d9565362106c82be1d20766261c58c4c0e\",\"urls\":[\"bzzr://c28f5ca4682608dbe95291adcf07dfed134f708cd126b5c8bba43bcbfcefc1cf\"]},\"openzeppelin-solidity/contracts/math/SafeMath.sol\":{\"keccak256\":\"0x6f859ac66b474844c08916cd628b116978fb0f211489a5f45b1fb4a2f7db56b1\",\"urls\":[\"bzzr://761ddde6ebe029775b131a31d4f9d4f1c80f4bae7f13b27421d46fcbc036c662\"]},\"openzeppelin-solidity/contracts/ownership/Ownable.sol\":{\"keccak256\":\"0x2c92ef64d25ddba75a96b518ab3ad5211c4edab898ac2a693c300274ccd0c675\",\"urls\":[\"bzzr://04335d6d25fbf30171a9ce1d458a570e58af99bf356aaeccc5ff1de1a93ae1b6\"]},\"project:/contracts/ERC1594.sol\":{\"keccak256\":\"0x675664e7a62fa66ed306b8dcb22217144fdf18c86fd0dd0afc56d4a14d9f1413\",\"urls\":[\"bzzr://b5997693b655f46dc95667b8aeb21fabf3251a80970cac9c37f79528af49686c\"]},\"project:/contracts/ERC20Token.sol\":{\"keccak256\":\"0x97cf5e8dbd29a9affaa558f693587613c1d504267720430ab09f56db329ea9cf\",\"urls\":[\"bzzr://c990f61decace26f27e0ed5a27b6179e8efc411a4837dc57c71dbc0619bbb821\"]}},\"version\":1}",
  "bytecode": "0x60806040526001600360146101000a81548160ff02191690831515021790555034801561002b57600080fd5b5033600360006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055506121c18061007c6000396000f300608060405260043610610107576000357c0100000000000000000000000000000000000000000000000000000000900463ffffffff168063095ea7b31461010c578063122eb5751461017157806318160ddd146102685780631badb25c1461029357806323b872dd1461036a5780632535f762146103ef5780632f1cae8514610454578063395093511461048357806370a08231146104e8578063715018a61461053f5780638da5cb5b146105565780639675193c146105ad578063a457c2d714610612578063a9059cbb14610677578063bb3acde9146106dc578063dd62ed3e14610741578063e77c646d146107b8578063ee532f31146107fd578063f2fde38b14610882575b600080fd5b34801561011857600080fd5b50610157600480360381019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190803590602001909291905050506108c5565b604051808215151515815260200191505060405180910390f35b34801561017d57600080fd5b506101f4600480360381019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190803573ffffffffffffffffffffffffffffffffffffffff169060200190929190803590602001909291908035906020019082018035906020019190919293919293905050506109f2565b6040518084151515158152602001837effffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff19167effffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff191681526020018260001916600019168152602001935050505060405180910390f35b34801561027457600080fd5b5061027d610c68565b6040518082815260200191505060405180910390f35b34801561029f57600080fd5b506102f6600480360381019080803573ffffffffffffffffffffffffffffffffffffffff16906020019092919080359060200190929190803590602001908201803590602001919091929391929390505050610c72565b6040518084151515158152602001837effffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff19167effffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff191681526020018260001916600019168152602001935050505060405180910390f35b34801561037657600080fd5b506103d5600480360381019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190803573ffffffffffffffffffffffffffffffffffffffff16906020019092919080359060200190929190505050610e2a565b604051808215151515815260200191505060405180910390f35b3480156103fb57600080fd5b50610452600480360381019080803573ffffffffffffffffffffffffffffffffffffffff16906020019092919080359060200190929190803590602001908201803590602001919091929391929390505050610e43565b005b34801561046057600080fd5b50610469610e54565b604051808215151515815260200191505060405180910390f35b34801561048f57600080fd5b506104ce600480360381019080803573ffffffffffffffffffffffffffffffffffffffff16906020019092919080359060200190929190505050610e6b565b604051808215151515815260200191505060405180910390f35b3480156104f457600080fd5b50610529600480360381019080803573ffffffffffffffffffffffffffffffffffffffff1690602001909291905050506110a2565b6040518082815260200191505060405180910390f35b34801561054b57600080fd5b506105546110ea565b005b34801561056257600080fd5b5061056b6111ef565b604051808273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200191505060405180910390f35b3480156105b957600080fd5b50610610600480360381019080803573ffffffffffffffffffffffffffffffffffffffff16906020019092919080359060200190929190803590602001908201803590602001919091929391929390505050611215565b005b34801561061e57600080fd5b5061065d600480360381019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190803590602001909291905050506112ac565b604051808215151515815260200191505060405180910390f35b34801561068357600080fd5b506106c2600480360381019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190803590602001909291905050506114e3565b604051808215151515815260200191505060405180910390f35b3480156106e857600080fd5b5061073f600480360381019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190803590602001909291908035906020019082018035906020019190919293919293905050506114fa565b005b34801561074d57600080fd5b506107a2600480360381019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190803573ffffffffffffffffffffffffffffffffffffffff169060200190929190505050611671565b6040518082815260200191505060405180910390f35b3480156107c457600080fd5b506107fb600480360381019080803590602001909291908035906020019082018035906020019190919293919293905050506116f8565b005b34801561080957600080fd5b50610880600480360381019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190803573ffffffffffffffffffffffffffffffffffffffff1690602001909291908035906020019092919080359060200190820180359060200191909192939192939050505061178f565b005b34801561088e57600080fd5b506108c3600480360381019080803573ffffffffffffffffffffffffffffffffffffffff1690602001909291905050506117a2565b005b60008073ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff161415151561090257600080fd5b81600160003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020819055508273ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff167f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925846040518082815260200191505060405180910390a36001905092915050565b6000806000600160008973ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054861115610ab457600060536000600102817f0100000000000000000000000000000000000000000000000000000000000000029150925092509250610c5d565b856000808a73ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020541015610b3357600060526000600102817f0100000000000000000000000000000000000000000000000000000000000000029150925092509250610c5d565b600073ffffffffffffffffffffffffffffffffffffffff168773ffffffffffffffffffffffffffffffffffffffff161415610ba157600060576000600102817f0100000000000000000000000000000000000000000000000000000000000000029150925092509250610c5d565b610be96000808973ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020548761180a565b1515610c2857600060506000600102817f0100000000000000000000000000000000000000000000000000000000000000029150925092509250610c5d565b600160516000600102817f01000000000000000000000000000000000000000000000000000000000000000291509250925092505b955095509592505050565b6000600254905090565b6000806000856000803373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020541015610cf657600060526000600102817f0100000000000000000000000000000000000000000000000000000000000000029150925092509250610e20565b600073ffffffffffffffffffffffffffffffffffffffff168773ffffffffffffffffffffffffffffffffffffffff161415610d6457600060576000600102817f0100000000000000000000000000000000000000000000000000000000000000029150925092509250610e20565b610dac6000808973ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020548761180a565b1515610deb57600060506000600102817f0100000000000000000000000000000000000000000000000000000000000000029150925092509250610e20565b600160516000600102817f01000000000000000000000000000000000000000000000000000000000000000291509250925092505b9450945094915050565b6000610e383385858561182f565b600190509392505050565b610e4e3385856119da565b50505050565b6000600360149054906101000a900460ff16905090565b60008073ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff1614151515610ea857600080fd5b610f3782600160003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054611bf390919063ffffffff16565b600160003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020819055508273ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff167f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925600160003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008773ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020546040518082815260200191505060405180910390a36001905092915050565b60008060008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020549050919050565b600360009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff1614151561114657600080fd5b600360009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff167ff8df31144d9c2f0f6b59d69b8b98abd5459d07f2742c4df920b25aae33c6482060405160405180910390a26000600360006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550565b600360009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b61121f8484611c0f565b8373ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff167fb7d0d6b60740753e9f16692a2f479472a1385aec2420fa43225b02f2ffa1afe785858560405180848152602001806020018281038252848482818152602001925080828437820191505094505050505060405180910390a350505050565b60008073ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff16141515156112e957600080fd5b61137882600160003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054611db790919063ffffffff16565b600160003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020819055508273ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff167f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925600160003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008773ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020546040518082815260200191505060405180910390a36001905092915050565b60006114f03384846119da565b6001905092915050565b600360009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff1614151561155657600080fd5b600360149054906101000a900460ff1615156115da576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260128152602001807f49737375616e636520697320636c6f736564000000000000000000000000000081525060200191505060405180910390fd5b6115e48484611dd0565b8373ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff167f0e9905d62635f049c2f4e11678ebf9dc3d1f8c4a653e290759b772e47ba00d0085858560405180848152602001806020018281038252848482818152602001925080828437820191505094505050505060405180910390a350505050565b6000600160008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054905092915050565b6117023384611f0e565b3373ffffffffffffffffffffffffffffffffffffffff16600073ffffffffffffffffffffffffffffffffffffffff167fb7d0d6b60740753e9f16692a2f479472a1385aec2420fa43225b02f2ffa1afe785858560405180848152602001806020018281038252848482818152602001925080828437820191505094505050505060405180910390a3505050565b61179b3386868661182f565b5050505050565b600360009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff161415156117fe57600080fd5b61180781612099565b50565b6000808284019050838110156118235760009150611828565b600191505b5092915050565b600160008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000205481111515156118ba57600080fd5b61194981600160008673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008773ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054611db790919063ffffffff16565b600160008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020819055506119d48383836119da565b50505050565b6000808473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020548111151515611a2757600080fd5b600073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff1614151515611a6357600080fd5b611ab4816000808673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054611db790919063ffffffff16565b6000808573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002081905550611b47816000808573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054611bf390919063ffffffff16565b6000808473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020819055508173ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef836040518082815260200191505060405180910390a3505050565b60008183019050828110151515611c0657fe5b80905092915050565b600160008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020548111151515611c9a57600080fd5b611d2981600160008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054611db790919063ffffffff16565b600160008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002081905550611db38282611f0e565b5050565b6000828211151515611dc557fe5b818303905092915050565b60008273ffffffffffffffffffffffffffffffffffffffff1614151515611df657600080fd5b611e0b81600254611bf390919063ffffffff16565b600281905550611e62816000808573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054611bf390919063ffffffff16565b6000808473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020819055508173ffffffffffffffffffffffffffffffffffffffff16600073ffffffffffffffffffffffffffffffffffffffff167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef836040518082815260200191505060405180910390a35050565b60008273ffffffffffffffffffffffffffffffffffffffff1614151515611f3457600080fd5b6000808373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020548111151515611f8157600080fd5b611f9681600254611db790919063ffffffff16565b600281905550611fed816000808573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054611db790919063ffffffff16565b6000808473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002081905550600073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef836040518082815260200191505060405180910390a35050565b600073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff16141515156120d557600080fd5b8073ffffffffffffffffffffffffffffffffffffffff16600360009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e060405160405180910390a380600360006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550505600a165627a7a72305820de48c91803de378acdba875b48e337e1fc189e98ac6d8e37a96014cb32569ef10029",
  "deployedBytecode": "0x608060405260043610610107576000357c0100000000000000000000000000000000000000000000000000000000900463ffffffff168063095ea7b31461010c578063122eb5751461017157806318160ddd146102685780631badb25c1461029357806323b872dd1461036a5780632535f762146103ef5780632f1cae8514610454578063395093511461048357806370a08231146104e8578063715018a61461053f5780638da5cb5b146105565780639675193c146105ad578063a457c2d714610612578063a9059cbb14610677578063bb3acde9146106dc578063dd62ed3e14610741578063e77c646d146107b8578063ee532f31146107fd578063f2fde38b14610882575b600080fd5b34801561011857600080fd5b50610157600480360381019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190803590602001909291905050506108c5565b604051808215151515815260200191505060405180910390f35b34801561017d57600080fd5b506101f4600480360381019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190803573ffffffffffffffffffffffffffffffffffffffff169060200190929190803590602001909291908035906020019082018035906020019190919293919293905050506109f2565b6040518084151515158152602001837effffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff19167effffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff191681526020018260001916600019168152602001935050505060405180910390f35b34801561027457600080fd5b5061027d610c68565b6040518082815260200191505060405180910390f35b34801561029f57600080fd5b506102f6600480360381019080803573ffffffffffffffffffffffffffffffffffffffff16906020019092919080359060200190929190803590602001908201803590602001919091929391929390505050610c72565b6040518084151515158152602001837effffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff19167effffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff191681526020018260001916600019168152602001935050505060405180910390f35b34801561037657600080fd5b506103d5600480360381019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190803573ffffffffffffffffffffffffffffffffffffffff16906020019092919080359060200190929190505050610e2a565b604051808215151515815260200191505060405180910390f35b3480156103fb57600080fd5b50610452600480360381019080803573ffffffffffffffffffffffffffffffffffffffff16906020019092919080359060200190929190803590602001908201803590602001919091929391929390505050610e43565b005b34801561046057600080fd5b50610469610e54565b604051808215151515815260200191505060405180910390f35b34801561048f57600080fd5b506104ce600480360381019080803573ffffffffffffffffffffffffffffffffffffffff16906020019092919080359060200190929190505050610e6b565b604051808215151515815260200191505060405180910390f35b3480156104f457600080fd5b50610529600480360381019080803573ffffffffffffffffffffffffffffffffffffffff1690602001909291905050506110a2565b6040518082815260200191505060405180910390f35b34801561054b57600080fd5b506105546110ea565b005b34801561056257600080fd5b5061056b6111ef565b604051808273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200191505060405180910390f35b3480156105b957600080fd5b50610610600480360381019080803573ffffffffffffffffffffffffffffffffffffffff16906020019092919080359060200190929190803590602001908201803590602001919091929391929390505050611215565b005b34801561061e57600080fd5b5061065d600480360381019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190803590602001909291905050506112ac565b604051808215151515815260200191505060405180910390f35b34801561068357600080fd5b506106c2600480360381019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190803590602001909291905050506114e3565b604051808215151515815260200191505060405180910390f35b3480156106e857600080fd5b5061073f600480360381019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190803590602001909291908035906020019082018035906020019190919293919293905050506114fa565b005b34801561074d57600080fd5b506107a2600480360381019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190803573ffffffffffffffffffffffffffffffffffffffff169060200190929190505050611671565b6040518082815260200191505060405180910390f35b3480156107c457600080fd5b506107fb600480360381019080803590602001909291908035906020019082018035906020019190919293919293905050506116f8565b005b34801561080957600080fd5b50610880600480360381019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190803573ffffffffffffffffffffffffffffffffffffffff1690602001909291908035906020019092919080359060200190820180359060200191909192939192939050505061178f565b005b34801561088e57600080fd5b506108c3600480360381019080803573ffffffffffffffffffffffffffffffffffffffff1690602001909291905050506117a2565b005b60008073ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff161415151561090257600080fd5b81600160003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020819055508273ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff167f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925846040518082815260200191505060405180910390a36001905092915050565b6000806000600160008973ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054861115610ab457600060536000600102817f0100000000000000000000000000000000000000000000000000000000000000029150925092509250610c5d565b856000808a73ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020541015610b3357600060526000600102817f0100000000000000000000000000000000000000000000000000000000000000029150925092509250610c5d565b600073ffffffffffffffffffffffffffffffffffffffff168773ffffffffffffffffffffffffffffffffffffffff161415610ba157600060576000600102817f0100000000000000000000000000000000000000000000000000000000000000029150925092509250610c5d565b610be96000808973ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020548761180a565b1515610c2857600060506000600102817f0100000000000000000000000000000000000000000000000000000000000000029150925092509250610c5d565b600160516000600102817f01000000000000000000000000000000000000000000000000000000000000000291509250925092505b955095509592505050565b6000600254905090565b6000806000856000803373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020541015610cf657600060526000600102817f0100000000000000000000000000000000000000000000000000000000000000029150925092509250610e20565b600073ffffffffffffffffffffffffffffffffffffffff168773ffffffffffffffffffffffffffffffffffffffff161415610d6457600060576000600102817f0100000000000000000000000000000000000000000000000000000000000000029150925092509250610e20565b610dac6000808973ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020548761180a565b1515610deb57600060506000600102817f0100000000000000000000000000000000000000000000000000000000000000029150925092509250610e20565b600160516000600102817f01000000000000000000000000000000000000000000000000000000000000000291509250925092505b9450945094915050565b6000610e383385858561182f565b600190509392505050565b610e4e3385856119da565b50505050565b6000600360149054906101000a900460ff16905090565b60008073ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff1614151515610ea857600080fd5b610f3782600160003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054611bf390919063ffffffff16565b600160003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020819055508273ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff167f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925600160003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008773ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020546040518082815260200191505060405180910390a36001905092915050565b60008060008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020549050919050565b600360009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff1614151561114657600080fd5b600360009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff167ff8df31144d9c2f0f6b59d69b8b98abd5459d07f2742c4df920b25aae33c6482060405160405180910390a26000600360006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550565b600360009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b61121f8484611c0f565b8373ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff167fb7d0d6b60740753e9f16692a2f479472a1385aec2420fa43225b02f2ffa1afe785858560405180848152602001806020018281038252848482818152602001925080828437820191505094505050505060405180910390a350505050565b60008073ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff16141515156112e957600080fd5b61137882600160003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054611db790919063ffffffff16565b600160003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020819055508273ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff167f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925600160003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008773ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020546040518082815260200191505060405180910390a36001905092915050565b60006114f03384846119da565b6001905092915050565b600360009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff1614151561155657600080fd5b600360149054906101000a900460ff1615156115da576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260128152602001807f49737375616e636520697320636c6f736564000000000000000000000000000081525060200191505060405180910390fd5b6115e48484611dd0565b8373ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff167f0e9905d62635f049c2f4e11678ebf9dc3d1f8c4a653e290759b772e47ba00d0085858560405180848152602001806020018281038252848482818152602001925080828437820191505094505050505060405180910390a350505050565b6000600160008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054905092915050565b6117023384611f0e565b3373ffffffffffffffffffffffffffffffffffffffff16600073ffffffffffffffffffffffffffffffffffffffff167fb7d0d6b60740753e9f16692a2f479472a1385aec2420fa43225b02f2ffa1afe785858560405180848152602001806020018281038252848482818152602001925080828437820191505094505050505060405180910390a3505050565b61179b3386868661182f565b5050505050565b600360009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff161415156117fe57600080fd5b61180781612099565b50565b6000808284019050838110156118235760009150611828565b600191505b5092915050565b600160008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000205481111515156118ba57600080fd5b61194981600160008673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008773ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054611db790919063ffffffff16565b600160008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020819055506119d48383836119da565b50505050565b6000808473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020548111151515611a2757600080fd5b600073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff1614151515611a6357600080fd5b611ab4816000808673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054611db790919063ffffffff16565b6000808573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002081905550611b47816000808573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054611bf390919063ffffffff16565b6000808473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020819055508173ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef836040518082815260200191505060405180910390a3505050565b60008183019050828110151515611c0657fe5b80905092915050565b600160008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020548111151515611c9a57600080fd5b611d2981600160008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054611db790919063ffffffff16565b600160008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002081905550611db38282611f0e565b5050565b6000828211151515611dc557fe5b818303905092915050565b60008273ffffffffffffffffffffffffffffffffffffffff1614151515611df657600080fd5b611e0b81600254611bf390919063ffffffff16565b600281905550611e62816000808573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054611bf390919063ffffffff16565b6000808473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020819055508173ffffffffffffffffffffffffffffffffffffffff16600073ffffffffffffffffffffffffffffffffffffffff167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef836040518082815260200191505060405180910390a35050565b60008273ffffffffffffffffffffffffffffffffffffffff1614151515611f3457600080fd5b6000808373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020548111151515611f8157600080fd5b611f9681600254611db790919063ffffffff16565b600281905550611fed816000808573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054611db790919063ffffffff16565b6000808473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002081905550600073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef836040518082815260200191505060405180910390a35050565b600073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff16141515156120d557600080fd5b8073ffffffffffffffffffffffffffffffffffffffff16600360009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e060405160405180910390a380600360006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550505600a165627a7a72305820de48c91803de378acdba875b48e337e1fc189e98ac6d8e37a96014cb32569ef10029",
  "sourceMap": "404:8951:5:-;;;878:4;853:29;;;;;;;;;;;;;;;;;;;;916:32;8:9:-1;5:2;;;30:1;27;20:12;5:2;916:32:5;575:10:4;567:5;;:18;;;;;;;;;;;;;;;;;;404:8951:5;;;;;;",
  "deployedSourceMap": "404:8951:5:-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2049:244:8;;8:9:-1;5:2;;;30:1;27;20:12;5:2;2049:244:8;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;8724:626:5;;8:9:-1;5:2;;;30:1;27;20:12;5:2;8724:626:5;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;458:91:8;;8:9:-1;5:2;;;30:1;27;20:12;5:2;458:91:8;;;;;;;;;;;;;;;;;;;;;;;7328:507:5;;8:9:-1;5:2;;;30:1;27;20:12;5:2;7328:507:5;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2897:225:8;;8:9:-1;5:2;;;30:1;27;20:12;5:2;2897:225:8;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1866:191:5;;8:9:-1;5:2;;;30:1;27;20:12;5:2;1866:191:5;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;3877:85;;8:9:-1;5:2;;;30:1;27;20:12;5:2;3877:85:5;;;;;;;;;;;;;;;;;;;;;;;;;;;3929:383:8;;8:9:-1;5:2;;;30:1;27;20:12;5:2;3929:383:8;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;769:106;;8:9:-1;5:2;;;30:1;27;20:12;5:2;769:106:8;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;827:111:4;;8:9:-1;5:2;;;30:1;27;20:12;5:2;827:111:4;;;;;;238:20;;8:9:-1;5:2;;;30:1;27;20:12;5:2;238:20:4;;;;;;;;;;;;;;;;;;;;;;;;;;;6259:256:5;;8:9:-1;5:2;;;30:1;27;20:12;5:2;6259:256:5;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;4799:393:8;;8:9:-1;5:2;;;30:1;27;20:12;5:2;4799:393:8;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2468:140;;8:9:-1;5:2;;;30:1;27;20:12;5:2;2468:140:8;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;4653:305:5;;8:9:-1;5:2;;;30:1;27;20:12;5:2;4653:305:5;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1214:188:8;;8:9:-1;5:2;;;30:1;27;20:12;5:2;1214:188:8;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;5441:222:5;;8:9:-1;5:2;;;30:1;27;20:12;5:2;5441:222:5;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;3166:221;;8:9:-1;5:2;;;30:1;27;20:12;5:2;3166:221:5;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1100:103:4;;8:9:-1;5:2;;;30:1;27;20:12;5:2;1100:103:4;;;;;;;;;;;;;;;;;;;;;;;;;;;;2049:244:8;2114:4;2158:1;2139:21;;:7;:21;;;;2131:30;;;;;;;;2206:5;2174:8;:20;2183:10;2174:20;;;;;;;;;;;;;;;:29;2195:7;2174:29;;;;;;;;;;;;;;;:37;;;;2248:7;2227:36;;2236:10;2227:36;;;2257:5;2227:36;;;;;;;;;;;;;;;;;;2281:4;2274:11;;2049:244;;;;:::o;8724:626:5:-;8829:4;8835;8841:7;8935:8;:15;8944:5;8935:15;;;;;;;;;;;;;;;:27;8951:10;8935:27;;;;;;;;;;;;;;;;8926:6;:36;8922:378;;;8985:5;8992:4;9006:1;8998:10;;8977:32;;;;;;;;;;;;;8922:378;9050:6;9031:9;:16;9041:5;9031:16;;;;;;;;;;;;;;;;:25;9027:273;;;9079:5;9086:4;9100:1;9092:10;;9071:32;;;;;;;;;;;;;9027:273;9140:1;9125:17;;:3;:17;;;9121:179;;;9165:5;9172:4;9186:1;9178:10;;9157:32;;;;;;;;;;;;;9121:179;9212:41;9230:9;:14;9240:3;9230:14;;;;;;;;;;;;;;;;9246:6;9212:17;:41::i;:::-;9211:42;9207:93;;;9276:5;9283:4;9297:1;9289:10;;9268:32;;;;;;;;;;;;;9207:93;9319:4;9325;9339:1;9331:10;;9311:31;;;;;;;;;;;8724:626;;;;;;;;;;:::o;458:91:8:-;502:7;529:12;;522:19;;458:91;:::o;7328:507:5:-;7414:4;7420;7426:7;7535:6;7511:9;:21;7521:10;7511:21;;;;;;;;;;;;;;;;:30;7507:278;;;7564:5;7571:4;7585:1;7577:10;;7556:32;;;;;;;;;;;;;7507:278;7625:1;7610:17;;:3;:17;;;7606:179;;;7650:5;7657:4;7671:1;7663:10;;7642:32;;;;;;;;;;;;;7606:179;7697:41;7715:9;:14;7725:3;7715:14;;;;;;;;;;;;;;;;7731:6;7697:17;:41::i;:::-;7696:42;7692:93;;;7761:5;7768:4;7782:1;7774:10;;7753:32;;;;;;;;;;;;;7692:93;7804:4;7810;7824:1;7816:10;;7796:31;;;;;;;;;;;7328:507;;;;;;;;;:::o;2897:225:8:-;3028:4;3050:42;3064:10;3076:4;3082:2;3086:5;3050:13;:42::i;:::-;3110:4;3103:11;;2897:225;;;;;:::o;1866:191:5:-;2015:34;2025:10;2037:3;2042:6;2015:9;:34::i;:::-;1866:191;;;;:::o;3877:85::-;3922:4;3946:8;;;;;;;;;;;3939:15;;3877:85;:::o;3929:383:8:-;4052:4;4101:1;4082:21;;:7;:21;;;;4074:30;;;;;;;;4160:45;4194:10;4160:8;:20;4169:10;4160:20;;;;;;;;;;;;;;;:29;4181:7;4160:29;;;;;;;;;;;;;;;;:33;;:45;;;;:::i;:::-;4117:8;:20;4126:10;4117:20;;;;;;;;;;;;;;;:29;4138:7;4117:29;;;;;;;;;;;;;;;:89;;;;4243:7;4222:60;;4231:10;4222:60;;;4252:8;:20;4261:10;4252:20;;;;;;;;;;;;;;;:29;4273:7;4252:29;;;;;;;;;;;;;;;;4222:60;;;;;;;;;;;;;;;;;;4300:4;4293:11;;3929:383;;;;:::o;769:106::-;824:7;851:9;:16;861:5;851:16;;;;;;;;;;;;;;;;844:23;;769:106;;;:::o;827:111:4:-;719:5;;;;;;;;;;;705:19;;:10;:19;;;697:28;;;;;;;;903:5;;;;;;;;;;;884:25;;;;;;;;;;;;931:1;915:5;;:18;;;;;;;;;;;;;;;;;;827:111::o;238:20::-;;;;;;;;;;;;;:::o;6259:256:5:-;6411:31;6421:12;6435:6;6411:9;:31::i;:::-;6479:12;6458:49;;6467:10;6458:49;;;6493:6;6501:5;;6458:49;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;6259:256;;;;:::o;4799:393:8:-;4927:4;4976:1;4957:21;;:7;:21;;;;4949:30;;;;;;;;5035:50;5069:15;5035:8;:20;5044:10;5035:20;;;;;;;;;;;;;;;:29;5056:7;5035:29;;;;;;;;;;;;;;;;:33;;:50;;;;:::i;:::-;4992:8;:20;5001:10;4992:20;;;;;;;;;;;;;;;:29;5013:7;4992:29;;;;;;;;;;;;;;;:94;;;;5123:7;5102:60;;5111:10;5102:60;;;5132:8;:20;5141:10;5132:20;;;;;;;;;;;;;;;:29;5153:7;5132:29;;;;;;;;;;;;;;;;5102:60;;;;;;;;;;;;;;;;;;5180:4;5173:11;;4799:393;;;;:::o;2468:140::-;2529:4;2546:32;2556:10;2568:2;2572:5;2546:9;:32::i;:::-;2596:4;2589:11;;2468:140;;;;:::o;4653:305:5:-;719:5:4;;;;;;;;;;;705:19;;:10;:19;;;697:28;;;;;;;;4818:8:5;;;;;;;;;;;4810:39;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;4860:27;4866:12;4880:6;4860:5;:27::i;:::-;4922:12;4903:47;;4910:10;4903:47;;;4936:6;4944:5;;4903:47;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;4653:305;;;;:::o;1214:188:8:-;1338:7;1370:8;:15;1379:5;1370:15;;;;;;;;;;;;;;;:24;1386:7;1370:24;;;;;;;;;;;;;;;;1363:31;;1214:188;;;;:::o;5441:222:5:-;5567:25;5573:10;5585:6;5567:5;:25::i;:::-;5629:10;5608:47;;5625:1;5608:47;;;5641:6;5649:5;;5608:47;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;5441:222;;;:::o;3166:221::-;3334:45;3348:10;3360:5;3367:3;3372:6;3334:13;:45::i;:::-;3166:221;;;;;:::o;1100:103:4:-;719:5;;;;;;;;;;;705:19;;:10;:19;;;697:28;;;;;;;;1169:29;1188:9;1169:18;:29::i;:::-;1100:103;:::o;1159:186:1:-;1222:4;1238:9;1254:1;1250;:5;1238:17;;1273:1;1269;:5;1265:73;;;1295:5;1288:12;;;;1265:73;1334:4;1327:11;;1159:186;;;;;;:::o;3130:317:8:-;3305:8;:14;3314:4;3305:14;;;;;;;;;;;;;;;:23;3320:7;3305:23;;;;;;;;;;;;;;;;3296:5;:32;;3288:41;;;;;;;;3368:34;3396:5;3368:8;:14;3377:4;3368:14;;;;;;;;;;;;;;;:23;3383:7;3368:23;;;;;;;;;;;;;;;;:27;;:34;;;;:::i;:::-;3342:8;:14;3351:4;3342:14;;;;;;;;;;;;;;;:23;3357:7;3342:23;;;;;;;;;;;;;;;:60;;;;3413:26;3423:4;3429:2;3433:5;3413:9;:26::i;:::-;3130:317;;;;:::o;5414:304::-;5511:9;:15;5521:4;5511:15;;;;;;;;;;;;;;;;5502:5;:24;;5494:33;;;;;;;;5560:1;5546:16;;:2;:16;;;;5538:25;;;;;;;;5592:26;5612:5;5592:9;:15;5602:4;5592:15;;;;;;;;;;;;;;;;:19;;:26;;;;:::i;:::-;5574:9;:15;5584:4;5574:15;;;;;;;;;;;;;;;:44;;;;5645:24;5663:5;5645:9;:13;5655:2;5645:13;;;;;;;;;;;;;;;;:17;;:24;;;;:::i;:::-;5629:9;:13;5639:2;5629:13;;;;;;;;;;;;;;;:40;;;;5700:2;5685:25;;5694:4;5685:25;;;5704:5;5685:25;;;;;;;;;;;;;;;;;;5414:304;;;:::o;1214:123:3:-;1272:9;1297:1;1293;:5;1289:9;;1316:1;1311;:6;;1304:14;;;;;;1331:1;1324:8;;1214:123;;;;:::o;7200:422:8:-;7288:8;:17;7297:7;7288:17;;;;;;;;;;;;;;;:29;7306:10;7288:29;;;;;;;;;;;;;;;;7279:5;:38;;7271:47;;;;;;;;7532:50;7576:5;7532:8;:17;7541:7;7532:17;;;;;;;;;;;;;;;:29;7550:10;7532:29;;;;;;;;;;;;;;;;:33;;:50;;;;:::i;:::-;7500:8;:17;7509:7;7500:17;;;;;;;;;;;;;;;:29;7518:10;7500:29;;;;;;;;;;;;;;;:82;;;;7593:21;7599:7;7608:5;7593;:21::i;:::-;7200:422;;:::o;1042:110:3:-;1100:7;1127:1;1122;:6;;1115:14;;;;;;1146:1;1142;:5;1135:12;;1042:110;;;;:::o;6070:258:8:-;6156:1;6145:7;:12;;;;6137:21;;;;;;;;6184:23;6201:5;6184:12;;:16;;:23;;;;:::i;:::-;6169:12;:38;;;;6239:29;6262:5;6239:9;:18;6249:7;6239:18;;;;;;;;;;;;;;;;:22;;:29;;;;:::i;:::-;6218:9;:18;6228:7;6218:18;;;;;;;;;;;;;;;:50;;;;6305:7;6284:36;;6301:1;6284:36;;;6314:5;6284:36;;;;;;;;;;;;;;;;;;6070:258;;:::o;6562:307::-;6648:1;6637:7;:12;;;;6629:21;;;;;;;;6678:9;:18;6688:7;6678:18;;;;;;;;;;;;;;;;6669:5;:27;;6661:36;;;;;;;;6725:23;6742:5;6725:12;;:16;;:23;;;;:::i;:::-;6710:12;:38;;;;6780:29;6803:5;6780:9;:18;6790:7;6780:18;;;;;;;;;;;;;;;;:22;;:29;;;;:::i;:::-;6759:9;:18;6769:7;6759:18;;;;;;;;;;;;;;;:50;;;;6851:1;6825:36;;6834:7;6825:36;;;6855:5;6825:36;;;;;;;;;;;;;;;;;;6562:307;;:::o;1338:171:4:-;1429:1;1408:23;;:9;:23;;;;1400:32;;;;;;;;1471:9;1443:38;;1464:5;;;;;;;;;;;1443:38;;;;;;;;;;;;1495:9;1487:5;;:17;;;;;;;;;;;;;;;;;;1338:171;:::o",
  "source": "pragma solidity ^0.4.24;\r\n\r\nimport \"eip-spec/contracts/ERC1594/IERC1594.sol\";\r\nimport \"./ERC20Token.sol\";\r\nimport \"eip-spec/contracts/math/KindMath.sol\";\r\nimport \"openzeppelin-solidity/contracts/ownership/Ownable.sol\";\r\nimport \"openzeppelin-solidity/contracts/math/SafeMath.sol\";\r\n\r\n/**\r\n * @title Standard implementation of ERC1594 (Subset of ERC1400 https://github.com/ethereum/EIPs/issues/1411)\r\n */\r\ncontract ERC1594 is IERC1594, ERC20Token, Ownable {\r\n\r\n    // Variable which tells whether issuance is ON or OFF forever\r\n    // Implementers need to implement one more function to reset the value of `issuance` variable\r\n    // to false. That function is not a part of the standard (EIP-1594) as it is depend on the various factors\r\n    // issuer, followed compliance rules etc. So issuers have the choice how they want to close the issuance. \r\n    bool internal issuance = true;\r\n    \r\n    /// Constructor\r\n    constructor() public  {\r\n\r\n    }\r\n    \r\n    /**\r\n     * @notice Transfer restrictions can take many forms and typically involve on-chain rules or whitelists.\r\n     * However for many types of approved transfers, maintaining an on-chain list of approved transfers can be\r\n     * cumbersome and expensive. An alternative is the co-signing approach, where in addition to the token holder\r\n     * approving a token transfer, and authorised entity provides signed data which further validates the transfer.\r\n     * @param _to address The address which you want to transfer to\r\n     * @param _value uint256 the amount of tokens to be transferred\r\n     * @param _data The `bytes _data` allows arbitrary data to be submitted alongside the transfer.\r\n     * for the token contract to interpret or record. This could be signed data authorising the transfer\r\n     * (e.g. a dynamic whitelist) but is flexible enough to accomadate other use-cases.\r\n     */\r\n    function transferWithData(address _to, uint256 _value, bytes _data) external {\r\n        // Add a function to validate the `_data` parameter\r\n        _transfer(msg.sender, _to, _value);\r\n    }\r\n\r\n    /**\r\n     * @notice Transfer restrictions can take many forms and typically involve on-chain rules or whitelists.\r\n     * However for many types of approved transfers, maintaining an on-chain list of approved transfers can be\r\n     * cumbersome and expensive. An alternative is the co-signing approach, where in addition to the token holder\r\n     * approving a token transfer, and authorised entity provides signed data which further validates the transfer.\r\n     * @dev `msg.sender` MUST have a sufficient `allowance` set and this `allowance` must be debited by the `_value`.\r\n     * @param _from address The address which you want to send tokens from\r\n     * @param _to address The address which you want to transfer to\r\n     * @param _value uint256 the amount of tokens to be transferred\r\n     * @param _data The `bytes _data` allows arbitrary data to be submitted alongside the transfer.\r\n     * for the token contract to interpret or record. This could be signed data authorising the transfer\r\n     * (e.g. a dynamic whitelist) but is flexible enough to accomadate other use-cases.\r\n     */\r\n    function transferFromWithData(address _from, address _to, uint256 _value, bytes _data) external {\r\n        // Add a function to validate the `_data` parameter\r\n        _transferFrom(msg.sender, _from, _to, _value);\r\n    }\r\n\r\n    /**\r\n     * @notice A security token issuer can specify that issuance has finished for the token\r\n     * (i.e. no new tokens can be minted or issued).\r\n     * @dev If a token returns FALSE for `isIssuable()` then it MUST always return FALSE in the future.\r\n     * If a token returns FALSE for `isIssuable()` then it MUST never allow additional tokens to be issued.\r\n     * @return bool `true` signifies the minting is allowed. While `false` denotes the end of minting\r\n     */\r\n    function isIssuable() external view returns (bool) {\r\n        return issuance;\r\n    }\r\n\r\n    /**\r\n     * @notice This function must be called to increase the total supply (Corresponds to mint function of ERC20).\r\n     * @dev It only be called by the token issuer or the operator defined by the issuer. ERC1594 doesn't have\r\n     * have the any logic related to operator but its superset ERC1400 have the operator logic and this function\r\n     * is allowed to call by the operator.\r\n     * @param _tokenHolder The account that will receive the created tokens (account should be whitelisted or KYCed).\r\n     * @param _value The amount of tokens need to be issued\r\n     * @param _data The `bytes _data` allows arbitrary data to be submitted alongside the transfer.\r\n     */\r\n    function issue(address _tokenHolder, uint256 _value, bytes _data) external onlyOwner {\r\n        // Add a function to validate the `_data` parameter\r\n        require(issuance, \"Issuance is closed\");\r\n        _mint(_tokenHolder, _value);\r\n        emit Issued(msg.sender, _tokenHolder, _value, _data);\r\n    }\r\n\r\n    /**\r\n     * @notice This function redeem an amount of the token of a msg.sender. For doing so msg.sender may incentivize\r\n     * using different ways that could be implemented with in the `redeem` function definition. But those implementations\r\n     * are out of the scope of the ERC1594. \r\n     * @param _value The amount of tokens need to be redeemed\r\n     * @param _data The `bytes _data` it can be used in the token contract to authenticate the redemption.\r\n     */\r\n    function redeem(uint256 _value, bytes _data) external {\r\n        // Add a function to validate the `_data` parameter\r\n        _burn(msg.sender, _value);\r\n        emit Redeemed(address(0), msg.sender, _value, _data);\r\n    }\r\n\r\n    /**\r\n     * @notice This function redeem an amount of the token of a msg.sender. For doing so msg.sender may incentivize\r\n     * using different ways that could be implemented with in the `redeem` function definition. But those implementations\r\n     * are out of the scope of the ERC1594. \r\n     * @dev It is analogy to `transferFrom`\r\n     * @param _tokenHolder The account whose tokens gets redeemed.\r\n     * @param _value The amount of tokens need to be redeemed\r\n     * @param _data The `bytes _data` it can be used in the token contract to authenticate the redemption.\r\n     */\r\n    function redeemFrom(address _tokenHolder, uint256 _value, bytes _data) external {\r\n        // Add a function to validate the `_data` parameter\r\n        _burnFrom(_tokenHolder, _value);\r\n        emit Redeemed(msg.sender, _tokenHolder, _value, _data);\r\n    }\r\n\r\n    /**\r\n     * @notice Transfers of securities may fail for a number of reasons. So this function will used to understand the\r\n     * cause of failure by getting the byte value. Which will be the ESC that follows the EIP 1066. ESC can be mapped \r\n     * with a reson string to understand the failure cause, table of Ethereum status code will always reside off-chain\r\n     * @param _to address The address which you want to transfer to\r\n     * @param _value uint256 the amount of tokens to be transferred\r\n     * @param _data The `bytes _data` allows arbitrary data to be submitted alongside the transfer.\r\n     * @return bool It signifies whether the transaction will be executed or not.\r\n     * @return byte Ethereum status code (ESC)\r\n     * @return bytes32 Application specific reason code \r\n     */\r\n    function canTransfer(address _to, uint256 _value, bytes _data) external view returns (bool, byte, bytes32) {\r\n        // Add a function to validate the `_data` parameter\r\n        if (_balances[msg.sender] < _value)\r\n            return (false, 0x52, bytes32(0));\r\n\r\n        else if (_to == address(0))\r\n            return (false, 0x57, bytes32(0));\r\n\r\n        else if (!KindMath.checkAdd(_balances[_to], _value))\r\n            return (false, 0x50, bytes32(0));\r\n        return (true, 0x51, bytes32(0));\r\n    }\r\n\r\n    /**\r\n     * @notice Transfers of securities may fail for a number of reasons. So this function will used to understand the\r\n     * cause of failure by getting the byte value. Which will be the ESC that follows the EIP 1066. ESC can be mapped \r\n     * with a reson string to understand the failure cause, table of Ethereum status code will always reside off-chain\r\n     * @param _from address The address which you want to send tokens from\r\n     * @param _to address The address which you want to transfer to\r\n     * @param _value uint256 the amount of tokens to be transferred\r\n     * @param _data The `bytes _data` allows arbitrary data to be submitted alongside the transfer.\r\n     * @return bool It signifies whether the transaction will be executed or not.\r\n     * @return byte Ethereum status code (ESC)\r\n     * @return bytes32 Application specific reason code \r\n     */\r\n    function canTransferFrom(address _from, address _to, uint256 _value, bytes _data) external view returns (bool, byte, bytes32) {\r\n        // Add a function to validate the `_data` parameter\r\n        if (_value > _allowed[_from][msg.sender])\r\n            return (false, 0x53, bytes32(0));\r\n\r\n        else if (_balances[_from] < _value)\r\n            return (false, 0x52, bytes32(0));\r\n\r\n        else if (_to == address(0))\r\n            return (false, 0x57, bytes32(0));\r\n\r\n        else if (!KindMath.checkAdd(_balances[_to], _value))\r\n            return (false, 0x50, bytes32(0));\r\n        return (true, 0x51, bytes32(0));\r\n    }\r\n\r\n}\r\n",
  "sourcePath": "C:\\Users\\User\\rsto\\contracts\\ERC1594.sol",
  "ast": {
    "absolutePath": "project:/contracts/ERC1594.sol",
    "exportedSymbols": {
      "ERC1594": [
        723
      ]
    },
    "id": 724,
    "nodeType": "SourceUnit",
    "nodes": [
      {
        "id": 433,
        "literals": [
          "solidity",
          "^",
          "0.4",
          ".24"
        ],
        "nodeType": "PragmaDirective",
        "src": "0:24:5"
      },
      {
        "absolutePath": "eip-spec/contracts/ERC1594/IERC1594.sol",
        "file": "eip-spec/contracts/ERC1594/IERC1594.sol",
        "id": 434,
        "nodeType": "ImportDirective",
        "scope": 724,
        "sourceUnit": 105,
        "src": "28:49:5",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "project:/contracts/ERC20Token.sol",
        "file": "./ERC20Token.sol",
        "id": 435,
        "nodeType": "ImportDirective",
        "scope": 724,
        "sourceUnit": 1287,
        "src": "79:26:5",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "eip-spec/contracts/math/KindMath.sol",
        "file": "eip-spec/contracts/math/KindMath.sol",
        "id": 436,
        "nodeType": "ImportDirective",
        "scope": 724,
        "sourceUnit": 183,
        "src": "107:46:5",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "openzeppelin-solidity/contracts/ownership/Ownable.sol",
        "file": "openzeppelin-solidity/contracts/ownership/Ownable.sol",
        "id": 437,
        "nodeType": "ImportDirective",
        "scope": 724,
        "sourceUnit": 432,
        "src": "155:63:5",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "openzeppelin-solidity/contracts/math/SafeMath.sol",
        "file": "openzeppelin-solidity/contracts/math/SafeMath.sol",
        "id": 438,
        "nodeType": "ImportDirective",
        "scope": 724,
        "sourceUnit": 346,
        "src": "220:59:5",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "baseContracts": [
          {
            "arguments": null,
            "baseName": {
              "contractScope": null,
              "id": 439,
              "name": "IERC1594",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 104,
              "src": "424:8:5",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_IERC1594_$104",
                "typeString": "contract IERC1594"
              }
            },
            "id": 440,
            "nodeType": "InheritanceSpecifier",
            "src": "424:8:5"
          },
          {
            "arguments": null,
            "baseName": {
              "contractScope": null,
              "id": 441,
              "name": "ERC20Token",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 1286,
              "src": "434:10:5",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_ERC20Token_$1286",
                "typeString": "contract ERC20Token"
              }
            },
            "id": 442,
            "nodeType": "InheritanceSpecifier",
            "src": "434:10:5"
          },
          {
            "arguments": null,
            "baseName": {
              "contractScope": null,
              "id": 443,
              "name": "Ownable",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 431,
              "src": "446:7:5",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_Ownable_$431",
                "typeString": "contract Ownable"
              }
            },
            "id": 444,
            "nodeType": "InheritanceSpecifier",
            "src": "446:7:5"
          }
        ],
        "contractDependencies": [
          104,
          251,
          431,
          1286
        ],
        "contractKind": "contract",
        "documentation": "@title Standard implementation of ERC1594 (Subset of ERC1400 https://github.com/ethereum/EIPs/issues/1411)\r",
        "fullyImplemented": true,
        "id": 723,
        "linearizedBaseContracts": [
          723,
          431,
          1286,
          251,
          104
        ],
        "name": "ERC1594",
        "nodeType": "ContractDefinition",
        "nodes": [
          {
            "constant": false,
            "id": 447,
            "name": "issuance",
            "nodeType": "VariableDeclaration",
            "scope": 723,
            "src": "853:29:5",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_bool",
              "typeString": "bool"
            },
            "typeName": {
              "id": 445,
              "name": "bool",
              "nodeType": "ElementaryTypeName",
              "src": "853:4:5",
              "typeDescriptions": {
                "typeIdentifier": "t_bool",
                "typeString": "bool"
              }
            },
            "value": {
              "argumentTypes": null,
              "hexValue": "74727565",
              "id": 446,
              "isConstant": false,
              "isLValue": false,
              "isPure": true,
              "kind": "bool",
              "lValueRequested": false,
              "nodeType": "Literal",
              "src": "878:4:5",
              "subdenomination": null,
              "typeDescriptions": {
                "typeIdentifier": "t_bool",
                "typeString": "bool"
              },
              "value": "true"
            },
            "visibility": "internal"
          },
          {
            "body": {
              "id": 450,
              "nodeType": "Block",
              "src": "938:10:5",
              "statements": []
            },
            "documentation": "Constructor\r",
            "id": 451,
            "implemented": true,
            "isConstructor": true,
            "isDeclaredConst": false,
            "modifiers": [],
            "name": "",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 448,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "927:2:5"
            },
            "payable": false,
            "returnParameters": {
              "id": 449,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "938:0:5"
            },
            "scope": 723,
            "src": "916:32:5",
            "stateMutability": "nonpayable",
            "superFunction": null,
            "visibility": "public"
          },
          {
            "body": {
              "id": 467,
              "nodeType": "Block",
              "src": "1943:114:5",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "expression": {
                          "argumentTypes": null,
                          "id": 461,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 1358,
                          "src": "2025:3:5",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 462,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": null,
                        "src": "2025:10:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "id": 463,
                        "name": "_to",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 453,
                        "src": "2037:3:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "id": 464,
                        "name": "_value",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 455,
                        "src": "2042:6:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 460,
                      "name": "_transfer",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1156,
                      "src": "2015:9:5",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
                        "typeString": "function (address,address,uint256)"
                      }
                    },
                    "id": 465,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2015:34:5",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 466,
                  "nodeType": "ExpressionStatement",
                  "src": "2015:34:5"
                }
              ]
            },
            "documentation": "@notice Transfer restrictions can take many forms and typically involve on-chain rules or whitelists.\r\nHowever for many types of approved transfers, maintaining an on-chain list of approved transfers can be\r\ncumbersome and expensive. An alternative is the co-signing approach, where in addition to the token holder\r\napproving a token transfer, and authorised entity provides signed data which further validates the transfer.\r\n@param _to address The address which you want to transfer to\r\n@param _value uint256 the amount of tokens to be transferred\r\n@param _data The `bytes _data` allows arbitrary data to be submitted alongside the transfer.\r\nfor the token contract to interpret or record. This could be signed data authorising the transfer\r\n(e.g. a dynamic whitelist) but is flexible enough to accomadate other use-cases.\r",
            "id": 468,
            "implemented": true,
            "isConstructor": false,
            "isDeclaredConst": false,
            "modifiers": [],
            "name": "transferWithData",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 458,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 453,
                  "name": "_to",
                  "nodeType": "VariableDeclaration",
                  "scope": 468,
                  "src": "1892:11:5",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 452,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "1892:7:5",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 455,
                  "name": "_value",
                  "nodeType": "VariableDeclaration",
                  "scope": 468,
                  "src": "1905:14:5",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 454,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "1905:7:5",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 457,
                  "name": "_data",
                  "nodeType": "VariableDeclaration",
                  "scope": 468,
                  "src": "1921:11:5",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes_calldata_ptr",
                    "typeString": "bytes"
                  },
                  "typeName": {
                    "id": 456,
                    "name": "bytes",
                    "nodeType": "ElementaryTypeName",
                    "src": "1921:5:5",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes_storage_ptr",
                      "typeString": "bytes"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "1891:42:5"
            },
            "payable": false,
            "returnParameters": {
              "id": 459,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1943:0:5"
            },
            "scope": 723,
            "src": "1866:191:5",
            "stateMutability": "nonpayable",
            "superFunction": 10,
            "visibility": "external"
          },
          {
            "body": {
              "id": 487,
              "nodeType": "Block",
              "src": "3262:125:5",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "expression": {
                          "argumentTypes": null,
                          "id": 480,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 1358,
                          "src": "3348:3:5",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 481,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": null,
                        "src": "3348:10:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "id": 482,
                        "name": "_from",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 470,
                        "src": "3360:5:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "id": 483,
                        "name": "_to",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 472,
                        "src": "3367:3:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "id": 484,
                        "name": "_value",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 474,
                        "src": "3372:6:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 479,
                      "name": "_transferFrom",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1002,
                      "src": "3334:13:5",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_address_$_t_uint256_$returns$__$",
                        "typeString": "function (address,address,address,uint256)"
                      }
                    },
                    "id": 485,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3334:45:5",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 486,
                  "nodeType": "ExpressionStatement",
                  "src": "3334:45:5"
                }
              ]
            },
            "documentation": "@notice Transfer restrictions can take many forms and typically involve on-chain rules or whitelists.\r\nHowever for many types of approved transfers, maintaining an on-chain list of approved transfers can be\r\ncumbersome and expensive. An alternative is the co-signing approach, where in addition to the token holder\r\napproving a token transfer, and authorised entity provides signed data which further validates the transfer.\r\n@dev `msg.sender` MUST have a sufficient `allowance` set and this `allowance` must be debited by the `_value`.\r\n@param _from address The address which you want to send tokens from\r\n@param _to address The address which you want to transfer to\r\n@param _value uint256 the amount of tokens to be transferred\r\n@param _data The `bytes _data` allows arbitrary data to be submitted alongside the transfer.\r\nfor the token contract to interpret or record. This could be signed data authorising the transfer\r\n(e.g. a dynamic whitelist) but is flexible enough to accomadate other use-cases.\r",
            "id": 488,
            "implemented": true,
            "isConstructor": false,
            "isDeclaredConst": false,
            "modifiers": [],
            "name": "transferFromWithData",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 477,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 470,
                  "name": "_from",
                  "nodeType": "VariableDeclaration",
                  "scope": 488,
                  "src": "3196:13:5",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 469,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "3196:7:5",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 472,
                  "name": "_to",
                  "nodeType": "VariableDeclaration",
                  "scope": 488,
                  "src": "3211:11:5",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 471,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "3211:7:5",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 474,
                  "name": "_value",
                  "nodeType": "VariableDeclaration",
                  "scope": 488,
                  "src": "3224:14:5",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 473,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "3224:7:5",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 476,
                  "name": "_data",
                  "nodeType": "VariableDeclaration",
                  "scope": 488,
                  "src": "3240:11:5",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes_calldata_ptr",
                    "typeString": "bytes"
                  },
                  "typeName": {
                    "id": 475,
                    "name": "bytes",
                    "nodeType": "ElementaryTypeName",
                    "src": "3240:5:5",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes_storage_ptr",
                      "typeString": "bytes"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "3195:57:5"
            },
            "payable": false,
            "returnParameters": {
              "id": 478,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "3262:0:5"
            },
            "scope": 723,
            "src": "3166:221:5",
            "stateMutability": "nonpayable",
            "superFunction": 21,
            "visibility": "external"
          },
          {
            "body": {
              "id": 495,
              "nodeType": "Block",
              "src": "3928:34:5",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 493,
                    "name": "issuance",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 447,
                    "src": "3946:8:5",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "functionReturnParameters": 492,
                  "id": 494,
                  "nodeType": "Return",
                  "src": "3939:15:5"
                }
              ]
            },
            "documentation": "@notice A security token issuer can specify that issuance has finished for the token\r\n(i.e. no new tokens can be minted or issued).\r\n@dev If a token returns FALSE for `isIssuable()` then it MUST always return FALSE in the future.\r\nIf a token returns FALSE for `isIssuable()` then it MUST never allow additional tokens to be issued.\r\n@return bool `true` signifies the minting is allowed. While `false` denotes the end of minting\r",
            "id": 496,
            "implemented": true,
            "isConstructor": false,
            "isDeclaredConst": true,
            "modifiers": [],
            "name": "isIssuable",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 489,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "3896:2:5"
            },
            "payable": false,
            "returnParameters": {
              "id": 492,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 491,
                  "name": "",
                  "nodeType": "VariableDeclaration",
                  "scope": 496,
                  "src": "3922:4:5",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 490,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "3922:4:5",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "3921:6:5"
            },
            "scope": 723,
            "src": "3877:85:5",
            "stateMutability": "view",
            "superFunction": 26,
            "visibility": "external"
          },
          {
            "body": {
              "id": 525,
              "nodeType": "Block",
              "src": "4738:220:5",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "id": 508,
                        "name": "issuance",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 447,
                        "src": "4818:8:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "hexValue": "49737375616e636520697320636c6f736564",
                        "id": 509,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "4828:20:5",
                        "subdenomination": null,
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_8e39bb54d3fb738d89d450dbb748102e9de58384e87cb1a8dc4d1a0d2343e16e",
                          "typeString": "literal_string \"Issuance is closed\""
                        },
                        "value": "Issuance is closed"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_8e39bb54d3fb738d89d450dbb748102e9de58384e87cb1a8dc4d1a0d2343e16e",
                          "typeString": "literal_string \"Issuance is closed\""
                        }
                      ],
                      "id": 507,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        1361,
                        1362
                      ],
                      "referencedDeclaration": 1362,
                      "src": "4810:7:5",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 510,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "4810:39:5",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 511,
                  "nodeType": "ExpressionStatement",
                  "src": "4810:39:5"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "id": 513,
                        "name": "_tokenHolder",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 498,
                        "src": "4866:12:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "id": 514,
                        "name": "_value",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 500,
                        "src": "4880:6:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 512,
                      "name": "_mint",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1196,
                      "src": "4860:5:5",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$returns$__$",
                        "typeString": "function (address,uint256)"
                      }
                    },
                    "id": 515,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "4860:27:5",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 516,
                  "nodeType": "ExpressionStatement",
                  "src": "4860:27:5"
                },
                {
                  "eventCall": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "expression": {
                          "argumentTypes": null,
                          "id": 518,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 1358,
                          "src": "4910:3:5",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 519,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": null,
                        "src": "4910:10:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "id": 520,
                        "name": "_tokenHolder",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 498,
                        "src": "4922:12:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "id": 521,
                        "name": "_value",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 500,
                        "src": "4936:6:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "id": 522,
                        "name": "_data",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 502,
                        "src": "4944:5:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes_calldata_ptr",
                          "typeString": "bytes calldata"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_bytes_calldata_ptr",
                          "typeString": "bytes calldata"
                        }
                      ],
                      "id": 517,
                      "name": "Issued",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 93,
                      "src": "4903:6:5",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$_t_uint256_$_t_bytes_memory_ptr_$returns$__$",
                        "typeString": "function (address,address,uint256,bytes memory)"
                      }
                    },
                    "id": 523,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "4903:47:5",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 524,
                  "nodeType": "EmitStatement",
                  "src": "4898:52:5"
                }
              ]
            },
            "documentation": "@notice This function must be called to increase the total supply (Corresponds to mint function of ERC20).\r\n@dev It only be called by the token issuer or the operator defined by the issuer. ERC1594 doesn't have\r\nhave the any logic related to operator but its superset ERC1400 have the operator logic and this function\r\nis allowed to call by the operator.\r\n@param _tokenHolder The account that will receive the created tokens (account should be whitelisted or KYCed).\r\n@param _value The amount of tokens need to be issued\r\n@param _data The `bytes _data` allows arbitrary data to be submitted alongside the transfer.\r",
            "id": 526,
            "implemented": true,
            "isConstructor": false,
            "isDeclaredConst": false,
            "modifiers": [
              {
                "arguments": null,
                "id": 505,
                "modifierName": {
                  "argumentTypes": null,
                  "id": 504,
                  "name": "onlyOwner",
                  "nodeType": "Identifier",
                  "overloadedDeclarations": [],
                  "referencedDeclaration": 379,
                  "src": "4728:9:5",
                  "typeDescriptions": {
                    "typeIdentifier": "t_modifier$__$",
                    "typeString": "modifier ()"
                  }
                },
                "nodeType": "ModifierInvocation",
                "src": "4728:9:5"
              }
            ],
            "name": "issue",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 503,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 498,
                  "name": "_tokenHolder",
                  "nodeType": "VariableDeclaration",
                  "scope": 526,
                  "src": "4668:20:5",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 497,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "4668:7:5",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 500,
                  "name": "_value",
                  "nodeType": "VariableDeclaration",
                  "scope": 526,
                  "src": "4690:14:5",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 499,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "4690:7:5",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 502,
                  "name": "_data",
                  "nodeType": "VariableDeclaration",
                  "scope": 526,
                  "src": "4706:11:5",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes_calldata_ptr",
                    "typeString": "bytes"
                  },
                  "typeName": {
                    "id": 501,
                    "name": "bytes",
                    "nodeType": "ElementaryTypeName",
                    "src": "4706:5:5",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes_storage_ptr",
                      "typeString": "bytes"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "4667:51:5"
            },
            "payable": false,
            "returnParameters": {
              "id": 506,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "4738:0:5"
            },
            "scope": 723,
            "src": "4653:305:5",
            "stateMutability": "nonpayable",
            "superFunction": 35,
            "visibility": "external"
          },
          {
            "body": {
              "id": 549,
              "nodeType": "Block",
              "src": "5495:168:5",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "expression": {
                          "argumentTypes": null,
                          "id": 534,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 1358,
                          "src": "5573:3:5",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 535,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": null,
                        "src": "5573:10:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "id": 536,
                        "name": "_value",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 528,
                        "src": "5585:6:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 533,
                      "name": "_burn",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1244,
                      "src": "5567:5:5",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$returns$__$",
                        "typeString": "function (address,uint256)"
                      }
                    },
                    "id": 537,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "5567:25:5",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 538,
                  "nodeType": "ExpressionStatement",
                  "src": "5567:25:5"
                },
                {
                  "eventCall": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "arguments": [
                          {
                            "argumentTypes": null,
                            "hexValue": "30",
                            "id": 541,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "number",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "5625:1:5",
                            "subdenomination": null,
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_0_by_1",
                              "typeString": "int_const 0"
                            },
                            "value": "0"
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_rational_0_by_1",
                              "typeString": "int_const 0"
                            }
                          ],
                          "id": 540,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "5617:7:5",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": "address"
                        },
                        "id": 542,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "5617:10:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "expression": {
                          "argumentTypes": null,
                          "id": 543,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 1358,
                          "src": "5629:3:5",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 544,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": null,
                        "src": "5629:10:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "id": 545,
                        "name": "_value",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 528,
                        "src": "5641:6:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "id": 546,
                        "name": "_data",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 530,
                        "src": "5649:5:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes_calldata_ptr",
                          "typeString": "bytes calldata"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_bytes_calldata_ptr",
                          "typeString": "bytes calldata"
                        }
                      ],
                      "id": 539,
                      "name": "Redeemed",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 103,
                      "src": "5608:8:5",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$_t_uint256_$_t_bytes_memory_ptr_$returns$__$",
                        "typeString": "function (address,address,uint256,bytes memory)"
                      }
                    },
                    "id": 547,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "5608:47:5",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 548,
                  "nodeType": "EmitStatement",
                  "src": "5603:52:5"
                }
              ]
            },
            "documentation": "@notice This function redeem an amount of the token of a msg.sender. For doing so msg.sender may incentivize\r\nusing different ways that could be implemented with in the `redeem` function definition. But those implementations\r\nare out of the scope of the ERC1594. \r\n@param _value The amount of tokens need to be redeemed\r\n@param _data The `bytes _data` it can be used in the token contract to authenticate the redemption.\r",
            "id": 550,
            "implemented": true,
            "isConstructor": false,
            "isDeclaredConst": false,
            "modifiers": [],
            "name": "redeem",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 531,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 528,
                  "name": "_value",
                  "nodeType": "VariableDeclaration",
                  "scope": 550,
                  "src": "5457:14:5",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 527,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "5457:7:5",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 530,
                  "name": "_data",
                  "nodeType": "VariableDeclaration",
                  "scope": 550,
                  "src": "5473:11:5",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes_calldata_ptr",
                    "typeString": "bytes"
                  },
                  "typeName": {
                    "id": 529,
                    "name": "bytes",
                    "nodeType": "ElementaryTypeName",
                    "src": "5473:5:5",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes_storage_ptr",
                      "typeString": "bytes"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "5456:29:5"
            },
            "payable": false,
            "returnParameters": {
              "id": 532,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "5495:0:5"
            },
            "scope": 723,
            "src": "5441:222:5",
            "stateMutability": "nonpayable",
            "superFunction": 42,
            "visibility": "external"
          },
          {
            "body": {
              "id": 572,
              "nodeType": "Block",
              "src": "6339:176:5",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "id": 560,
                        "name": "_tokenHolder",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 552,
                        "src": "6421:12:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "id": 561,
                        "name": "_value",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 554,
                        "src": "6435:6:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 559,
                      "name": "_burnFrom",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1285,
                      "src": "6411:9:5",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$returns$__$",
                        "typeString": "function (address,uint256)"
                      }
                    },
                    "id": 562,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "6411:31:5",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 563,
                  "nodeType": "ExpressionStatement",
                  "src": "6411:31:5"
                },
                {
                  "eventCall": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "expression": {
                          "argumentTypes": null,
                          "id": 565,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 1358,
                          "src": "6467:3:5",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 566,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": null,
                        "src": "6467:10:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "id": 567,
                        "name": "_tokenHolder",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 552,
                        "src": "6479:12:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "id": 568,
                        "name": "_value",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 554,
                        "src": "6493:6:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "id": 569,
                        "name": "_data",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 556,
                        "src": "6501:5:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes_calldata_ptr",
                          "typeString": "bytes calldata"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_bytes_calldata_ptr",
                          "typeString": "bytes calldata"
                        }
                      ],
                      "id": 564,
                      "name": "Redeemed",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 103,
                      "src": "6458:8:5",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$_t_uint256_$_t_bytes_memory_ptr_$returns$__$",
                        "typeString": "function (address,address,uint256,bytes memory)"
                      }
                    },
                    "id": 570,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "6458:49:5",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 571,
                  "nodeType": "EmitStatement",
                  "src": "6453:54:5"
                }
              ]
            },
            "documentation": "@notice This function redeem an amount of the token of a msg.sender. For doing so msg.sender may incentivize\r\nusing different ways that could be implemented with in the `redeem` function definition. But those implementations\r\nare out of the scope of the ERC1594. \r\n@dev It is analogy to `transferFrom`\r\n@param _tokenHolder The account whose tokens gets redeemed.\r\n@param _value The amount of tokens need to be redeemed\r\n@param _data The `bytes _data` it can be used in the token contract to authenticate the redemption.\r",
            "id": 573,
            "implemented": true,
            "isConstructor": false,
            "isDeclaredConst": false,
            "modifiers": [],
            "name": "redeemFrom",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 557,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 552,
                  "name": "_tokenHolder",
                  "nodeType": "VariableDeclaration",
                  "scope": 573,
                  "src": "6279:20:5",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 551,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "6279:7:5",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 554,
                  "name": "_value",
                  "nodeType": "VariableDeclaration",
                  "scope": 573,
                  "src": "6301:14:5",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 553,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "6301:7:5",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 556,
                  "name": "_data",
                  "nodeType": "VariableDeclaration",
                  "scope": 573,
                  "src": "6317:11:5",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes_calldata_ptr",
                    "typeString": "bytes"
                  },
                  "typeName": {
                    "id": 555,
                    "name": "bytes",
                    "nodeType": "ElementaryTypeName",
                    "src": "6317:5:5",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes_storage_ptr",
                      "typeString": "bytes"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "6278:51:5"
            },
            "payable": false,
            "returnParameters": {
              "id": 558,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "6339:0:5"
            },
            "scope": 723,
            "src": "6259:256:5",
            "stateMutability": "nonpayable",
            "superFunction": 51,
            "visibility": "external"
          },
          {
            "body": {
              "id": 638,
              "nodeType": "Block",
              "src": "7435:400:5",
              "statements": [
                {
                  "condition": {
                    "argumentTypes": null,
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 593,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "argumentTypes": null,
                      "baseExpression": {
                        "argumentTypes": null,
                        "id": 588,
                        "name": "_balances",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 838,
                        "src": "7511:9:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                          "typeString": "mapping(address => uint256)"
                        }
                      },
                      "id": 591,
                      "indexExpression": {
                        "argumentTypes": null,
                        "expression": {
                          "argumentTypes": null,
                          "id": 589,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 1358,
                          "src": "7521:3:5",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 590,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": null,
                        "src": "7521:10:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": false,
                      "nodeType": "IndexAccess",
                      "src": "7511:21:5",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "<",
                    "rightExpression": {
                      "argumentTypes": null,
                      "id": 592,
                      "name": "_value",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 577,
                      "src": "7535:6:5",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "7511:30:5",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "falseBody": {
                    "condition": {
                      "argumentTypes": null,
                      "commonType": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      },
                      "id": 605,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "leftExpression": {
                        "argumentTypes": null,
                        "id": 601,
                        "name": "_to",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 575,
                        "src": "7610:3:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "nodeType": "BinaryOperation",
                      "operator": "==",
                      "rightExpression": {
                        "argumentTypes": null,
                        "arguments": [
                          {
                            "argumentTypes": null,
                            "hexValue": "30",
                            "id": 603,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "number",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "7625:1:5",
                            "subdenomination": null,
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_0_by_1",
                              "typeString": "int_const 0"
                            },
                            "value": "0"
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_rational_0_by_1",
                              "typeString": "int_const 0"
                            }
                          ],
                          "id": 602,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "7617:7:5",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": "address"
                        },
                        "id": 604,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "7617:10:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "src": "7610:17:5",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "falseBody": {
                      "condition": {
                        "argumentTypes": null,
                        "id": 620,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "UnaryOperation",
                        "operator": "!",
                        "prefix": true,
                        "src": "7696:42:5",
                        "subExpression": {
                          "argumentTypes": null,
                          "arguments": [
                            {
                              "argumentTypes": null,
                              "baseExpression": {
                                "argumentTypes": null,
                                "id": 615,
                                "name": "_balances",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 838,
                                "src": "7715:9:5",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                                  "typeString": "mapping(address => uint256)"
                                }
                              },
                              "id": 617,
                              "indexExpression": {
                                "argumentTypes": null,
                                "id": 616,
                                "name": "_to",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 575,
                                "src": "7725:3:5",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                }
                              },
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": false,
                              "nodeType": "IndexAccess",
                              "src": "7715:14:5",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            {
                              "argumentTypes": null,
                              "id": 618,
                              "name": "_value",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 577,
                              "src": "7731:6:5",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              },
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            ],
                            "expression": {
                              "argumentTypes": null,
                              "id": 613,
                              "name": "KindMath",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 182,
                              "src": "7697:8:5",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_contract$_KindMath_$182_$",
                                "typeString": "type(library KindMath)"
                              }
                            },
                            "id": 614,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "checkAdd",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 181,
                            "src": "7697:17:5",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_bool_$",
                              "typeString": "function (uint256,uint256) pure returns (bool)"
                            }
                          },
                          "id": 619,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "7697:41:5",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      "falseBody": null,
                      "id": 628,
                      "nodeType": "IfStatement",
                      "src": "7692:93:5",
                      "trueBody": {
                        "expression": {
                          "argumentTypes": null,
                          "components": [
                            {
                              "argumentTypes": null,
                              "hexValue": "66616c7365",
                              "id": 621,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "bool",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "7761:5:5",
                              "subdenomination": null,
                              "typeDescriptions": {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              },
                              "value": "false"
                            },
                            {
                              "argumentTypes": null,
                              "hexValue": "30783530",
                              "id": 622,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "number",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "7768:4:5",
                              "subdenomination": null,
                              "typeDescriptions": {
                                "typeIdentifier": "t_rational_80_by_1",
                                "typeString": "int_const 80"
                              },
                              "value": "0x50"
                            },
                            {
                              "argumentTypes": null,
                              "arguments": [
                                {
                                  "argumentTypes": null,
                                  "hexValue": "30",
                                  "id": 624,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": true,
                                  "kind": "number",
                                  "lValueRequested": false,
                                  "nodeType": "Literal",
                                  "src": "7782:1:5",
                                  "subdenomination": null,
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_rational_0_by_1",
                                    "typeString": "int_const 0"
                                  },
                                  "value": "0"
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_rational_0_by_1",
                                    "typeString": "int_const 0"
                                  }
                                ],
                                "id": 623,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "lValueRequested": false,
                                "nodeType": "ElementaryTypeNameExpression",
                                "src": "7774:7:5",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_type$_t_bytes32_$",
                                  "typeString": "type(bytes32)"
                                },
                                "typeName": "bytes32"
                              },
                              "id": 625,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "typeConversion",
                              "lValueRequested": false,
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "7774:10:5",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bytes32",
                                "typeString": "bytes32"
                              }
                            }
                          ],
                          "id": 626,
                          "isConstant": false,
                          "isInlineArray": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "TupleExpression",
                          "src": "7760:25:5",
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$_t_bool_$_t_rational_80_by_1_$_t_bytes32_$",
                            "typeString": "tuple(bool,int_const 80,bytes32)"
                          }
                        },
                        "functionReturnParameters": 587,
                        "id": 627,
                        "nodeType": "Return",
                        "src": "7753:32:5"
                      }
                    },
                    "id": 629,
                    "nodeType": "IfStatement",
                    "src": "7606:179:5",
                    "trueBody": {
                      "expression": {
                        "argumentTypes": null,
                        "components": [
                          {
                            "argumentTypes": null,
                            "hexValue": "66616c7365",
                            "id": 606,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "bool",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "7650:5:5",
                            "subdenomination": null,
                            "typeDescriptions": {
                              "typeIdentifier": "t_bool",
                              "typeString": "bool"
                            },
                            "value": "false"
                          },
                          {
                            "argumentTypes": null,
                            "hexValue": "30783537",
                            "id": 607,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "number",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "7657:4:5",
                            "subdenomination": null,
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_87_by_1",
                              "typeString": "int_const 87"
                            },
                            "value": "0x57"
                          },
                          {
                            "argumentTypes": null,
                            "arguments": [
                              {
                                "argumentTypes": null,
                                "hexValue": "30",
                                "id": 609,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "kind": "number",
                                "lValueRequested": false,
                                "nodeType": "Literal",
                                "src": "7671:1:5",
                                "subdenomination": null,
                                "typeDescriptions": {
                                  "typeIdentifier": "t_rational_0_by_1",
                                  "typeString": "int_const 0"
                                },
                                "value": "0"
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_rational_0_by_1",
                                  "typeString": "int_const 0"
                                }
                              ],
                              "id": 608,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "lValueRequested": false,
                              "nodeType": "ElementaryTypeNameExpression",
                              "src": "7663:7:5",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_bytes32_$",
                                "typeString": "type(bytes32)"
                              },
                              "typeName": "bytes32"
                            },
                            "id": 610,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "typeConversion",
                            "lValueRequested": false,
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "7663:10:5",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bytes32",
                              "typeString": "bytes32"
                            }
                          }
                        ],
                        "id": 611,
                        "isConstant": false,
                        "isInlineArray": false,
                        "isLValue": false,
                        "isPure": true,
                        "lValueRequested": false,
                        "nodeType": "TupleExpression",
                        "src": "7649:25:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_tuple$_t_bool_$_t_rational_87_by_1_$_t_bytes32_$",
                          "typeString": "tuple(bool,int_const 87,bytes32)"
                        }
                      },
                      "functionReturnParameters": 587,
                      "id": 612,
                      "nodeType": "Return",
                      "src": "7642:32:5"
                    }
                  },
                  "id": 630,
                  "nodeType": "IfStatement",
                  "src": "7507:278:5",
                  "trueBody": {
                    "expression": {
                      "argumentTypes": null,
                      "components": [
                        {
                          "argumentTypes": null,
                          "hexValue": "66616c7365",
                          "id": 594,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "bool",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "7564:5:5",
                          "subdenomination": null,
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          },
                          "value": "false"
                        },
                        {
                          "argumentTypes": null,
                          "hexValue": "30783532",
                          "id": 595,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "7571:4:5",
                          "subdenomination": null,
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_82_by_1",
                            "typeString": "int_const 82"
                          },
                          "value": "0x52"
                        },
                        {
                          "argumentTypes": null,
                          "arguments": [
                            {
                              "argumentTypes": null,
                              "hexValue": "30",
                              "id": 597,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "number",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "7585:1:5",
                              "subdenomination": null,
                              "typeDescriptions": {
                                "typeIdentifier": "t_rational_0_by_1",
                                "typeString": "int_const 0"
                              },
                              "value": "0"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_rational_0_by_1",
                                "typeString": "int_const 0"
                              }
                            ],
                            "id": 596,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "nodeType": "ElementaryTypeNameExpression",
                            "src": "7577:7:5",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_bytes32_$",
                              "typeString": "type(bytes32)"
                            },
                            "typeName": "bytes32"
                          },
                          "id": 598,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "typeConversion",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "7577:10:5",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bytes32",
                            "typeString": "bytes32"
                          }
                        }
                      ],
                      "id": 599,
                      "isConstant": false,
                      "isInlineArray": false,
                      "isLValue": false,
                      "isPure": true,
                      "lValueRequested": false,
                      "nodeType": "TupleExpression",
                      "src": "7563:25:5",
                      "typeDescriptions": {
                        "typeIdentifier": "t_tuple$_t_bool_$_t_rational_82_by_1_$_t_bytes32_$",
                        "typeString": "tuple(bool,int_const 82,bytes32)"
                      }
                    },
                    "functionReturnParameters": 587,
                    "id": 600,
                    "nodeType": "Return",
                    "src": "7556:32:5"
                  }
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "components": [
                      {
                        "argumentTypes": null,
                        "hexValue": "74727565",
                        "id": 631,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "bool",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "7804:4:5",
                        "subdenomination": null,
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        "value": "true"
                      },
                      {
                        "argumentTypes": null,
                        "hexValue": "30783531",
                        "id": 632,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "7810:4:5",
                        "subdenomination": null,
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_81_by_1",
                          "typeString": "int_const 81"
                        },
                        "value": "0x51"
                      },
                      {
                        "argumentTypes": null,
                        "arguments": [
                          {
                            "argumentTypes": null,
                            "hexValue": "30",
                            "id": 634,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "number",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "7824:1:5",
                            "subdenomination": null,
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_0_by_1",
                              "typeString": "int_const 0"
                            },
                            "value": "0"
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_rational_0_by_1",
                              "typeString": "int_const 0"
                            }
                          ],
                          "id": 633,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "7816:7:5",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_bytes32_$",
                            "typeString": "type(bytes32)"
                          },
                          "typeName": "bytes32"
                        },
                        "id": 635,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "7816:10:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      }
                    ],
                    "id": 636,
                    "isConstant": false,
                    "isInlineArray": false,
                    "isLValue": false,
                    "isPure": true,
                    "lValueRequested": false,
                    "nodeType": "TupleExpression",
                    "src": "7803:24:5",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$_t_bool_$_t_rational_81_by_1_$_t_bytes32_$",
                      "typeString": "tuple(bool,int_const 81,bytes32)"
                    }
                  },
                  "functionReturnParameters": 587,
                  "id": 637,
                  "nodeType": "Return",
                  "src": "7796:31:5"
                }
              ]
            },
            "documentation": "@notice Transfers of securities may fail for a number of reasons. So this function will used to understand the\r\ncause of failure by getting the byte value. Which will be the ESC that follows the EIP 1066. ESC can be mapped \r\nwith a reson string to understand the failure cause, table of Ethereum status code will always reside off-chain\r\n@param _to address The address which you want to transfer to\r\n@param _value uint256 the amount of tokens to be transferred\r\n@param _data The `bytes _data` allows arbitrary data to be submitted alongside the transfer.\r\n@return bool It signifies whether the transaction will be executed or not.\r\n@return byte Ethereum status code (ESC)\r\n@return bytes32 Application specific reason code \r",
            "id": 639,
            "implemented": true,
            "isConstructor": false,
            "isDeclaredConst": true,
            "modifiers": [],
            "name": "canTransfer",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 580,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 575,
                  "name": "_to",
                  "nodeType": "VariableDeclaration",
                  "scope": 639,
                  "src": "7349:11:5",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 574,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "7349:7:5",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 577,
                  "name": "_value",
                  "nodeType": "VariableDeclaration",
                  "scope": 639,
                  "src": "7362:14:5",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 576,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "7362:7:5",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 579,
                  "name": "_data",
                  "nodeType": "VariableDeclaration",
                  "scope": 639,
                  "src": "7378:11:5",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes_calldata_ptr",
                    "typeString": "bytes"
                  },
                  "typeName": {
                    "id": 578,
                    "name": "bytes",
                    "nodeType": "ElementaryTypeName",
                    "src": "7378:5:5",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes_storage_ptr",
                      "typeString": "bytes"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "7348:42:5"
            },
            "payable": false,
            "returnParameters": {
              "id": 587,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 582,
                  "name": "",
                  "nodeType": "VariableDeclaration",
                  "scope": 639,
                  "src": "7414:4:5",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 581,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "7414:4:5",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 584,
                  "name": "",
                  "nodeType": "VariableDeclaration",
                  "scope": 639,
                  "src": "7420:4:5",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes1",
                    "typeString": "bytes1"
                  },
                  "typeName": {
                    "id": 583,
                    "name": "byte",
                    "nodeType": "ElementaryTypeName",
                    "src": "7420:4:5",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes1",
                      "typeString": "bytes1"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 586,
                  "name": "",
                  "nodeType": "VariableDeclaration",
                  "scope": 639,
                  "src": "7426:7:5",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes32",
                    "typeString": "bytes32"
                  },
                  "typeName": {
                    "id": 585,
                    "name": "bytes32",
                    "nodeType": "ElementaryTypeName",
                    "src": "7426:7:5",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "7413:21:5"
            },
            "scope": 723,
            "src": "7328:507:5",
            "stateMutability": "view",
            "superFunction": 66,
            "visibility": "external"
          },
          {
            "body": {
              "id": 721,
              "nodeType": "Block",
              "src": "8850:500:5",
              "statements": [
                {
                  "condition": {
                    "argumentTypes": null,
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 663,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "argumentTypes": null,
                      "id": 656,
                      "name": "_value",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 645,
                      "src": "8926:6:5",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": ">",
                    "rightExpression": {
                      "argumentTypes": null,
                      "baseExpression": {
                        "argumentTypes": null,
                        "baseExpression": {
                          "argumentTypes": null,
                          "id": 657,
                          "name": "_allowed",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 844,
                          "src": "8935:8:5",
                          "typeDescriptions": {
                            "typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$",
                            "typeString": "mapping(address => mapping(address => uint256))"
                          }
                        },
                        "id": 659,
                        "indexExpression": {
                          "argumentTypes": null,
                          "id": 658,
                          "name": "_from",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 641,
                          "src": "8944:5:5",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "IndexAccess",
                        "src": "8935:15:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                          "typeString": "mapping(address => uint256)"
                        }
                      },
                      "id": 662,
                      "indexExpression": {
                        "argumentTypes": null,
                        "expression": {
                          "argumentTypes": null,
                          "id": 660,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 1358,
                          "src": "8951:3:5",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 661,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": null,
                        "src": "8951:10:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": false,
                      "nodeType": "IndexAccess",
                      "src": "8935:27:5",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "8926:36:5",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "falseBody": {
                    "condition": {
                      "argumentTypes": null,
                      "commonType": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "id": 675,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "leftExpression": {
                        "argumentTypes": null,
                        "baseExpression": {
                          "argumentTypes": null,
                          "id": 671,
                          "name": "_balances",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 838,
                          "src": "9031:9:5",
                          "typeDescriptions": {
                            "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                            "typeString": "mapping(address => uint256)"
                          }
                        },
                        "id": 673,
                        "indexExpression": {
                          "argumentTypes": null,
                          "id": 672,
                          "name": "_from",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 641,
                          "src": "9041:5:5",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "IndexAccess",
                        "src": "9031:16:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "nodeType": "BinaryOperation",
                      "operator": "<",
                      "rightExpression": {
                        "argumentTypes": null,
                        "id": 674,
                        "name": "_value",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 645,
                        "src": "9050:6:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "src": "9031:25:5",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "falseBody": {
                      "condition": {
                        "argumentTypes": null,
                        "commonType": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "id": 687,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "argumentTypes": null,
                          "id": 683,
                          "name": "_to",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 643,
                          "src": "9125:3:5",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "==",
                        "rightExpression": {
                          "argumentTypes": null,
                          "arguments": [
                            {
                              "argumentTypes": null,
                              "hexValue": "30",
                              "id": 685,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "number",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "9140:1:5",
                              "subdenomination": null,
                              "typeDescriptions": {
                                "typeIdentifier": "t_rational_0_by_1",
                                "typeString": "int_const 0"
                              },
                              "value": "0"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_rational_0_by_1",
                                "typeString": "int_const 0"
                              }
                            ],
                            "id": 684,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "nodeType": "ElementaryTypeNameExpression",
                            "src": "9132:7:5",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_address_$",
                              "typeString": "type(address)"
                            },
                            "typeName": "address"
                          },
                          "id": 686,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "typeConversion",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "9132:10:5",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "src": "9125:17:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      "falseBody": {
                        "condition": {
                          "argumentTypes": null,
                          "id": 702,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "UnaryOperation",
                          "operator": "!",
                          "prefix": true,
                          "src": "9211:42:5",
                          "subExpression": {
                            "argumentTypes": null,
                            "arguments": [
                              {
                                "argumentTypes": null,
                                "baseExpression": {
                                  "argumentTypes": null,
                                  "id": 697,
                                  "name": "_balances",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 838,
                                  "src": "9230:9:5",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                                    "typeString": "mapping(address => uint256)"
                                  }
                                },
                                "id": 699,
                                "indexExpression": {
                                  "argumentTypes": null,
                                  "id": 698,
                                  "name": "_to",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 643,
                                  "src": "9240:3:5",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_address",
                                    "typeString": "address"
                                  }
                                },
                                "isConstant": false,
                                "isLValue": true,
                                "isPure": false,
                                "lValueRequested": false,
                                "nodeType": "IndexAccess",
                                "src": "9230:14:5",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              {
                                "argumentTypes": null,
                                "id": 700,
                                "name": "_value",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 645,
                                "src": "9246:6:5",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                },
                                {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              ],
                              "expression": {
                                "argumentTypes": null,
                                "id": 695,
                                "name": "KindMath",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 182,
                                "src": "9212:8:5",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_type$_t_contract$_KindMath_$182_$",
                                  "typeString": "type(library KindMath)"
                                }
                              },
                              "id": 696,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberName": "checkAdd",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": 181,
                              "src": "9212:17:5",
                              "typeDescriptions": {
                                "typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_bool_$",
                                "typeString": "function (uint256,uint256) pure returns (bool)"
                              }
                            },
                            "id": 701,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "functionCall",
                            "lValueRequested": false,
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "9212:41:5",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bool",
                              "typeString": "bool"
                            }
                          },
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "falseBody": null,
                        "id": 710,
                        "nodeType": "IfStatement",
                        "src": "9207:93:5",
                        "trueBody": {
                          "expression": {
                            "argumentTypes": null,
                            "components": [
                              {
                                "argumentTypes": null,
                                "hexValue": "66616c7365",
                                "id": 703,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "kind": "bool",
                                "lValueRequested": false,
                                "nodeType": "Literal",
                                "src": "9276:5:5",
                                "subdenomination": null,
                                "typeDescriptions": {
                                  "typeIdentifier": "t_bool",
                                  "typeString": "bool"
                                },
                                "value": "false"
                              },
                              {
                                "argumentTypes": null,
                                "hexValue": "30783530",
                                "id": 704,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "kind": "number",
                                "lValueRequested": false,
                                "nodeType": "Literal",
                                "src": "9283:4:5",
                                "subdenomination": null,
                                "typeDescriptions": {
                                  "typeIdentifier": "t_rational_80_by_1",
                                  "typeString": "int_const 80"
                                },
                                "value": "0x50"
                              },
                              {
                                "argumentTypes": null,
                                "arguments": [
                                  {
                                    "argumentTypes": null,
                                    "hexValue": "30",
                                    "id": 706,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": true,
                                    "kind": "number",
                                    "lValueRequested": false,
                                    "nodeType": "Literal",
                                    "src": "9297:1:5",
                                    "subdenomination": null,
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_rational_0_by_1",
                                      "typeString": "int_const 0"
                                    },
                                    "value": "0"
                                  }
                                ],
                                "expression": {
                                  "argumentTypes": [
                                    {
                                      "typeIdentifier": "t_rational_0_by_1",
                                      "typeString": "int_const 0"
                                    }
                                  ],
                                  "id": 705,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": true,
                                  "lValueRequested": false,
                                  "nodeType": "ElementaryTypeNameExpression",
                                  "src": "9289:7:5",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_type$_t_bytes32_$",
                                    "typeString": "type(bytes32)"
                                  },
                                  "typeName": "bytes32"
                                },
                                "id": 707,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "kind": "typeConversion",
                                "lValueRequested": false,
                                "names": [],
                                "nodeType": "FunctionCall",
                                "src": "9289:10:5",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_bytes32",
                                  "typeString": "bytes32"
                                }
                              }
                            ],
                            "id": 708,
                            "isConstant": false,
                            "isInlineArray": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "nodeType": "TupleExpression",
                            "src": "9275:25:5",
                            "typeDescriptions": {
                              "typeIdentifier": "t_tuple$_t_bool_$_t_rational_80_by_1_$_t_bytes32_$",
                              "typeString": "tuple(bool,int_const 80,bytes32)"
                            }
                          },
                          "functionReturnParameters": 655,
                          "id": 709,
                          "nodeType": "Return",
                          "src": "9268:32:5"
                        }
                      },
                      "id": 711,
                      "nodeType": "IfStatement",
                      "src": "9121:179:5",
                      "trueBody": {
                        "expression": {
                          "argumentTypes": null,
                          "components": [
                            {
                              "argumentTypes": null,
                              "hexValue": "66616c7365",
                              "id": 688,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "bool",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "9165:5:5",
                              "subdenomination": null,
                              "typeDescriptions": {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              },
                              "value": "false"
                            },
                            {
                              "argumentTypes": null,
                              "hexValue": "30783537",
                              "id": 689,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "number",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "9172:4:5",
                              "subdenomination": null,
                              "typeDescriptions": {
                                "typeIdentifier": "t_rational_87_by_1",
                                "typeString": "int_const 87"
                              },
                              "value": "0x57"
                            },
                            {
                              "argumentTypes": null,
                              "arguments": [
                                {
                                  "argumentTypes": null,
                                  "hexValue": "30",
                                  "id": 691,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": true,
                                  "kind": "number",
                                  "lValueRequested": false,
                                  "nodeType": "Literal",
                                  "src": "9186:1:5",
                                  "subdenomination": null,
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_rational_0_by_1",
                                    "typeString": "int_const 0"
                                  },
                                  "value": "0"
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_rational_0_by_1",
                                    "typeString": "int_const 0"
                                  }
                                ],
                                "id": 690,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "lValueRequested": false,
                                "nodeType": "ElementaryTypeNameExpression",
                                "src": "9178:7:5",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_type$_t_bytes32_$",
                                  "typeString": "type(bytes32)"
                                },
                                "typeName": "bytes32"
                              },
                              "id": 692,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "typeConversion",
                              "lValueRequested": false,
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "9178:10:5",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bytes32",
                                "typeString": "bytes32"
                              }
                            }
                          ],
                          "id": 693,
                          "isConstant": false,
                          "isInlineArray": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "TupleExpression",
                          "src": "9164:25:5",
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$_t_bool_$_t_rational_87_by_1_$_t_bytes32_$",
                            "typeString": "tuple(bool,int_const 87,bytes32)"
                          }
                        },
                        "functionReturnParameters": 655,
                        "id": 694,
                        "nodeType": "Return",
                        "src": "9157:32:5"
                      }
                    },
                    "id": 712,
                    "nodeType": "IfStatement",
                    "src": "9027:273:5",
                    "trueBody": {
                      "expression": {
                        "argumentTypes": null,
                        "components": [
                          {
                            "argumentTypes": null,
                            "hexValue": "66616c7365",
                            "id": 676,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "bool",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "9079:5:5",
                            "subdenomination": null,
                            "typeDescriptions": {
                              "typeIdentifier": "t_bool",
                              "typeString": "bool"
                            },
                            "value": "false"
                          },
                          {
                            "argumentTypes": null,
                            "hexValue": "30783532",
                            "id": 677,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "number",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "9086:4:5",
                            "subdenomination": null,
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_82_by_1",
                              "typeString": "int_const 82"
                            },
                            "value": "0x52"
                          },
                          {
                            "argumentTypes": null,
                            "arguments": [
                              {
                                "argumentTypes": null,
                                "hexValue": "30",
                                "id": 679,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "kind": "number",
                                "lValueRequested": false,
                                "nodeType": "Literal",
                                "src": "9100:1:5",
                                "subdenomination": null,
                                "typeDescriptions": {
                                  "typeIdentifier": "t_rational_0_by_1",
                                  "typeString": "int_const 0"
                                },
                                "value": "0"
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_rational_0_by_1",
                                  "typeString": "int_const 0"
                                }
                              ],
                              "id": 678,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "lValueRequested": false,
                              "nodeType": "ElementaryTypeNameExpression",
                              "src": "9092:7:5",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_bytes32_$",
                                "typeString": "type(bytes32)"
                              },
                              "typeName": "bytes32"
                            },
                            "id": 680,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "typeConversion",
                            "lValueRequested": false,
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "9092:10:5",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bytes32",
                              "typeString": "bytes32"
                            }
                          }
                        ],
                        "id": 681,
                        "isConstant": false,
                        "isInlineArray": false,
                        "isLValue": false,
                        "isPure": true,
                        "lValueRequested": false,
                        "nodeType": "TupleExpression",
                        "src": "9078:25:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_tuple$_t_bool_$_t_rational_82_by_1_$_t_bytes32_$",
                          "typeString": "tuple(bool,int_const 82,bytes32)"
                        }
                      },
                      "functionReturnParameters": 655,
                      "id": 682,
                      "nodeType": "Return",
                      "src": "9071:32:5"
                    }
                  },
                  "id": 713,
                  "nodeType": "IfStatement",
                  "src": "8922:378:5",
                  "trueBody": {
                    "expression": {
                      "argumentTypes": null,
                      "components": [
                        {
                          "argumentTypes": null,
                          "hexValue": "66616c7365",
                          "id": 664,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "bool",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "8985:5:5",
                          "subdenomination": null,
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          },
                          "value": "false"
                        },
                        {
                          "argumentTypes": null,
                          "hexValue": "30783533",
                          "id": 665,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "8992:4:5",
                          "subdenomination": null,
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_83_by_1",
                            "typeString": "int_const 83"
                          },
                          "value": "0x53"
                        },
                        {
                          "argumentTypes": null,
                          "arguments": [
                            {
                              "argumentTypes": null,
                              "hexValue": "30",
                              "id": 667,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "number",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "9006:1:5",
                              "subdenomination": null,
                              "typeDescriptions": {
                                "typeIdentifier": "t_rational_0_by_1",
                                "typeString": "int_const 0"
                              },
                              "value": "0"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_rational_0_by_1",
                                "typeString": "int_const 0"
                              }
                            ],
                            "id": 666,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "nodeType": "ElementaryTypeNameExpression",
                            "src": "8998:7:5",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_bytes32_$",
                              "typeString": "type(bytes32)"
                            },
                            "typeName": "bytes32"
                          },
                          "id": 668,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "typeConversion",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "8998:10:5",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bytes32",
                            "typeString": "bytes32"
                          }
                        }
                      ],
                      "id": 669,
                      "isConstant": false,
                      "isInlineArray": false,
                      "isLValue": false,
                      "isPure": true,
                      "lValueRequested": false,
                      "nodeType": "TupleExpression",
                      "src": "8984:25:5",
                      "typeDescriptions": {
                        "typeIdentifier": "t_tuple$_t_bool_$_t_rational_83_by_1_$_t_bytes32_$",
                        "typeString": "tuple(bool,int_const 83,bytes32)"
                      }
                    },
                    "functionReturnParameters": 655,
                    "id": 670,
                    "nodeType": "Return",
                    "src": "8977:32:5"
                  }
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "components": [
                      {
                        "argumentTypes": null,
                        "hexValue": "74727565",
                        "id": 714,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "bool",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "9319:4:5",
                        "subdenomination": null,
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        "value": "true"
                      },
                      {
                        "argumentTypes": null,
                        "hexValue": "30783531",
                        "id": 715,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "9325:4:5",
                        "subdenomination": null,
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_81_by_1",
                          "typeString": "int_const 81"
                        },
                        "value": "0x51"
                      },
                      {
                        "argumentTypes": null,
                        "arguments": [
                          {
                            "argumentTypes": null,
                            "hexValue": "30",
                            "id": 717,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "number",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "9339:1:5",
                            "subdenomination": null,
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_0_by_1",
                              "typeString": "int_const 0"
                            },
                            "value": "0"
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_rational_0_by_1",
                              "typeString": "int_const 0"
                            }
                          ],
                          "id": 716,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "9331:7:5",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_bytes32_$",
                            "typeString": "type(bytes32)"
                          },
                          "typeName": "bytes32"
                        },
                        "id": 718,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "9331:10:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      }
                    ],
                    "id": 719,
                    "isConstant": false,
                    "isInlineArray": false,
                    "isLValue": false,
                    "isPure": true,
                    "lValueRequested": false,
                    "nodeType": "TupleExpression",
                    "src": "9318:24:5",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$_t_bool_$_t_rational_81_by_1_$_t_bytes32_$",
                      "typeString": "tuple(bool,int_const 81,bytes32)"
                    }
                  },
                  "functionReturnParameters": 655,
                  "id": 720,
                  "nodeType": "Return",
                  "src": "9311:31:5"
                }
              ]
            },
            "documentation": "@notice Transfers of securities may fail for a number of reasons. So this function will used to understand the\r\ncause of failure by getting the byte value. Which will be the ESC that follows the EIP 1066. ESC can be mapped \r\nwith a reson string to understand the failure cause, table of Ethereum status code will always reside off-chain\r\n@param _from address The address which you want to send tokens from\r\n@param _to address The address which you want to transfer to\r\n@param _value uint256 the amount of tokens to be transferred\r\n@param _data The `bytes _data` allows arbitrary data to be submitted alongside the transfer.\r\n@return bool It signifies whether the transaction will be executed or not.\r\n@return byte Ethereum status code (ESC)\r\n@return bytes32 Application specific reason code \r",
            "id": 722,
            "implemented": true,
            "isConstructor": false,
            "isDeclaredConst": true,
            "modifiers": [],
            "name": "canTransferFrom",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 648,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 641,
                  "name": "_from",
                  "nodeType": "VariableDeclaration",
                  "scope": 722,
                  "src": "8749:13:5",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 640,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "8749:7:5",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 643,
                  "name": "_to",
                  "nodeType": "VariableDeclaration",
                  "scope": 722,
                  "src": "8764:11:5",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 642,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "8764:7:5",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 645,
                  "name": "_value",
                  "nodeType": "VariableDeclaration",
                  "scope": 722,
                  "src": "8777:14:5",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 644,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "8777:7:5",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 647,
                  "name": "_data",
                  "nodeType": "VariableDeclaration",
                  "scope": 722,
                  "src": "8793:11:5",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes_calldata_ptr",
                    "typeString": "bytes"
                  },
                  "typeName": {
                    "id": 646,
                    "name": "bytes",
                    "nodeType": "ElementaryTypeName",
                    "src": "8793:5:5",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes_storage_ptr",
                      "typeString": "bytes"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "8748:57:5"
            },
            "payable": false,
            "returnParameters": {
              "id": 655,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 650,
                  "name": "",
                  "nodeType": "VariableDeclaration",
                  "scope": 722,
                  "src": "8829:4:5",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 649,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "8829:4:5",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 652,
                  "name": "",
                  "nodeType": "VariableDeclaration",
                  "scope": 722,
                  "src": "8835:4:5",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes1",
                    "typeString": "bytes1"
                  },
                  "typeName": {
                    "id": 651,
                    "name": "byte",
                    "nodeType": "ElementaryTypeName",
                    "src": "8835:4:5",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes1",
                      "typeString": "bytes1"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 654,
                  "name": "",
                  "nodeType": "VariableDeclaration",
                  "scope": 722,
                  "src": "8841:7:5",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes32",
                    "typeString": "bytes32"
                  },
                  "typeName": {
                    "id": 653,
                    "name": "bytes32",
                    "nodeType": "ElementaryTypeName",
                    "src": "8841:7:5",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "8828:21:5"
            },
            "scope": 723,
            "src": "8724:626:5",
            "stateMutability": "view",
            "superFunction": 83,
            "visibility": "external"
          }
        ],
        "scope": 724,
        "src": "404:8951:5"
      }
    ],
    "src": "0:9357:5"
  },
  "legacyAST": {
    "attributes": {
      "absolutePath": "project:/contracts/ERC1594.sol",
      "exportedSymbols": {
        "ERC1594": [
          723
        ]
      }
    },
    "children": [
      {
        "attributes": {
          "literals": [
            "solidity",
            "^",
            "0.4",
            ".24"
          ]
        },
        "id": 433,
        "name": "PragmaDirective",
        "src": "0:24:5"
      },
      {
        "attributes": {
          "SourceUnit": 105,
          "absolutePath": "eip-spec/contracts/ERC1594/IERC1594.sol",
          "file": "eip-spec/contracts/ERC1594/IERC1594.sol",
          "scope": 724,
          "symbolAliases": [
            null
          ],
          "unitAlias": ""
        },
        "id": 434,
        "name": "ImportDirective",
        "src": "28:49:5"
      },
      {
        "attributes": {
          "SourceUnit": 1287,
          "absolutePath": "project:/contracts/ERC20Token.sol",
          "file": "./ERC20Token.sol",
          "scope": 724,
          "symbolAliases": [
            null
          ],
          "unitAlias": ""
        },
        "id": 435,
        "name": "ImportDirective",
        "src": "79:26:5"
      },
      {
        "attributes": {
          "SourceUnit": 183,
          "absolutePath": "eip-spec/contracts/math/KindMath.sol",
          "file": "eip-spec/contracts/math/KindMath.sol",
          "scope": 724,
          "symbolAliases": [
            null
          ],
          "unitAlias": ""
        },
        "id": 436,
        "name": "ImportDirective",
        "src": "107:46:5"
      },
      {
        "attributes": {
          "SourceUnit": 432,
          "absolutePath": "openzeppelin-solidity/contracts/ownership/Ownable.sol",
          "file": "openzeppelin-solidity/contracts/ownership/Ownable.sol",
          "scope": 724,
          "symbolAliases": [
            null
          ],
          "unitAlias": ""
        },
        "id": 437,
        "name": "ImportDirective",
        "src": "155:63:5"
      },
      {
        "attributes": {
          "SourceUnit": 346,
          "absolutePath": "openzeppelin-solidity/contracts/math/SafeMath.sol",
          "file": "openzeppelin-solidity/contracts/math/SafeMath.sol",
          "scope": 724,
          "symbolAliases": [
            null
          ],
          "unitAlias": ""
        },
        "id": 438,
        "name": "ImportDirective",
        "src": "220:59:5"
      },
      {
        "attributes": {
          "contractDependencies": [
            104,
            251,
            431,
            1286
          ],
          "contractKind": "contract",
          "documentation": "@title Standard implementation of ERC1594 (Subset of ERC1400 https://github.com/ethereum/EIPs/issues/1411)\r",
          "fullyImplemented": true,
          "linearizedBaseContracts": [
            723,
            431,
            1286,
            251,
            104
          ],
          "name": "ERC1594",
          "scope": 724
        },
        "children": [
          {
            "attributes": {
              "arguments": null
            },
            "children": [
              {
                "attributes": {
                  "contractScope": null,
                  "name": "IERC1594",
                  "referencedDeclaration": 104,
                  "type": "contract IERC1594"
                },
                "id": 439,
                "name": "UserDefinedTypeName",
                "src": "424:8:5"
              }
            ],
            "id": 440,
            "name": "InheritanceSpecifier",
            "src": "424:8:5"
          },
          {
            "attributes": {
              "arguments": null
            },
            "children": [
              {
                "attributes": {
                  "contractScope": null,
                  "name": "ERC20Token",
                  "referencedDeclaration": 1286,
                  "type": "contract ERC20Token"
                },
                "id": 441,
                "name": "UserDefinedTypeName",
                "src": "434:10:5"
              }
            ],
            "id": 442,
            "name": "InheritanceSpecifier",
            "src": "434:10:5"
          },
          {
            "attributes": {
              "arguments": null
            },
            "children": [
              {
                "attributes": {
                  "contractScope": null,
                  "name": "Ownable",
                  "referencedDeclaration": 431,
                  "type": "contract Ownable"
                },
                "id": 443,
                "name": "UserDefinedTypeName",
                "src": "446:7:5"
              }
            ],
            "id": 444,
            "name": "InheritanceSpecifier",
            "src": "446:7:5"
          },
          {
            "attributes": {
              "constant": false,
              "name": "issuance",
              "scope": 723,
              "stateVariable": true,
              "storageLocation": "default",
              "type": "bool",
              "visibility": "internal"
            },
            "children": [
              {
                "attributes": {
                  "name": "bool",
                  "type": "bool"
                },
                "id": 445,
                "name": "ElementaryTypeName",
                "src": "853:4:5"
              },
              {
                "attributes": {
                  "argumentTypes": null,
                  "hexvalue": "74727565",
                  "isConstant": false,
                  "isLValue": false,
                  "isPure": true,
                  "lValueRequested": false,
                  "subdenomination": null,
                  "token": "bool",
                  "type": "bool",
                  "value": "true"
                },
                "id": 446,
                "name": "Literal",
                "src": "878:4:5"
              }
            ],
            "id": 447,
            "name": "VariableDeclaration",
            "src": "853:29:5"
          },
          {
            "attributes": {
              "constant": false,
              "documentation": "Constructor\r",
              "implemented": true,
              "isConstructor": true,
              "modifiers": [
                null
              ],
              "name": "",
              "payable": false,
              "scope": 723,
              "stateMutability": "nonpayable",
              "superFunction": null,
              "visibility": "public"
            },
            "children": [
              {
                "attributes": {
                  "parameters": [
                    null
                  ]
                },
                "children": [],
                "id": 448,
                "name": "ParameterList",
                "src": "927:2:5"
              },
              {
                "attributes": {
                  "parameters": [
                    null
                  ]
                },
                "children": [],
                "id": 449,
                "name": "ParameterList",
                "src": "938:0:5"
              },
              {
                "attributes": {
                  "statements": [
                    null
                  ]
                },
                "children": [],
                "id": 450,
                "name": "Block",
                "src": "938:10:5"
              }
            ],
            "id": 451,
            "name": "FunctionDefinition",
            "src": "916:32:5"
          },
          {
            "attributes": {
              "constant": false,
              "documentation": "@notice Transfer restrictions can take many forms and typically involve on-chain rules or whitelists.\r\nHowever for many types of approved transfers, maintaining an on-chain list of approved transfers can be\r\ncumbersome and expensive. An alternative is the co-signing approach, where in addition to the token holder\r\napproving a token transfer, and authorised entity provides signed data which further validates the transfer.\r\n@param _to address The address which you want to transfer to\r\n@param _value uint256 the amount of tokens to be transferred\r\n@param _data The `bytes _data` allows arbitrary data to be submitted alongside the transfer.\r\nfor the token contract to interpret or record. This could be signed data authorising the transfer\r\n(e.g. a dynamic whitelist) but is flexible enough to accomadate other use-cases.\r",
              "implemented": true,
              "isConstructor": false,
              "modifiers": [
                null
              ],
              "name": "transferWithData",
              "payable": false,
              "scope": 723,
              "stateMutability": "nonpayable",
              "superFunction": 10,
              "visibility": "external"
            },
            "children": [
              {
                "children": [
                  {
                    "attributes": {
                      "constant": false,
                      "name": "_to",
                      "scope": 468,
                      "stateVariable": false,
                      "storageLocation": "default",
                      "type": "address",
                      "value": null,
                      "visibility": "internal"
                    },
                    "children": [
                      {
                        "attributes": {
                          "name": "address",
                          "type": "address"
                        },
                        "id": 452,
                        "name": "ElementaryTypeName",
                        "src": "1892:7:5"
                      }
                    ],
                    "id": 453,
                    "name": "VariableDeclaration",
                    "src": "1892:11:5"
                  },
                  {
                    "attributes": {
                      "constant": false,
                      "name": "_value",
                      "scope": 468,
                      "stateVariable": false,
                      "storageLocation": "default",
                      "type": "uint256",
                      "value": null,
                      "visibility": "internal"
                    },
                    "children": [
                      {
                        "attributes": {
                          "name": "uint256",
                          "type": "uint256"
                        },
                        "id": 454,
                        "name": "ElementaryTypeName",
                        "src": "1905:7:5"
                      }
                    ],
                    "id": 455,
                    "name": "VariableDeclaration",
                    "src": "1905:14:5"
                  },
                  {
                    "attributes": {
                      "constant": false,
                      "name": "_data",
                      "scope": 468,
                      "stateVariable": false,
                      "storageLocation": "default",
                      "type": "bytes",
                      "value": null,
                      "visibility": "internal"
                    },
                    "children": [
                      {
                        "attributes": {
                          "name": "bytes",
                          "type": "bytes"
                        },
                        "id": 456,
                        "name": "ElementaryTypeName",
                        "src": "1921:5:5"
                      }
                    ],
                    "id": 457,
                    "name": "VariableDeclaration",
                    "src": "1921:11:5"
                  }
                ],
                "id": 458,
                "name": "ParameterList",
                "src": "1891:42:5"
              },
              {
                "attributes": {
                  "parameters": [
                    null
                  ]
                },
                "children": [],
                "id": 459,
                "name": "ParameterList",
                "src": "1943:0:5"
              },
              {
                "children": [
                  {
                    "children": [
                      {
                        "attributes": {
                          "argumentTypes": null,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "isStructConstructorCall": false,
                          "lValueRequested": false,
                          "names": [
                            null
                          ],
                          "type": "tuple()",
                          "type_conversion": false
                        },
                        "children": [
                          {
                            "attributes": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                },
                                {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                },
                                {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              ],
                              "overloadedDeclarations": [
                                null
                              ],
                              "referencedDeclaration": 1156,
                              "type": "function (address,address,uint256)",
                              "value": "_transfer"
                            },
                            "id": 460,
                            "name": "Identifier",
                            "src": "2015:9:5"
                          },
                          {
                            "attributes": {
                              "argumentTypes": null,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "member_name": "sender",
                              "referencedDeclaration": null,
                              "type": "address"
                            },
                            "children": [
                              {
                                "attributes": {
                                  "argumentTypes": null,
                                  "overloadedDeclarations": [
                                    null
                                  ],
                                  "referencedDeclaration": 1358,
                                  "type": "msg",
                                  "value": "msg"
                                },
                                "id": 461,
                                "name": "Identifier",
                                "src": "2025:3:5"
                              }
                            ],
                            "id": 462,
                            "name": "MemberAccess",
                            "src": "2025:10:5"
                          },
                          {
                            "attributes": {
                              "argumentTypes": null,
                              "overloadedDeclarations": [
                                null
                              ],
                              "referencedDeclaration": 453,
                              "type": "address",
                              "value": "_to"
                            },
                            "id": 463,
                            "name": "Identifier",
                            "src": "2037:3:5"
                          },
                          {
                            "attributes": {
                              "argumentTypes": null,
                              "overloadedDeclarations": [
                                null
                              ],
                              "referencedDeclaration": 455,
                              "type": "uint256",
                              "value": "_value"
                            },
                            "id": 464,
                            "name": "Identifier",
                            "src": "2042:6:5"
                          }
                        ],
                        "id": 465,
                        "name": "FunctionCall",
                        "src": "2015:34:5"
                      }
                    ],
                    "id": 466,
                    "name": "ExpressionStatement",
                    "src": "2015:34:5"
                  }
                ],
                "id": 467,
                "name": "Block",
                "src": "1943:114:5"
              }
            ],
            "id": 468,
            "name": "FunctionDefinition",
            "src": "1866:191:5"
          },
          {
            "attributes": {
              "constant": false,
              "documentation": "@notice Transfer restrictions can take many forms and typically involve on-chain rules or whitelists.\r\nHowever for many types of approved transfers, maintaining an on-chain list of approved transfers can be\r\ncumbersome and expensive. An alternative is the co-signing approach, where in addition to the token holder\r\napproving a token transfer, and authorised entity provides signed data which further validates the transfer.\r\n@dev `msg.sender` MUST have a sufficient `allowance` set and this `allowance` must be debited by the `_value`.\r\n@param _from address The address which you want to send tokens from\r\n@param _to address The address which you want to transfer to\r\n@param _value uint256 the amount of tokens to be transferred\r\n@param _data The `bytes _data` allows arbitrary data to be submitted alongside the transfer.\r\nfor the token contract to interpret or record. This could be signed data authorising the transfer\r\n(e.g. a dynamic whitelist) but is flexible enough to accomadate other use-cases.\r",
              "implemented": true,
              "isConstructor": false,
              "modifiers": [
                null
              ],
              "name": "transferFromWithData",
              "payable": false,
              "scope": 723,
              "stateMutability": "nonpayable",
              "superFunction": 21,
              "visibility": "external"
            },
            "children": [
              {
                "children": [
                  {
                    "attributes": {
                      "constant": false,
                      "name": "_from",
                      "scope": 488,
                      "stateVariable": false,
                      "storageLocation": "default",
                      "type": "address",
                      "value": null,
                      "visibility": "internal"
                    },
                    "children": [
                      {
                        "attributes": {
                          "name": "address",
                          "type": "address"
                        },
                        "id": 469,
                        "name": "ElementaryTypeName",
                        "src": "3196:7:5"
                      }
                    ],
                    "id": 470,
                    "name": "VariableDeclaration",
                    "src": "3196:13:5"
                  },
                  {
                    "attributes": {
                      "constant": false,
                      "name": "_to",
                      "scope": 488,
                      "stateVariable": false,
                      "storageLocation": "default",
                      "type": "address",
                      "value": null,
                      "visibility": "internal"
                    },
                    "children": [
                      {
                        "attributes": {
                          "name": "address",
                          "type": "address"
                        },
                        "id": 471,
                        "name": "ElementaryTypeName",
                        "src": "3211:7:5"
                      }
                    ],
                    "id": 472,
                    "name": "VariableDeclaration",
                    "src": "3211:11:5"
                  },
                  {
                    "attributes": {
                      "constant": false,
                      "name": "_value",
                      "scope": 488,
                      "stateVariable": false,
                      "storageLocation": "default",
                      "type": "uint256",
                      "value": null,
                      "visibility": "internal"
                    },
                    "children": [
                      {
                        "attributes": {
                          "name": "uint256",
                          "type": "uint256"
                        },
                        "id": 473,
                        "name": "ElementaryTypeName",
                        "src": "3224:7:5"
                      }
                    ],
                    "id": 474,
                    "name": "VariableDeclaration",
                    "src": "3224:14:5"
                  },
                  {
                    "attributes": {
                      "constant": false,
                      "name": "_data",
                      "scope": 488,
                      "stateVariable": false,
                      "storageLocation": "default",
                      "type": "bytes",
                      "value": null,
                      "visibility": "internal"
                    },
                    "children": [
                      {
                        "attributes": {
                          "name": "bytes",
                          "type": "bytes"
                        },
                        "id": 475,
                        "name": "ElementaryTypeName",
                        "src": "3240:5:5"
                      }
                    ],
                    "id": 476,
                    "name": "VariableDeclaration",
                    "src": "3240:11:5"
                  }
                ],
                "id": 477,
                "name": "ParameterList",
                "src": "3195:57:5"
              },
              {
                "attributes": {
                  "parameters": [
                    null
                  ]
                },
                "children": [],
                "id": 478,
                "name": "ParameterList",
                "src": "3262:0:5"
              },
              {
                "children": [
                  {
                    "children": [
                      {
                        "attributes": {
                          "argumentTypes": null,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "isStructConstructorCall": false,
                          "lValueRequested": false,
                          "names": [
                            null
                          ],
                          "type": "tuple()",
                          "type_conversion": false
                        },
                        "children": [
                          {
                            "attributes": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                },
                                {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                },
                                {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                },
                                {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              ],
                              "overloadedDeclarations": [
                                null
                              ],
                              "referencedDeclaration": 1002,
                              "type": "function (address,address,address,uint256)",
                              "value": "_transferFrom"
                            },
                            "id": 479,
                            "name": "Identifier",
                            "src": "3334:13:5"
                          },
                          {
                            "attributes": {
                              "argumentTypes": null,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "member_name": "sender",
                              "referencedDeclaration": null,
                              "type": "address"
                            },
                            "children": [
                              {
                                "attributes": {
                                  "argumentTypes": null,
                                  "overloadedDeclarations": [
                                    null
                                  ],
                                  "referencedDeclaration": 1358,
                                  "type": "msg",
                                  "value": "msg"
                                },
                                "id": 480,
                                "name": "Identifier",
                                "src": "3348:3:5"
                              }
                            ],
                            "id": 481,
                            "name": "MemberAccess",
                            "src": "3348:10:5"
                          },
                          {
                            "attributes": {
                              "argumentTypes": null,
                              "overloadedDeclarations": [
                                null
                              ],
                              "referencedDeclaration": 470,
                              "type": "address",
                              "value": "_from"
                            },
                            "id": 482,
                            "name": "Identifier",
                            "src": "3360:5:5"
                          },
                          {
                            "attributes": {
                              "argumentTypes": null,
                              "overloadedDeclarations": [
                                null
                              ],
                              "referencedDeclaration": 472,
                              "type": "address",
                              "value": "_to"
                            },
                            "id": 483,
                            "name": "Identifier",
                            "src": "3367:3:5"
                          },
                          {
                            "attributes": {
                              "argumentTypes": null,
                              "overloadedDeclarations": [
                                null
                              ],
                              "referencedDeclaration": 474,
                              "type": "uint256",
                              "value": "_value"
                            },
                            "id": 484,
                            "name": "Identifier",
                            "src": "3372:6:5"
                          }
                        ],
                        "id": 485,
                        "name": "FunctionCall",
                        "src": "3334:45:5"
                      }
                    ],
                    "id": 486,
                    "name": "ExpressionStatement",
                    "src": "3334:45:5"
                  }
                ],
                "id": 487,
                "name": "Block",
                "src": "3262:125:5"
              }
            ],
            "id": 488,
            "name": "FunctionDefinition",
            "src": "3166:221:5"
          },
          {
            "attributes": {
              "constant": true,
              "documentation": "@notice A security token issuer can specify that issuance has finished for the token\r\n(i.e. no new tokens can be minted or issued).\r\n@dev If a token returns FALSE for `isIssuable()` then it MUST always return FALSE in the future.\r\nIf a token returns FALSE for `isIssuable()` then it MUST never allow additional tokens to be issued.\r\n@return bool `true` signifies the minting is allowed. While `false` denotes the end of minting\r",
              "implemented": true,
              "isConstructor": false,
              "modifiers": [
                null
              ],
              "name": "isIssuable",
              "payable": false,
              "scope": 723,
              "stateMutability": "view",
              "superFunction": 26,
              "visibility": "external"
            },
            "children": [
              {
                "attributes": {
                  "parameters": [
                    null
                  ]
                },
                "children": [],
                "id": 489,
                "name": "ParameterList",
                "src": "3896:2:5"
              },
              {
                "children": [
                  {
                    "attributes": {
                      "constant": false,
                      "name": "",
                      "scope": 496,
                      "stateVariable": false,
                      "storageLocation": "default",
                      "type": "bool",
                      "value": null,
                      "visibility": "internal"
                    },
                    "children": [
                      {
                        "attributes": {
                          "name": "bool",
                          "type": "bool"
                        },
                        "id": 490,
                        "name": "ElementaryTypeName",
                        "src": "3922:4:5"
                      }
                    ],
                    "id": 491,
                    "name": "VariableDeclaration",
                    "src": "3922:4:5"
                  }
                ],
                "id": 492,
                "name": "ParameterList",
                "src": "3921:6:5"
              },
              {
                "children": [
                  {
                    "attributes": {
                      "functionReturnParameters": 492
                    },
                    "children": [
                      {
                        "attributes": {
                          "argumentTypes": null,
                          "overloadedDeclarations": [
                            null
                          ],
                          "referencedDeclaration": 447,
                          "type": "bool",
                          "value": "issuance"
                        },
                        "id": 493,
                        "name": "Identifier",
                        "src": "3946:8:5"
                      }
                    ],
                    "id": 494,
                    "name": "Return",
                    "src": "3939:15:5"
                  }
                ],
                "id": 495,
                "name": "Block",
                "src": "3928:34:5"
              }
            ],
            "id": 496,
            "name": "FunctionDefinition",
            "src": "3877:85:5"
          },
          {
            "attributes": {
              "constant": false,
              "documentation": "@notice This function must be called to increase the total supply (Corresponds to mint function of ERC20).\r\n@dev It only be called by the token issuer or the operator defined by the issuer. ERC1594 doesn't have\r\nhave the any logic related to operator but its superset ERC1400 have the operator logic and this function\r\nis allowed to call by the operator.\r\n@param _tokenHolder The account that will receive the created tokens (account should be whitelisted or KYCed).\r\n@param _value The amount of tokens need to be issued\r\n@param _data The `bytes _data` allows arbitrary data to be submitted alongside the transfer.\r",
              "implemented": true,
              "isConstructor": false,
              "name": "issue",
              "payable": false,
              "scope": 723,
              "stateMutability": "nonpayable",
              "superFunction": 35,
              "visibility": "external"
            },
            "children": [
              {
                "children": [
                  {
                    "attributes": {
                      "constant": false,
                      "name": "_tokenHolder",
                      "scope": 526,
                      "stateVariable": false,
                      "storageLocation": "default",
                      "type": "address",
                      "value": null,
                      "visibility": "internal"
                    },
                    "children": [
                      {
                        "attributes": {
                          "name": "address",
                          "type": "address"
                        },
                        "id": 497,
                        "name": "ElementaryTypeName",
                        "src": "4668:7:5"
                      }
                    ],
                    "id": 498,
                    "name": "VariableDeclaration",
                    "src": "4668:20:5"
                  },
                  {
                    "attributes": {
                      "constant": false,
                      "name": "_value",
                      "scope": 526,
                      "stateVariable": false,
                      "storageLocation": "default",
                      "type": "uint256",
                      "value": null,
                      "visibility": "internal"
                    },
                    "children": [
                      {
                        "attributes": {
                          "name": "uint256",
                          "type": "uint256"
                        },
                        "id": 499,
                        "name": "ElementaryTypeName",
                        "src": "4690:7:5"
                      }
                    ],
                    "id": 500,
                    "name": "VariableDeclaration",
                    "src": "4690:14:5"
                  },
                  {
                    "attributes": {
                      "constant": false,
                      "name": "_data",
                      "scope": 526,
                      "stateVariable": false,
                      "storageLocation": "default",
                      "type": "bytes",
                      "value": null,
                      "visibility": "internal"
                    },
                    "children": [
                      {
                        "attributes": {
                          "name": "bytes",
                          "type": "bytes"
                        },
                        "id": 501,
                        "name": "ElementaryTypeName",
                        "src": "4706:5:5"
                      }
                    ],
                    "id": 502,
                    "name": "VariableDeclaration",
                    "src": "4706:11:5"
                  }
                ],
                "id": 503,
                "name": "ParameterList",
                "src": "4667:51:5"
              },
              {
                "attributes": {
                  "parameters": [
                    null
                  ]
                },
                "children": [],
                "id": 506,
                "name": "ParameterList",
                "src": "4738:0:5"
              },
              {
                "attributes": {
                  "arguments": null
                },
                "children": [
                  {
                    "attributes": {
                      "argumentTypes": null,
                      "overloadedDeclarations": [
                        null
                      ],
                      "referencedDeclaration": 379,
                      "type": "modifier ()",
                      "value": "onlyOwner"
                    },
                    "id": 504,
                    "name": "Identifier",
                    "src": "4728:9:5"
                  }
                ],
                "id": 505,
                "name": "ModifierInvocation",
                "src": "4728:9:5"
              },
              {
                "children": [
                  {
                    "children": [
                      {
                        "attributes": {
                          "argumentTypes": null,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "isStructConstructorCall": false,
                          "lValueRequested": false,
                          "names": [
                            null
                          ],
                          "type": "tuple()",
                          "type_conversion": false
                        },
                        "children": [
                          {
                            "attributes": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_bool",
                                  "typeString": "bool"
                                },
                                {
                                  "typeIdentifier": "t_stringliteral_8e39bb54d3fb738d89d450dbb748102e9de58384e87cb1a8dc4d1a0d2343e16e",
                                  "typeString": "literal_string \"Issuance is closed\""
                                }
                              ],
                              "overloadedDeclarations": [
                                1361,
                                1362
                              ],
                              "referencedDeclaration": 1362,
                              "type": "function (bool,string memory) pure",
                              "value": "require"
                            },
                            "id": 507,
                            "name": "Identifier",
                            "src": "4810:7:5"
                          },
                          {
                            "attributes": {
                              "argumentTypes": null,
                              "overloadedDeclarations": [
                                null
                              ],
                              "referencedDeclaration": 447,
                              "type": "bool",
                              "value": "issuance"
                            },
                            "id": 508,
                            "name": "Identifier",
                            "src": "4818:8:5"
                          },
                          {
                            "attributes": {
                              "argumentTypes": null,
                              "hexvalue": "49737375616e636520697320636c6f736564",
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "lValueRequested": false,
                              "subdenomination": null,
                              "token": "string",
                              "type": "literal_string \"Issuance is closed\"",
                              "value": "Issuance is closed"
                            },
                            "id": 509,
                            "name": "Literal",
                            "src": "4828:20:5"
                          }
                        ],
                        "id": 510,
                        "name": "FunctionCall",
                        "src": "4810:39:5"
                      }
                    ],
                    "id": 511,
                    "name": "ExpressionStatement",
                    "src": "4810:39:5"
                  },
                  {
                    "children": [
                      {
                        "attributes": {
                          "argumentTypes": null,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "isStructConstructorCall": false,
                          "lValueRequested": false,
                          "names": [
                            null
                          ],
                          "type": "tuple()",
                          "type_conversion": false
                        },
                        "children": [
                          {
                            "attributes": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                },
                                {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              ],
                              "overloadedDeclarations": [
                                null
                              ],
                              "referencedDeclaration": 1196,
                              "type": "function (address,uint256)",
                              "value": "_mint"
                            },
                            "id": 512,
                            "name": "Identifier",
                            "src": "4860:5:5"
                          },
                          {
                            "attributes": {
                              "argumentTypes": null,
                              "overloadedDeclarations": [
                                null
                              ],
                              "referencedDeclaration": 498,
                              "type": "address",
                              "value": "_tokenHolder"
                            },
                            "id": 513,
                            "name": "Identifier",
                            "src": "4866:12:5"
                          },
                          {
                            "attributes": {
                              "argumentTypes": null,
                              "overloadedDeclarations": [
                                null
                              ],
                              "referencedDeclaration": 500,
                              "type": "uint256",
                              "value": "_value"
                            },
                            "id": 514,
                            "name": "Identifier",
                            "src": "4880:6:5"
                          }
                        ],
                        "id": 515,
                        "name": "FunctionCall",
                        "src": "4860:27:5"
                      }
                    ],
                    "id": 516,
                    "name": "ExpressionStatement",
                    "src": "4860:27:5"
                  },
                  {
                    "children": [
                      {
                        "attributes": {
                          "argumentTypes": null,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "isStructConstructorCall": false,
                          "lValueRequested": false,
                          "names": [
                            null
                          ],
                          "type": "tuple()",
                          "type_conversion": false
                        },
                        "children": [
                          {
                            "attributes": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                },
                                {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                },
                                {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                },
                                {
                                  "typeIdentifier": "t_bytes_calldata_ptr",
                                  "typeString": "bytes calldata"
                                }
                              ],
                              "overloadedDeclarations": [
                                null
                              ],
                              "referencedDeclaration": 93,
                              "type": "function (address,address,uint256,bytes memory)",
                              "value": "Issued"
                            },
                            "id": 517,
                            "name": "Identifier",
                            "src": "4903:6:5"
                          },
                          {
                            "attributes": {
                              "argumentTypes": null,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "member_name": "sender",
                              "referencedDeclaration": null,
                              "type": "address"
                            },
                            "children": [
                              {
                                "attributes": {
                                  "argumentTypes": null,
                                  "overloadedDeclarations": [
                                    null
                                  ],
                                  "referencedDeclaration": 1358,
                                  "type": "msg",
                                  "value": "msg"
                                },
                                "id": 518,
                                "name": "Identifier",
                                "src": "4910:3:5"
                              }
                            ],
                            "id": 519,
                            "name": "MemberAccess",
                            "src": "4910:10:5"
                          },
                          {
                            "attributes": {
                              "argumentTypes": null,
                              "overloadedDeclarations": [
                                null
                              ],
                              "referencedDeclaration": 498,
                              "type": "address",
                              "value": "_tokenHolder"
                            },
                            "id": 520,
                            "name": "Identifier",
                            "src": "4922:12:5"
                          },
                          {
                            "attributes": {
                              "argumentTypes": null,
                              "overloadedDeclarations": [
                                null
                              ],
                              "referencedDeclaration": 500,
                              "type": "uint256",
                              "value": "_value"
                            },
                            "id": 521,
                            "name": "Identifier",
                            "src": "4936:6:5"
                          },
                          {
                            "attributes": {
                              "argumentTypes": null,
                              "overloadedDeclarations": [
                                null
                              ],
                              "referencedDeclaration": 502,
                              "type": "bytes calldata",
                              "value": "_data"
                            },
                            "id": 522,
                            "name": "Identifier",
                            "src": "4944:5:5"
                          }
                        ],
                        "id": 523,
                        "name": "FunctionCall",
                        "src": "4903:47:5"
                      }
                    ],
                    "id": 524,
                    "name": "EmitStatement",
                    "src": "4898:52:5"
                  }
                ],
                "id": 525,
                "name": "Block",
                "src": "4738:220:5"
              }
            ],
            "id": 526,
            "name": "FunctionDefinition",
            "src": "4653:305:5"
          },
          {
            "attributes": {
              "constant": false,
              "documentation": "@notice This function redeem an amount of the token of a msg.sender. For doing so msg.sender may incentivize\r\nusing different ways that could be implemented with in the `redeem` function definition. But those implementations\r\nare out of the scope of the ERC1594. \r\n@param _value The amount of tokens need to be redeemed\r\n@param _data The `bytes _data` it can be used in the token contract to authenticate the redemption.\r",
              "implemented": true,
              "isConstructor": false,
              "modifiers": [
                null
              ],
              "name": "redeem",
              "payable": false,
              "scope": 723,
              "stateMutability": "nonpayable",
              "superFunction": 42,
              "visibility": "external"
            },
            "children": [
              {
                "children": [
                  {
                    "attributes": {
                      "constant": false,
                      "name": "_value",
                      "scope": 550,
                      "stateVariable": false,
                      "storageLocation": "default",
                      "type": "uint256",
                      "value": null,
                      "visibility": "internal"
                    },
                    "children": [
                      {
                        "attributes": {
                          "name": "uint256",
                          "type": "uint256"
                        },
                        "id": 527,
                        "name": "ElementaryTypeName",
                        "src": "5457:7:5"
                      }
                    ],
                    "id": 528,
                    "name": "VariableDeclaration",
                    "src": "5457:14:5"
                  },
                  {
                    "attributes": {
                      "constant": false,
                      "name": "_data",
                      "scope": 550,
                      "stateVariable": false,
                      "storageLocation": "default",
                      "type": "bytes",
                      "value": null,
                      "visibility": "internal"
                    },
                    "children": [
                      {
                        "attributes": {
                          "name": "bytes",
                          "type": "bytes"
                        },
                        "id": 529,
                        "name": "ElementaryTypeName",
                        "src": "5473:5:5"
                      }
                    ],
                    "id": 530,
                    "name": "VariableDeclaration",
                    "src": "5473:11:5"
                  }
                ],
                "id": 531,
                "name": "ParameterList",
                "src": "5456:29:5"
              },
              {
                "attributes": {
                  "parameters": [
                    null
                  ]
                },
                "children": [],
                "id": 532,
                "name": "ParameterList",
                "src": "5495:0:5"
              },
              {
                "children": [
                  {
                    "children": [
                      {
                        "attributes": {
                          "argumentTypes": null,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "isStructConstructorCall": false,
                          "lValueRequested": false,
                          "names": [
                            null
                          ],
                          "type": "tuple()",
                          "type_conversion": false
                        },
                        "children": [
                          {
                            "attributes": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                },
                                {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              ],
                              "overloadedDeclarations": [
                                null
                              ],
                              "referencedDeclaration": 1244,
                              "type": "function (address,uint256)",
                              "value": "_burn"
                            },
                            "id": 533,
                            "name": "Identifier",
                            "src": "5567:5:5"
                          },
                          {
                            "attributes": {
                              "argumentTypes": null,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "member_name": "sender",
                              "referencedDeclaration": null,
                              "type": "address"
                            },
                            "children": [
                              {
                                "attributes": {
                                  "argumentTypes": null,
                                  "overloadedDeclarations": [
                                    null
                                  ],
                                  "referencedDeclaration": 1358,
                                  "type": "msg",
                                  "value": "msg"
                                },
                                "id": 534,
                                "name": "Identifier",
                                "src": "5573:3:5"
                              }
                            ],
                            "id": 535,
                            "name": "MemberAccess",
                            "src": "5573:10:5"
                          },
                          {
                            "attributes": {
                              "argumentTypes": null,
                              "overloadedDeclarations": [
                                null
                              ],
                              "referencedDeclaration": 528,
                              "type": "uint256",
                              "value": "_value"
                            },
                            "id": 536,
                            "name": "Identifier",
                            "src": "5585:6:5"
                          }
                        ],
                        "id": 537,
                        "name": "FunctionCall",
                        "src": "5567:25:5"
                      }
                    ],
                    "id": 538,
                    "name": "ExpressionStatement",
                    "src": "5567:25:5"
                  },
                  {
                    "children": [
                      {
                        "attributes": {
                          "argumentTypes": null,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "isStructConstructorCall": false,
                          "lValueRequested": false,
                          "names": [
                            null
                          ],
                          "type": "tuple()",
                          "type_conversion": false
                        },
                        "children": [
                          {
                            "attributes": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                },
                                {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                },
                                {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                },
                                {
                                  "typeIdentifier": "t_bytes_calldata_ptr",
                                  "typeString": "bytes calldata"
                                }
                              ],
                              "overloadedDeclarations": [
                                null
                              ],
                              "referencedDeclaration": 103,
                              "type": "function (address,address,uint256,bytes memory)",
                              "value": "Redeemed"
                            },
                            "id": 539,
                            "name": "Identifier",
                            "src": "5608:8:5"
                          },
                          {
                            "attributes": {
                              "argumentTypes": null,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "isStructConstructorCall": false,
                              "lValueRequested": false,
                              "names": [
                                null
                              ],
                              "type": "address",
                              "type_conversion": true
                            },
                            "children": [
                              {
                                "attributes": {
                                  "argumentTypes": [
                                    {
                                      "typeIdentifier": "t_rational_0_by_1",
                                      "typeString": "int_const 0"
                                    }
                                  ],
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": true,
                                  "lValueRequested": false,
                                  "type": "type(address)",
                                  "value": "address"
                                },
                                "id": 540,
                                "name": "ElementaryTypeNameExpression",
                                "src": "5617:7:5"
                              },
                              {
                                "attributes": {
                                  "argumentTypes": null,
                                  "hexvalue": "30",
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": true,
                                  "lValueRequested": false,
                                  "subdenomination": null,
                                  "token": "number",
                                  "type": "int_const 0",
                                  "value": "0"
                                },
                                "id": 541,
                                "name": "Literal",
                                "src": "5625:1:5"
                              }
                            ],
                            "id": 542,
                            "name": "FunctionCall",
                            "src": "5617:10:5"
                          },
                          {
                            "attributes": {
                              "argumentTypes": null,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "member_name": "sender",
                              "referencedDeclaration": null,
                              "type": "address"
                            },
                            "children": [
                              {
                                "attributes": {
                                  "argumentTypes": null,
                                  "overloadedDeclarations": [
                                    null
                                  ],
                                  "referencedDeclaration": 1358,
                                  "type": "msg",
                                  "value": "msg"
                                },
                                "id": 543,
                                "name": "Identifier",
                                "src": "5629:3:5"
                              }
                            ],
                            "id": 544,
                            "name": "MemberAccess",
                            "src": "5629:10:5"
                          },
                          {
                            "attributes": {
                              "argumentTypes": null,
                              "overloadedDeclarations": [
                                null
                              ],
                              "referencedDeclaration": 528,
                              "type": "uint256",
                              "value": "_value"
                            },
                            "id": 545,
                            "name": "Identifier",
                            "src": "5641:6:5"
                          },
                          {
                            "attributes": {
                              "argumentTypes": null,
                              "overloadedDeclarations": [
                                null
                              ],
                              "referencedDeclaration": 530,
                              "type": "bytes calldata",
                              "value": "_data"
                            },
                            "id": 546,
                            "name": "Identifier",
                            "src": "5649:5:5"
                          }
                        ],
                        "id": 547,
                        "name": "FunctionCall",
                        "src": "5608:47:5"
                      }
                    ],
                    "id": 548,
                    "name": "EmitStatement",
                    "src": "5603:52:5"
                  }
                ],
                "id": 549,
                "name": "Block",
                "src": "5495:168:5"
              }
            ],
            "id": 550,
            "name": "FunctionDefinition",
            "src": "5441:222:5"
          },
          {
            "attributes": {
              "constant": false,
              "documentation": "@notice This function redeem an amount of the token of a msg.sender. For doing so msg.sender may incentivize\r\nusing different ways that could be implemented with in the `redeem` function definition. But those implementations\r\nare out of the scope of the ERC1594. \r\n@dev It is analogy to `transferFrom`\r\n@param _tokenHolder The account whose tokens gets redeemed.\r\n@param _value The amount of tokens need to be redeemed\r\n@param _data The `bytes _data` it can be used in the token contract to authenticate the redemption.\r",
              "implemented": true,
              "isConstructor": false,
              "modifiers": [
                null
              ],
              "name": "redeemFrom",
              "payable": false,
              "scope": 723,
              "stateMutability": "nonpayable",
              "superFunction": 51,
              "visibility": "external"
            },
            "children": [
              {
                "children": [
                  {
                    "attributes": {
                      "constant": false,
                      "name": "_tokenHolder",
                      "scope": 573,
                      "stateVariable": false,
                      "storageLocation": "default",
                      "type": "address",
                      "value": null,
                      "visibility": "internal"
                    },
                    "children": [
                      {
                        "attributes": {
                          "name": "address",
                          "type": "address"
                        },
                        "id": 551,
                        "name": "ElementaryTypeName",
                        "src": "6279:7:5"
                      }
                    ],
                    "id": 552,
                    "name": "VariableDeclaration",
                    "src": "6279:20:5"
                  },
                  {
                    "attributes": {
                      "constant": false,
                      "name": "_value",
                      "scope": 573,
                      "stateVariable": false,
                      "storageLocation": "default",
                      "type": "uint256",
                      "value": null,
                      "visibility": "internal"
                    },
                    "children": [
                      {
                        "attributes": {
                          "name": "uint256",
                          "type": "uint256"
                        },
                        "id": 553,
                        "name": "ElementaryTypeName",
                        "src": "6301:7:5"
                      }
                    ],
                    "id": 554,
                    "name": "VariableDeclaration",
                    "src": "6301:14:5"
                  },
                  {
                    "attributes": {
                      "constant": false,
                      "name": "_data",
                      "scope": 573,
                      "stateVariable": false,
                      "storageLocation": "default",
                      "type": "bytes",
                      "value": null,
                      "visibility": "internal"
                    },
                    "children": [
                      {
                        "attributes": {
                          "name": "bytes",
                          "type": "bytes"
                        },
                        "id": 555,
                        "name": "ElementaryTypeName",
                        "src": "6317:5:5"
                      }
                    ],
                    "id": 556,
                    "name": "VariableDeclaration",
                    "src": "6317:11:5"
                  }
                ],
                "id": 557,
                "name": "ParameterList",
                "src": "6278:51:5"
              },
              {
                "attributes": {
                  "parameters": [
                    null
                  ]
                },
                "children": [],
                "id": 558,
                "name": "ParameterList",
                "src": "6339:0:5"
              },
              {
                "children": [
                  {
                    "children": [
                      {
                        "attributes": {
                          "argumentTypes": null,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "isStructConstructorCall": false,
                          "lValueRequested": false,
                          "names": [
                            null
                          ],
                          "type": "tuple()",
                          "type_conversion": false
                        },
                        "children": [
                          {
                            "attributes": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                },
                                {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              ],
                              "overloadedDeclarations": [
                                null
                              ],
                              "referencedDeclaration": 1285,
                              "type": "function (address,uint256)",
                              "value": "_burnFrom"
                            },
                            "id": 559,
                            "name": "Identifier",
                            "src": "6411:9:5"
                          },
                          {
                            "attributes": {
                              "argumentTypes": null,
                              "overloadedDeclarations": [
                                null
                              ],
                              "referencedDeclaration": 552,
                              "type": "address",
                              "value": "_tokenHolder"
                            },
                            "id": 560,
                            "name": "Identifier",
                            "src": "6421:12:5"
                          },
                          {
                            "attributes": {
                              "argumentTypes": null,
                              "overloadedDeclarations": [
                                null
                              ],
                              "referencedDeclaration": 554,
                              "type": "uint256",
                              "value": "_value"
                            },
                            "id": 561,
                            "name": "Identifier",
                            "src": "6435:6:5"
                          }
                        ],
                        "id": 562,
                        "name": "FunctionCall",
                        "src": "6411:31:5"
                      }
                    ],
                    "id": 563,
                    "name": "ExpressionStatement",
                    "src": "6411:31:5"
                  },
                  {
                    "children": [
                      {
                        "attributes": {
                          "argumentTypes": null,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "isStructConstructorCall": false,
                          "lValueRequested": false,
                          "names": [
                            null
                          ],
                          "type": "tuple()",
                          "type_conversion": false
                        },
                        "children": [
                          {
                            "attributes": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                },
                                {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                },
                                {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                },
                                {
                                  "typeIdentifier": "t_bytes_calldata_ptr",
                                  "typeString": "bytes calldata"
                                }
                              ],
                              "overloadedDeclarations": [
                                null
                              ],
                              "referencedDeclaration": 103,
                              "type": "function (address,address,uint256,bytes memory)",
                              "value": "Redeemed"
                            },
                            "id": 564,
                            "name": "Identifier",
                            "src": "6458:8:5"
                          },
                          {
                            "attributes": {
                              "argumentTypes": null,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "member_name": "sender",
                              "referencedDeclaration": null,
                              "type": "address"
                            },
                            "children": [
                              {
                                "attributes": {
                                  "argumentTypes": null,
                                  "overloadedDeclarations": [
                                    null
                                  ],
                                  "referencedDeclaration": 1358,
                                  "type": "msg",
                                  "value": "msg"
                                },
                                "id": 565,
                                "name": "Identifier",
                                "src": "6467:3:5"
                              }
                            ],
                            "id": 566,
                            "name": "MemberAccess",
                            "src": "6467:10:5"
                          },
                          {
                            "attributes": {
                              "argumentTypes": null,
                              "overloadedDeclarations": [
                                null
                              ],
                              "referencedDeclaration": 552,
                              "type": "address",
                              "value": "_tokenHolder"
                            },
                            "id": 567,
                            "name": "Identifier",
                            "src": "6479:12:5"
                          },
                          {
                            "attributes": {
                              "argumentTypes": null,
                              "overloadedDeclarations": [
                                null
                              ],
                              "referencedDeclaration": 554,
                              "type": "uint256",
                              "value": "_value"
                            },
                            "id": 568,
                            "name": "Identifier",
                            "src": "6493:6:5"
                          },
                          {
                            "attributes": {
                              "argumentTypes": null,
                              "overloadedDeclarations": [
                                null
                              ],
                              "referencedDeclaration": 556,
                              "type": "bytes calldata",
                              "value": "_data"
                            },
                            "id": 569,
                            "name": "Identifier",
                            "src": "6501:5:5"
                          }
                        ],
                        "id": 570,
                        "name": "FunctionCall",
                        "src": "6458:49:5"
                      }
                    ],
                    "id": 571,
                    "name": "EmitStatement",
                    "src": "6453:54:5"
                  }
                ],
                "id": 572,
                "name": "Block",
                "src": "6339:176:5"
              }
            ],
            "id": 573,
            "name": "FunctionDefinition",
            "src": "6259:256:5"
          },
          {
            "attributes": {
              "constant": true,
              "documentation": "@notice Transfers of securities may fail for a number of reasons. So this function will used to understand the\r\ncause of failure by getting the byte value. Which will be the ESC that follows the EIP 1066. ESC can be mapped \r\nwith a reson string to understand the failure cause, table of Ethereum status code will always reside off-chain\r\n@param _to address The address which you want to transfer to\r\n@param _value uint256 the amount of tokens to be transferred\r\n@param _data The `bytes _data` allows arbitrary data to be submitted alongside the transfer.\r\n@return bool It signifies whether the transaction will be executed or not.\r\n@return byte Ethereum status code (ESC)\r\n@return bytes32 Application specific reason code \r",
              "implemented": true,
              "isConstructor": false,
              "modifiers": [
                null
              ],
              "name": "canTransfer",
              "payable": false,
              "scope": 723,
              "stateMutability": "view",
              "superFunction": 66,
              "visibility": "external"
            },
            "children": [
              {
                "children": [
                  {
                    "attributes": {
                      "constant": false,
                      "name": "_to",
                      "scope": 639,
                      "stateVariable": false,
                      "storageLocation": "default",
                      "type": "address",
                      "value": null,
                      "visibility": "internal"
                    },
                    "children": [
                      {
                        "attributes": {
                          "name": "address",
                          "type": "address"
                        },
                        "id": 574,
                        "name": "ElementaryTypeName",
                        "src": "7349:7:5"
                      }
                    ],
                    "id": 575,
                    "name": "VariableDeclaration",
                    "src": "7349:11:5"
                  },
                  {
                    "attributes": {
                      "constant": false,
                      "name": "_value",
                      "scope": 639,
                      "stateVariable": false,
                      "storageLocation": "default",
                      "type": "uint256",
                      "value": null,
                      "visibility": "internal"
                    },
                    "children": [
                      {
                        "attributes": {
                          "name": "uint256",
                          "type": "uint256"
                        },
                        "id": 576,
                        "name": "ElementaryTypeName",
                        "src": "7362:7:5"
                      }
                    ],
                    "id": 577,
                    "name": "VariableDeclaration",
                    "src": "7362:14:5"
                  },
                  {
                    "attributes": {
                      "constant": false,
                      "name": "_data",
                      "scope": 639,
                      "stateVariable": false,
                      "storageLocation": "default",
                      "type": "bytes",
                      "value": null,
                      "visibility": "internal"
                    },
                    "children": [
                      {
                        "attributes": {
                          "name": "bytes",
                          "type": "bytes"
                        },
                        "id": 578,
                        "name": "ElementaryTypeName",
                        "src": "7378:5:5"
                      }
                    ],
                    "id": 579,
                    "name": "VariableDeclaration",
                    "src": "7378:11:5"
                  }
                ],
                "id": 580,
                "name": "ParameterList",
                "src": "7348:42:5"
              },
              {
                "children": [
                  {
                    "attributes": {
                      "constant": false,
                      "name": "",
                      "scope": 639,
                      "stateVariable": false,
                      "storageLocation": "default",
                      "type": "bool",
                      "value": null,
                      "visibility": "internal"
                    },
                    "children": [
                      {
                        "attributes": {
                          "name": "bool",
                          "type": "bool"
                        },
                        "id": 581,
                        "name": "ElementaryTypeName",
                        "src": "7414:4:5"
                      }
                    ],
                    "id": 582,
                    "name": "VariableDeclaration",
                    "src": "7414:4:5"
                  },
                  {
                    "attributes": {
                      "constant": false,
                      "name": "",
                      "scope": 639,
                      "stateVariable": false,
                      "storageLocation": "default",
                      "type": "bytes1",
                      "value": null,
                      "visibility": "internal"
                    },
                    "children": [
                      {
                        "attributes": {
                          "name": "byte",
                          "type": "bytes1"
                        },
                        "id": 583,
                        "name": "ElementaryTypeName",
                        "src": "7420:4:5"
                      }
                    ],
                    "id": 584,
                    "name": "VariableDeclaration",
                    "src": "7420:4:5"
                  },
                  {
                    "attributes": {
                      "constant": false,
                      "name": "",
                      "scope": 639,
                      "stateVariable": false,
                      "storageLocation": "default",
                      "type": "bytes32",
                      "value": null,
                      "visibility": "internal"
                    },
                    "children": [
                      {
                        "attributes": {
                          "name": "bytes32",
                          "type": "bytes32"
                        },
                        "id": 585,
                        "name": "ElementaryTypeName",
                        "src": "7426:7:5"
                      }
                    ],
                    "id": 586,
                    "name": "VariableDeclaration",
                    "src": "7426:7:5"
                  }
                ],
                "id": 587,
                "name": "ParameterList",
                "src": "7413:21:5"
              },
              {
                "children": [
                  {
                    "children": [
                      {
                        "attributes": {
                          "argumentTypes": null,
                          "commonType": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          },
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "operator": "<",
                          "type": "bool"
                        },
                        "children": [
                          {
                            "attributes": {
                              "argumentTypes": null,
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": false,
                              "type": "uint256"
                            },
                            "children": [
                              {
                                "attributes": {
                                  "argumentTypes": null,
                                  "overloadedDeclarations": [
                                    null
                                  ],
                                  "referencedDeclaration": 838,
                                  "type": "mapping(address => uint256)",
                                  "value": "_balances"
                                },
                                "id": 588,
                                "name": "Identifier",
                                "src": "7511:9:5"
                              },
                              {
                                "attributes": {
                                  "argumentTypes": null,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "member_name": "sender",
                                  "referencedDeclaration": null,
                                  "type": "address"
                                },
                                "children": [
                                  {
                                    "attributes": {
                                      "argumentTypes": null,
                                      "overloadedDeclarations": [
                                        null
                                      ],
                                      "referencedDeclaration": 1358,
                                      "type": "msg",
                                      "value": "msg"
                                    },
                                    "id": 589,
                                    "name": "Identifier",
                                    "src": "7521:3:5"
                                  }
                                ],
                                "id": 590,
                                "name": "MemberAccess",
                                "src": "7521:10:5"
                              }
                            ],
                            "id": 591,
                            "name": "IndexAccess",
                            "src": "7511:21:5"
                          },
                          {
                            "attributes": {
                              "argumentTypes": null,
                              "overloadedDeclarations": [
                                null
                              ],
                              "referencedDeclaration": 577,
                              "type": "uint256",
                              "value": "_value"
                            },
                            "id": 592,
                            "name": "Identifier",
                            "src": "7535:6:5"
                          }
                        ],
                        "id": 593,
                        "name": "BinaryOperation",
                        "src": "7511:30:5"
                      },
                      {
                        "attributes": {
                          "functionReturnParameters": 587
                        },
                        "children": [
                          {
                            "attributes": {
                              "argumentTypes": null,
                              "isConstant": false,
                              "isInlineArray": false,
                              "isLValue": false,
                              "isPure": true,
                              "lValueRequested": false,
                              "type": "tuple(bool,int_const 82,bytes32)"
                            },
                            "children": [
                              {
                                "attributes": {
                                  "argumentTypes": null,
                                  "hexvalue": "66616c7365",
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": true,
                                  "lValueRequested": false,
                                  "subdenomination": null,
                                  "token": "bool",
                                  "type": "bool",
                                  "value": "false"
                                },
                                "id": 594,
                                "name": "Literal",
                                "src": "7564:5:5"
                              },
                              {
                                "attributes": {
                                  "argumentTypes": null,
                                  "hexvalue": "30783532",
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": true,
                                  "lValueRequested": false,
                                  "subdenomination": null,
                                  "token": "number",
                                  "type": "int_const 82",
                                  "value": "0x52"
                                },
                                "id": 595,
                                "name": "Literal",
                                "src": "7571:4:5"
                              },
                              {
                                "attributes": {
                                  "argumentTypes": null,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": true,
                                  "isStructConstructorCall": false,
                                  "lValueRequested": false,
                                  "names": [
                                    null
                                  ],
                                  "type": "bytes32",
                                  "type_conversion": true
                                },
                                "children": [
                                  {
                                    "attributes": {
                                      "argumentTypes": [
                                        {
                                          "typeIdentifier": "t_rational_0_by_1",
                                          "typeString": "int_const 0"
                                        }
                                      ],
                                      "isConstant": false,
                                      "isLValue": false,
                                      "isPure": true,
                                      "lValueRequested": false,
                                      "type": "type(bytes32)",
                                      "value": "bytes32"
                                    },
                                    "id": 596,
                                    "name": "ElementaryTypeNameExpression",
                                    "src": "7577:7:5"
                                  },
                                  {
                                    "attributes": {
                                      "argumentTypes": null,
                                      "hexvalue": "30",
                                      "isConstant": false,
                                      "isLValue": false,
                                      "isPure": true,
                                      "lValueRequested": false,
                                      "subdenomination": null,
                                      "token": "number",
                                      "type": "int_const 0",
                                      "value": "0"
                                    },
                                    "id": 597,
                                    "name": "Literal",
                                    "src": "7585:1:5"
                                  }
                                ],
                                "id": 598,
                                "name": "FunctionCall",
                                "src": "7577:10:5"
                              }
                            ],
                            "id": 599,
                            "name": "TupleExpression",
                            "src": "7563:25:5"
                          }
                        ],
                        "id": 600,
                        "name": "Return",
                        "src": "7556:32:5"
                      },
                      {
                        "children": [
                          {
                            "attributes": {
                              "argumentTypes": null,
                              "commonType": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              },
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "operator": "==",
                              "type": "bool"
                            },
                            "children": [
                              {
                                "attributes": {
                                  "argumentTypes": null,
                                  "overloadedDeclarations": [
                                    null
                                  ],
                                  "referencedDeclaration": 575,
                                  "type": "address",
                                  "value": "_to"
                                },
                                "id": 601,
                                "name": "Identifier",
                                "src": "7610:3:5"
                              },
                              {
                                "attributes": {
                                  "argumentTypes": null,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": true,
                                  "isStructConstructorCall": false,
                                  "lValueRequested": false,
                                  "names": [
                                    null
                                  ],
                                  "type": "address",
                                  "type_conversion": true
                                },
                                "children": [
                                  {
                                    "attributes": {
                                      "argumentTypes": [
                                        {
                                          "typeIdentifier": "t_rational_0_by_1",
                                          "typeString": "int_const 0"
                                        }
                                      ],
                                      "isConstant": false,
                                      "isLValue": false,
                                      "isPure": true,
                                      "lValueRequested": false,
                                      "type": "type(address)",
                                      "value": "address"
                                    },
                                    "id": 602,
                                    "name": "ElementaryTypeNameExpression",
                                    "src": "7617:7:5"
                                  },
                                  {
                                    "attributes": {
                                      "argumentTypes": null,
                                      "hexvalue": "30",
                                      "isConstant": false,
                                      "isLValue": false,
                                      "isPure": true,
                                      "lValueRequested": false,
                                      "subdenomination": null,
                                      "token": "number",
                                      "type": "int_const 0",
                                      "value": "0"
                                    },
                                    "id": 603,
                                    "name": "Literal",
                                    "src": "7625:1:5"
                                  }
                                ],
                                "id": 604,
                                "name": "FunctionCall",
                                "src": "7617:10:5"
                              }
                            ],
                            "id": 605,
                            "name": "BinaryOperation",
                            "src": "7610:17:5"
                          },
                          {
                            "attributes": {
                              "functionReturnParameters": 587
                            },
                            "children": [
                              {
                                "attributes": {
                                  "argumentTypes": null,
                                  "isConstant": false,
                                  "isInlineArray": false,
                                  "isLValue": false,
                                  "isPure": true,
                                  "lValueRequested": false,
                                  "type": "tuple(bool,int_const 87,bytes32)"
                                },
                                "children": [
                                  {
                                    "attributes": {
                                      "argumentTypes": null,
                                      "hexvalue": "66616c7365",
                                      "isConstant": false,
                                      "isLValue": false,
                                      "isPure": true,
                                      "lValueRequested": false,
                                      "subdenomination": null,
                                      "token": "bool",
                                      "type": "bool",
                                      "value": "false"
                                    },
                                    "id": 606,
                                    "name": "Literal",
                                    "src": "7650:5:5"
                                  },
                                  {
                                    "attributes": {
                                      "argumentTypes": null,
                                      "hexvalue": "30783537",
                                      "isConstant": false,
                                      "isLValue": false,
                                      "isPure": true,
                                      "lValueRequested": false,
                                      "subdenomination": null,
                                      "token": "number",
                                      "type": "int_const 87",
                                      "value": "0x57"
                                    },
                                    "id": 607,
                                    "name": "Literal",
                                    "src": "7657:4:5"
                                  },
                                  {
                                    "attributes": {
                                      "argumentTypes": null,
                                      "isConstant": false,
                                      "isLValue": false,
                                      "isPure": true,
                                      "isStructConstructorCall": false,
                                      "lValueRequested": false,
                                      "names": [
                                        null
                                      ],
                                      "type": "bytes32",
                                      "type_conversion": true
                                    },
                                    "children": [
                                      {
                                        "attributes": {
                                          "argumentTypes": [
                                            {
                                              "typeIdentifier": "t_rational_0_by_1",
                                              "typeString": "int_const 0"
                                            }
                                          ],
                                          "isConstant": false,
                                          "isLValue": false,
                                          "isPure": true,
                                          "lValueRequested": false,
                                          "type": "type(bytes32)",
                                          "value": "bytes32"
                                        },
                                        "id": 608,
                                        "name": "ElementaryTypeNameExpression",
                                        "src": "7663:7:5"
                                      },
                                      {
                                        "attributes": {
                                          "argumentTypes": null,
                                          "hexvalue": "30",
                                          "isConstant": false,
                                          "isLValue": false,
                                          "isPure": true,
                                          "lValueRequested": false,
                                          "subdenomination": null,
                                          "token": "number",
                                          "type": "int_const 0",
                                          "value": "0"
                                        },
                                        "id": 609,
                                        "name": "Literal",
                                        "src": "7671:1:5"
                                      }
                                    ],
                                    "id": 610,
                                    "name": "FunctionCall",
                                    "src": "7663:10:5"
                                  }
                                ],
                                "id": 611,
                                "name": "TupleExpression",
                                "src": "7649:25:5"
                              }
                            ],
                            "id": 612,
                            "name": "Return",
                            "src": "7642:32:5"
                          },
                          {
                            "attributes": {
                              "falseBody": null
                            },
                            "children": [
                              {
                                "attributes": {
                                  "argumentTypes": null,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "operator": "!",
                                  "prefix": true,
                                  "type": "bool"
                                },
                                "children": [
                                  {
                                    "attributes": {
                                      "argumentTypes": null,
                                      "isConstant": false,
                                      "isLValue": false,
                                      "isPure": false,
                                      "isStructConstructorCall": false,
                                      "lValueRequested": false,
                                      "names": [
                                        null
                                      ],
                                      "type": "bool",
                                      "type_conversion": false
                                    },
                                    "children": [
                                      {
                                        "attributes": {
                                          "argumentTypes": [
                                            {
                                              "typeIdentifier": "t_uint256",
                                              "typeString": "uint256"
                                            },
                                            {
                                              "typeIdentifier": "t_uint256",
                                              "typeString": "uint256"
                                            }
                                          ],
                                          "isConstant": false,
                                          "isLValue": false,
                                          "isPure": false,
                                          "lValueRequested": false,
                                          "member_name": "checkAdd",
                                          "referencedDeclaration": 181,
                                          "type": "function (uint256,uint256) pure returns (bool)"
                                        },
                                        "children": [
                                          {
                                            "attributes": {
                                              "argumentTypes": null,
                                              "overloadedDeclarations": [
                                                null
                                              ],
                                              "referencedDeclaration": 182,
                                              "type": "type(library KindMath)",
                                              "value": "KindMath"
                                            },
                                            "id": 613,
                                            "name": "Identifier",
                                            "src": "7697:8:5"
                                          }
                                        ],
                                        "id": 614,
                                        "name": "MemberAccess",
                                        "src": "7697:17:5"
                                      },
                                      {
                                        "attributes": {
                                          "argumentTypes": null,
                                          "isConstant": false,
                                          "isLValue": true,
                                          "isPure": false,
                                          "lValueRequested": false,
                                          "type": "uint256"
                                        },
                                        "children": [
                                          {
                                            "attributes": {
                                              "argumentTypes": null,
                                              "overloadedDeclarations": [
                                                null
                                              ],
                                              "referencedDeclaration": 838,
                                              "type": "mapping(address => uint256)",
                                              "value": "_balances"
                                            },
                                            "id": 615,
                                            "name": "Identifier",
                                            "src": "7715:9:5"
                                          },
                                          {
                                            "attributes": {
                                              "argumentTypes": null,
                                              "overloadedDeclarations": [
                                                null
                                              ],
                                              "referencedDeclaration": 575,
                                              "type": "address",
                                              "value": "_to"
                                            },
                                            "id": 616,
                                            "name": "Identifier",
                                            "src": "7725:3:5"
                                          }
                                        ],
                                        "id": 617,
                                        "name": "IndexAccess",
                                        "src": "7715:14:5"
                                      },
                                      {
                                        "attributes": {
                                          "argumentTypes": null,
                                          "overloadedDeclarations": [
                                            null
                                          ],
                                          "referencedDeclaration": 577,
                                          "type": "uint256",
                                          "value": "_value"
                                        },
                                        "id": 618,
                                        "name": "Identifier",
                                        "src": "7731:6:5"
                                      }
                                    ],
                                    "id": 619,
                                    "name": "FunctionCall",
                                    "src": "7697:41:5"
                                  }
                                ],
                                "id": 620,
                                "name": "UnaryOperation",
                                "src": "7696:42:5"
                              },
                              {
                                "attributes": {
                                  "functionReturnParameters": 587
                                },
                                "children": [
                                  {
                                    "attributes": {
                                      "argumentTypes": null,
                                      "isConstant": false,
                                      "isInlineArray": false,
                                      "isLValue": false,
                                      "isPure": true,
                                      "lValueRequested": false,
                                      "type": "tuple(bool,int_const 80,bytes32)"
                                    },
                                    "children": [
                                      {
                                        "attributes": {
                                          "argumentTypes": null,
                                          "hexvalue": "66616c7365",
                                          "isConstant": false,
                                          "isLValue": false,
                                          "isPure": true,
                                          "lValueRequested": false,
                                          "subdenomination": null,
                                          "token": "bool",
                                          "type": "bool",
                                          "value": "false"
                                        },
                                        "id": 621,
                                        "name": "Literal",
                                        "src": "7761:5:5"
                                      },
                                      {
                                        "attributes": {
                                          "argumentTypes": null,
                                          "hexvalue": "30783530",
                                          "isConstant": false,
                                          "isLValue": false,
                                          "isPure": true,
                                          "lValueRequested": false,
                                          "subdenomination": null,
                                          "token": "number",
                                          "type": "int_const 80",
                                          "value": "0x50"
                                        },
                                        "id": 622,
                                        "name": "Literal",
                                        "src": "7768:4:5"
                                      },
                                      {
                                        "attributes": {
                                          "argumentTypes": null,
                                          "isConstant": false,
                                          "isLValue": false,
                                          "isPure": true,
                                          "isStructConstructorCall": false,
                                          "lValueRequested": false,
                                          "names": [
                                            null
                                          ],
                                          "type": "bytes32",
                                          "type_conversion": true
                                        },
                                        "children": [
                                          {
                                            "attributes": {
                                              "argumentTypes": [
                                                {
                                                  "typeIdentifier": "t_rational_0_by_1",
                                                  "typeString": "int_const 0"
                                                }
                                              ],
                                              "isConstant": false,
                                              "isLValue": false,
                                              "isPure": true,
                                              "lValueRequested": false,
                                              "type": "type(bytes32)",
                                              "value": "bytes32"
                                            },
                                            "id": 623,
                                            "name": "ElementaryTypeNameExpression",
                                            "src": "7774:7:5"
                                          },
                                          {
                                            "attributes": {
                                              "argumentTypes": null,
                                              "hexvalue": "30",
                                              "isConstant": false,
                                              "isLValue": false,
                                              "isPure": true,
                                              "lValueRequested": false,
                                              "subdenomination": null,
                                              "token": "number",
                                              "type": "int_const 0",
                                              "value": "0"
                                            },
                                            "id": 624,
                                            "name": "Literal",
                                            "src": "7782:1:5"
                                          }
                                        ],
                                        "id": 625,
                                        "name": "FunctionCall",
                                        "src": "7774:10:5"
                                      }
                                    ],
                                    "id": 626,
                                    "name": "TupleExpression",
                                    "src": "7760:25:5"
                                  }
                                ],
                                "id": 627,
                                "name": "Return",
                                "src": "7753:32:5"
                              }
                            ],
                            "id": 628,
                            "name": "IfStatement",
                            "src": "7692:93:5"
                          }
                        ],
                        "id": 629,
                        "name": "IfStatement",
                        "src": "7606:179:5"
                      }
                    ],
                    "id": 630,
                    "name": "IfStatement",
                    "src": "7507:278:5"
                  },
                  {
                    "attributes": {
                      "functionReturnParameters": 587
                    },
                    "children": [
                      {
                        "attributes": {
                          "argumentTypes": null,
                          "isConstant": false,
                          "isInlineArray": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "type": "tuple(bool,int_const 81,bytes32)"
                        },
                        "children": [
                          {
                            "attributes": {
                              "argumentTypes": null,
                              "hexvalue": "74727565",
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "lValueRequested": false,
                              "subdenomination": null,
                              "token": "bool",
                              "type": "bool",
                              "value": "true"
                            },
                            "id": 631,
                            "name": "Literal",
                            "src": "7804:4:5"
                          },
                          {
                            "attributes": {
                              "argumentTypes": null,
                              "hexvalue": "30783531",
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "lValueRequested": false,
                              "subdenomination": null,
                              "token": "number",
                              "type": "int_const 81",
                              "value": "0x51"
                            },
                            "id": 632,
                            "name": "Literal",
                            "src": "7810:4:5"
                          },
                          {
                            "attributes": {
                              "argumentTypes": null,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "isStructConstructorCall": false,
                              "lValueRequested": false,
                              "names": [
                                null
                              ],
                              "type": "bytes32",
                              "type_conversion": true
                            },
                            "children": [
                              {
                                "attributes": {
                                  "argumentTypes": [
                                    {
                                      "typeIdentifier": "t_rational_0_by_1",
                                      "typeString": "int_const 0"
                                    }
                                  ],
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": true,
                                  "lValueRequested": false,
                                  "type": "type(bytes32)",
                                  "value": "bytes32"
                                },
                                "id": 633,
                                "name": "ElementaryTypeNameExpression",
                                "src": "7816:7:5"
                              },
                              {
                                "attributes": {
                                  "argumentTypes": null,
                                  "hexvalue": "30",
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": true,
                                  "lValueRequested": false,
                                  "subdenomination": null,
                                  "token": "number",
                                  "type": "int_const 0",
                                  "value": "0"
                                },
                                "id": 634,
                                "name": "Literal",
                                "src": "7824:1:5"
                              }
                            ],
                            "id": 635,
                            "name": "FunctionCall",
                            "src": "7816:10:5"
                          }
                        ],
                        "id": 636,
                        "name": "TupleExpression",
                        "src": "7803:24:5"
                      }
                    ],
                    "id": 637,
                    "name": "Return",
                    "src": "7796:31:5"
                  }
                ],
                "id": 638,
                "name": "Block",
                "src": "7435:400:5"
              }
            ],
            "id": 639,
            "name": "FunctionDefinition",
            "src": "7328:507:5"
          },
          {
            "attributes": {
              "constant": true,
              "documentation": "@notice Transfers of securities may fail for a number of reasons. So this function will used to understand the\r\ncause of failure by getting the byte value. Which will be the ESC that follows the EIP 1066. ESC can be mapped \r\nwith a reson string to understand the failure cause, table of Ethereum status code will always reside off-chain\r\n@param _from address The address which you want to send tokens from\r\n@param _to address The address which you want to transfer to\r\n@param _value uint256 the amount of tokens to be transferred\r\n@param _data The `bytes _data` allows arbitrary data to be submitted alongside the transfer.\r\n@return bool It signifies whether the transaction will be executed or not.\r\n@return byte Ethereum status code (ESC)\r\n@return bytes32 Application specific reason code \r",
              "implemented": true,
              "isConstructor": false,
              "modifiers": [
                null
              ],
              "name": "canTransferFrom",
              "payable": false,
              "scope": 723,
              "stateMutability": "view",
              "superFunction": 83,
              "visibility": "external"
            },
            "children": [
              {
                "children": [
                  {
                    "attributes": {
                      "constant": false,
                      "name": "_from",
                      "scope": 722,
                      "stateVariable": false,
                      "storageLocation": "default",
                      "type": "address",
                      "value": null,
                      "visibility": "internal"
                    },
                    "children": [
                      {
                        "attributes": {
                          "name": "address",
                          "type": "address"
                        },
                        "id": 640,
                        "name": "ElementaryTypeName",
                        "src": "8749:7:5"
                      }
                    ],
                    "id": 641,
                    "name": "VariableDeclaration",
                    "src": "8749:13:5"
                  },
                  {
                    "attributes": {
                      "constant": false,
                      "name": "_to",
                      "scope": 722,
                      "stateVariable": false,
                      "storageLocation": "default",
                      "type": "address",
                      "value": null,
                      "visibility": "internal"
                    },
                    "children": [
                      {
                        "attributes": {
                          "name": "address",
                          "type": "address"
                        },
                        "id": 642,
                        "name": "ElementaryTypeName",
                        "src": "8764:7:5"
                      }
                    ],
                    "id": 643,
                    "name": "VariableDeclaration",
                    "src": "8764:11:5"
                  },
                  {
                    "attributes": {
                      "constant": false,
                      "name": "_value",
                      "scope": 722,
                      "stateVariable": false,
                      "storageLocation": "default",
                      "type": "uint256",
                      "value": null,
                      "visibility": "internal"
                    },
                    "children": [
                      {
                        "attributes": {
                          "name": "uint256",
                          "type": "uint256"
                        },
                        "id": 644,
                        "name": "ElementaryTypeName",
                        "src": "8777:7:5"
                      }
                    ],
                    "id": 645,
                    "name": "VariableDeclaration",
                    "src": "8777:14:5"
                  },
                  {
                    "attributes": {
                      "constant": false,
                      "name": "_data",
                      "scope": 722,
                      "stateVariable": false,
                      "storageLocation": "default",
                      "type": "bytes",
                      "value": null,
                      "visibility": "internal"
                    },
                    "children": [
                      {
                        "attributes": {
                          "name": "bytes",
                          "type": "bytes"
                        },
                        "id": 646,
                        "name": "ElementaryTypeName",
                        "src": "8793:5:5"
                      }
                    ],
                    "id": 647,
                    "name": "VariableDeclaration",
                    "src": "8793:11:5"
                  }
                ],
                "id": 648,
                "name": "ParameterList",
                "src": "8748:57:5"
              },
              {
                "children": [
                  {
                    "attributes": {
                      "constant": false,
                      "name": "",
                      "scope": 722,
                      "stateVariable": false,
                      "storageLocation": "default",
                      "type": "bool",
                      "value": null,
                      "visibility": "internal"
                    },
                    "children": [
                      {
                        "attributes": {
                          "name": "bool",
                          "type": "bool"
                        },
                        "id": 649,
                        "name": "ElementaryTypeName",
                        "src": "8829:4:5"
                      }
                    ],
                    "id": 650,
                    "name": "VariableDeclaration",
                    "src": "8829:4:5"
                  },
                  {
                    "attributes": {
                      "constant": false,
                      "name": "",
                      "scope": 722,
                      "stateVariable": false,
                      "storageLocation": "default",
                      "type": "bytes1",
                      "value": null,
                      "visibility": "internal"
                    },
                    "children": [
                      {
                        "attributes": {
                          "name": "byte",
                          "type": "bytes1"
                        },
                        "id": 651,
                        "name": "ElementaryTypeName",
                        "src": "8835:4:5"
                      }
                    ],
                    "id": 652,
                    "name": "VariableDeclaration",
                    "src": "8835:4:5"
                  },
                  {
                    "attributes": {
                      "constant": false,
                      "name": "",
                      "scope": 722,
                      "stateVariable": false,
                      "storageLocation": "default",
                      "type": "bytes32",
                      "value": null,
                      "visibility": "internal"
                    },
                    "children": [
                      {
                        "attributes": {
                          "name": "bytes32",
                          "type": "bytes32"
                        },
                        "id": 653,
                        "name": "ElementaryTypeName",
                        "src": "8841:7:5"
                      }
                    ],
                    "id": 654,
                    "name": "VariableDeclaration",
                    "src": "8841:7:5"
                  }
                ],
                "id": 655,
                "name": "ParameterList",
                "src": "8828:21:5"
              },
              {
                "children": [
                  {
                    "children": [
                      {
                        "attributes": {
                          "argumentTypes": null,
                          "commonType": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          },
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "operator": ">",
                          "type": "bool"
                        },
                        "children": [
                          {
                            "attributes": {
                              "argumentTypes": null,
                              "overloadedDeclarations": [
                                null
                              ],
                              "referencedDeclaration": 645,
                              "type": "uint256",
                              "value": "_value"
                            },
                            "id": 656,
                            "name": "Identifier",
                            "src": "8926:6:5"
                          },
                          {
                            "attributes": {
                              "argumentTypes": null,
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": false,
                              "type": "uint256"
                            },
                            "children": [
                              {
                                "attributes": {
                                  "argumentTypes": null,
                                  "isConstant": false,
                                  "isLValue": true,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "type": "mapping(address => uint256)"
                                },
                                "children": [
                                  {
                                    "attributes": {
                                      "argumentTypes": null,
                                      "overloadedDeclarations": [
                                        null
                                      ],
                                      "referencedDeclaration": 844,
                                      "type": "mapping(address => mapping(address => uint256))",
                                      "value": "_allowed"
                                    },
                                    "id": 657,
                                    "name": "Identifier",
                                    "src": "8935:8:5"
                                  },
                                  {
                                    "attributes": {
                                      "argumentTypes": null,
                                      "overloadedDeclarations": [
                                        null
                                      ],
                                      "referencedDeclaration": 641,
                                      "type": "address",
                                      "value": "_from"
                                    },
                                    "id": 658,
                                    "name": "Identifier",
                                    "src": "8944:5:5"
                                  }
                                ],
                                "id": 659,
                                "name": "IndexAccess",
                                "src": "8935:15:5"
                              },
                              {
                                "attributes": {
                                  "argumentTypes": null,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "member_name": "sender",
                                  "referencedDeclaration": null,
                                  "type": "address"
                                },
                                "children": [
                                  {
                                    "attributes": {
                                      "argumentTypes": null,
                                      "overloadedDeclarations": [
                                        null
                                      ],
                                      "referencedDeclaration": 1358,
                                      "type": "msg",
                                      "value": "msg"
                                    },
                                    "id": 660,
                                    "name": "Identifier",
                                    "src": "8951:3:5"
                                  }
                                ],
                                "id": 661,
                                "name": "MemberAccess",
                                "src": "8951:10:5"
                              }
                            ],
                            "id": 662,
                            "name": "IndexAccess",
                            "src": "8935:27:5"
                          }
                        ],
                        "id": 663,
                        "name": "BinaryOperation",
                        "src": "8926:36:5"
                      },
                      {
                        "attributes": {
                          "functionReturnParameters": 655
                        },
                        "children": [
                          {
                            "attributes": {
                              "argumentTypes": null,
                              "isConstant": false,
                              "isInlineArray": false,
                              "isLValue": false,
                              "isPure": true,
                              "lValueRequested": false,
                              "type": "tuple(bool,int_const 83,bytes32)"
                            },
                            "children": [
                              {
                                "attributes": {
                                  "argumentTypes": null,
                                  "hexvalue": "66616c7365",
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": true,
                                  "lValueRequested": false,
                                  "subdenomination": null,
                                  "token": "bool",
                                  "type": "bool",
                                  "value": "false"
                                },
                                "id": 664,
                                "name": "Literal",
                                "src": "8985:5:5"
                              },
                              {
                                "attributes": {
                                  "argumentTypes": null,
                                  "hexvalue": "30783533",
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": true,
                                  "lValueRequested": false,
                                  "subdenomination": null,
                                  "token": "number",
                                  "type": "int_const 83",
                                  "value": "0x53"
                                },
                                "id": 665,
                                "name": "Literal",
                                "src": "8992:4:5"
                              },
                              {
                                "attributes": {
                                  "argumentTypes": null,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": true,
                                  "isStructConstructorCall": false,
                                  "lValueRequested": false,
                                  "names": [
                                    null
                                  ],
                                  "type": "bytes32",
                                  "type_conversion": true
                                },
                                "children": [
                                  {
                                    "attributes": {
                                      "argumentTypes": [
                                        {
                                          "typeIdentifier": "t_rational_0_by_1",
                                          "typeString": "int_const 0"
                                        }
                                      ],
                                      "isConstant": false,
                                      "isLValue": false,
                                      "isPure": true,
                                      "lValueRequested": false,
                                      "type": "type(bytes32)",
                                      "value": "bytes32"
                                    },
                                    "id": 666,
                                    "name": "ElementaryTypeNameExpression",
                                    "src": "8998:7:5"
                                  },
                                  {
                                    "attributes": {
                                      "argumentTypes": null,
                                      "hexvalue": "30",
                                      "isConstant": false,
                                      "isLValue": false,
                                      "isPure": true,
                                      "lValueRequested": false,
                                      "subdenomination": null,
                                      "token": "number",
                                      "type": "int_const 0",
                                      "value": "0"
                                    },
                                    "id": 667,
                                    "name": "Literal",
                                    "src": "9006:1:5"
                                  }
                                ],
                                "id": 668,
                                "name": "FunctionCall",
                                "src": "8998:10:5"
                              }
                            ],
                            "id": 669,
                            "name": "TupleExpression",
                            "src": "8984:25:5"
                          }
                        ],
                        "id": 670,
                        "name": "Return",
                        "src": "8977:32:5"
                      },
                      {
                        "children": [
                          {
                            "attributes": {
                              "argumentTypes": null,
                              "commonType": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              },
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "operator": "<",
                              "type": "bool"
                            },
                            "children": [
                              {
                                "attributes": {
                                  "argumentTypes": null,
                                  "isConstant": false,
                                  "isLValue": true,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "type": "uint256"
                                },
                                "children": [
                                  {
                                    "attributes": {
                                      "argumentTypes": null,
                                      "overloadedDeclarations": [
                                        null
                                      ],
                                      "referencedDeclaration": 838,
                                      "type": "mapping(address => uint256)",
                                      "value": "_balances"
                                    },
                                    "id": 671,
                                    "name": "Identifier",
                                    "src": "9031:9:5"
                                  },
                                  {
                                    "attributes": {
                                      "argumentTypes": null,
                                      "overloadedDeclarations": [
                                        null
                                      ],
                                      "referencedDeclaration": 641,
                                      "type": "address",
                                      "value": "_from"
                                    },
                                    "id": 672,
                                    "name": "Identifier",
                                    "src": "9041:5:5"
                                  }
                                ],
                                "id": 673,
                                "name": "IndexAccess",
                                "src": "9031:16:5"
                              },
                              {
                                "attributes": {
                                  "argumentTypes": null,
                                  "overloadedDeclarations": [
                                    null
                                  ],
                                  "referencedDeclaration": 645,
                                  "type": "uint256",
                                  "value": "_value"
                                },
                                "id": 674,
                                "name": "Identifier",
                                "src": "9050:6:5"
                              }
                            ],
                            "id": 675,
                            "name": "BinaryOperation",
                            "src": "9031:25:5"
                          },
                          {
                            "attributes": {
                              "functionReturnParameters": 655
                            },
                            "children": [
                              {
                                "attributes": {
                                  "argumentTypes": null,
                                  "isConstant": false,
                                  "isInlineArray": false,
                                  "isLValue": false,
                                  "isPure": true,
                                  "lValueRequested": false,
                                  "type": "tuple(bool,int_const 82,bytes32)"
                                },
                                "children": [
                                  {
                                    "attributes": {
                                      "argumentTypes": null,
                                      "hexvalue": "66616c7365",
                                      "isConstant": false,
                                      "isLValue": false,
                                      "isPure": true,
                                      "lValueRequested": false,
                                      "subdenomination": null,
                                      "token": "bool",
                                      "type": "bool",
                                      "value": "false"
                                    },
                                    "id": 676,
                                    "name": "Literal",
                                    "src": "9079:5:5"
                                  },
                                  {
                                    "attributes": {
                                      "argumentTypes": null,
                                      "hexvalue": "30783532",
                                      "isConstant": false,
                                      "isLValue": false,
                                      "isPure": true,
                                      "lValueRequested": false,
                                      "subdenomination": null,
                                      "token": "number",
                                      "type": "int_const 82",
                                      "value": "0x52"
                                    },
                                    "id": 677,
                                    "name": "Literal",
                                    "src": "9086:4:5"
                                  },
                                  {
                                    "attributes": {
                                      "argumentTypes": null,
                                      "isConstant": false,
                                      "isLValue": false,
                                      "isPure": true,
                                      "isStructConstructorCall": false,
                                      "lValueRequested": false,
                                      "names": [
                                        null
                                      ],
                                      "type": "bytes32",
                                      "type_conversion": true
                                    },
                                    "children": [
                                      {
                                        "attributes": {
                                          "argumentTypes": [
                                            {
                                              "typeIdentifier": "t_rational_0_by_1",
                                              "typeString": "int_const 0"
                                            }
                                          ],
                                          "isConstant": false,
                                          "isLValue": false,
                                          "isPure": true,
                                          "lValueRequested": false,
                                          "type": "type(bytes32)",
                                          "value": "bytes32"
                                        },
                                        "id": 678,
                                        "name": "ElementaryTypeNameExpression",
                                        "src": "9092:7:5"
                                      },
                                      {
                                        "attributes": {
                                          "argumentTypes": null,
                                          "hexvalue": "30",
                                          "isConstant": false,
                                          "isLValue": false,
                                          "isPure": true,
                                          "lValueRequested": false,
                                          "subdenomination": null,
                                          "token": "number",
                                          "type": "int_const 0",
                                          "value": "0"
                                        },
                                        "id": 679,
                                        "name": "Literal",
                                        "src": "9100:1:5"
                                      }
                                    ],
                                    "id": 680,
                                    "name": "FunctionCall",
                                    "src": "9092:10:5"
                                  }
                                ],
                                "id": 681,
                                "name": "TupleExpression",
                                "src": "9078:25:5"
                              }
                            ],
                            "id": 682,
                            "name": "Return",
                            "src": "9071:32:5"
                          },
                          {
                            "children": [
                              {
                                "attributes": {
                                  "argumentTypes": null,
                                  "commonType": {
                                    "typeIdentifier": "t_address",
                                    "typeString": "address"
                                  },
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "operator": "==",
                                  "type": "bool"
                                },
                                "children": [
                                  {
                                    "attributes": {
                                      "argumentTypes": null,
                                      "overloadedDeclarations": [
                                        null
                                      ],
                                      "referencedDeclaration": 643,
                                      "type": "address",
                                      "value": "_to"
                                    },
                                    "id": 683,
                                    "name": "Identifier",
                                    "src": "9125:3:5"
                                  },
                                  {
                                    "attributes": {
                                      "argumentTypes": null,
                                      "isConstant": false,
                                      "isLValue": false,
                                      "isPure": true,
                                      "isStructConstructorCall": false,
                                      "lValueRequested": false,
                                      "names": [
                                        null
                                      ],
                                      "type": "address",
                                      "type_conversion": true
                                    },
                                    "children": [
                                      {
                                        "attributes": {
                                          "argumentTypes": [
                                            {
                                              "typeIdentifier": "t_rational_0_by_1",
                                              "typeString": "int_const 0"
                                            }
                                          ],
                                          "isConstant": false,
                                          "isLValue": false,
                                          "isPure": true,
                                          "lValueRequested": false,
                                          "type": "type(address)",
                                          "value": "address"
                                        },
                                        "id": 684,
                                        "name": "ElementaryTypeNameExpression",
                                        "src": "9132:7:5"
                                      },
                                      {
                                        "attributes": {
                                          "argumentTypes": null,
                                          "hexvalue": "30",
                                          "isConstant": false,
                                          "isLValue": false,
                                          "isPure": true,
                                          "lValueRequested": false,
                                          "subdenomination": null,
                                          "token": "number",
                                          "type": "int_const 0",
                                          "value": "0"
                                        },
                                        "id": 685,
                                        "name": "Literal",
                                        "src": "9140:1:5"
                                      }
                                    ],
                                    "id": 686,
                                    "name": "FunctionCall",
                                    "src": "9132:10:5"
                                  }
                                ],
                                "id": 687,
                                "name": "BinaryOperation",
                                "src": "9125:17:5"
                              },
                              {
                                "attributes": {
                                  "functionReturnParameters": 655
                                },
                                "children": [
                                  {
                                    "attributes": {
                                      "argumentTypes": null,
                                      "isConstant": false,
                                      "isInlineArray": false,
                                      "isLValue": false,
                                      "isPure": true,
                                      "lValueRequested": false,
                                      "type": "tuple(bool,int_const 87,bytes32)"
                                    },
                                    "children": [
                                      {
                                        "attributes": {
                                          "argumentTypes": null,
                                          "hexvalue": "66616c7365",
                                          "isConstant": false,
                                          "isLValue": false,
                                          "isPure": true,
                                          "lValueRequested": false,
                                          "subdenomination": null,
                                          "token": "bool",
                                          "type": "bool",
                                          "value": "false"
                                        },
                                        "id": 688,
                                        "name": "Literal",
                                        "src": "9165:5:5"
                                      },
                                      {
                                        "attributes": {
                                          "argumentTypes": null,
                                          "hexvalue": "30783537",
                                          "isConstant": false,
                                          "isLValue": false,
                                          "isPure": true,
                                          "lValueRequested": false,
                                          "subdenomination": null,
                                          "token": "number",
                                          "type": "int_const 87",
                                          "value": "0x57"
                                        },
                                        "id": 689,
                                        "name": "Literal",
                                        "src": "9172:4:5"
                                      },
                                      {
                                        "attributes": {
                                          "argumentTypes": null,
                                          "isConstant": false,
                                          "isLValue": false,
                                          "isPure": true,
                                          "isStructConstructorCall": false,
                                          "lValueRequested": false,
                                          "names": [
                                            null
                                          ],
                                          "type": "bytes32",
                                          "type_conversion": true
                                        },
                                        "children": [
                                          {
                                            "attributes": {
                                              "argumentTypes": [
                                                {
                                                  "typeIdentifier": "t_rational_0_by_1",
                                                  "typeString": "int_const 0"
                                                }
                                              ],
                                              "isConstant": false,
                                              "isLValue": false,
                                              "isPure": true,
                                              "lValueRequested": false,
                                              "type": "type(bytes32)",
                                              "value": "bytes32"
                                            },
                                            "id": 690,
                                            "name": "ElementaryTypeNameExpression",
                                            "src": "9178:7:5"
                                          },
                                          {
                                            "attributes": {
                                              "argumentTypes": null,
                                              "hexvalue": "30",
                                              "isConstant": false,
                                              "isLValue": false,
                                              "isPure": true,
                                              "lValueRequested": false,
                                              "subdenomination": null,
                                              "token": "number",
                                              "type": "int_const 0",
                                              "value": "0"
                                            },
                                            "id": 691,
                                            "name": "Literal",
                                            "src": "9186:1:5"
                                          }
                                        ],
                                        "id": 692,
                                        "name": "FunctionCall",
                                        "src": "9178:10:5"
                                      }
                                    ],
                                    "id": 693,
                                    "name": "TupleExpression",
                                    "src": "9164:25:5"
                                  }
                                ],
                                "id": 694,
                                "name": "Return",
                                "src": "9157:32:5"
                              },
                              {
                                "attributes": {
                                  "falseBody": null
                                },
                                "children": [
                                  {
                                    "attributes": {
                                      "argumentTypes": null,
                                      "isConstant": false,
                                      "isLValue": false,
                                      "isPure": false,
                                      "lValueRequested": false,
                                      "operator": "!",
                                      "prefix": true,
                                      "type": "bool"
                                    },
                                    "children": [
                                      {
                                        "attributes": {
                                          "argumentTypes": null,
                                          "isConstant": false,
                                          "isLValue": false,
                                          "isPure": false,
                                          "isStructConstructorCall": false,
                                          "lValueRequested": false,
                                          "names": [
                                            null
                                          ],
                                          "type": "bool",
                                          "type_conversion": false
                                        },
                                        "children": [
                                          {
                                            "attributes": {
                                              "argumentTypes": [
                                                {
                                                  "typeIdentifier": "t_uint256",
                                                  "typeString": "uint256"
                                                },
                                                {
                                                  "typeIdentifier": "t_uint256",
                                                  "typeString": "uint256"
                                                }
                                              ],
                                              "isConstant": false,
                                              "isLValue": false,
                                              "isPure": false,
                                              "lValueRequested": false,
                                              "member_name": "checkAdd",
                                              "referencedDeclaration": 181,
                                              "type": "function (uint256,uint256) pure returns (bool)"
                                            },
                                            "children": [
                                              {
                                                "attributes": {
                                                  "argumentTypes": null,
                                                  "overloadedDeclarations": [
                                                    null
                                                  ],
                                                  "referencedDeclaration": 182,
                                                  "type": "type(library KindMath)",
                                                  "value": "KindMath"
                                                },
                                                "id": 695,
                                                "name": "Identifier",
                                                "src": "9212:8:5"
                                              }
                                            ],
                                            "id": 696,
                                            "name": "MemberAccess",
                                            "src": "9212:17:5"
                                          },
                                          {
                                            "attributes": {
                                              "argumentTypes": null,
                                              "isConstant": false,
                                              "isLValue": true,
                                              "isPure": false,
                                              "lValueRequested": false,
                                              "type": "uint256"
                                            },
                                            "children": [
                                              {
                                                "attributes": {
                                                  "argumentTypes": null,
                                                  "overloadedDeclarations": [
                                                    null
                                                  ],
                                                  "referencedDeclaration": 838,
                                                  "type": "mapping(address => uint256)",
                                                  "value": "_balances"
                                                },
                                                "id": 697,
                                                "name": "Identifier",
                                                "src": "9230:9:5"
                                              },
                                              {
                                                "attributes": {
                                                  "argumentTypes": null,
                                                  "overloadedDeclarations": [
                                                    null
                                                  ],
                                                  "referencedDeclaration": 643,
                                                  "type": "address",
                                                  "value": "_to"
                                                },
                                                "id": 698,
                                                "name": "Identifier",
                                                "src": "9240:3:5"
                                              }
                                            ],
                                            "id": 699,
                                            "name": "IndexAccess",
                                            "src": "9230:14:5"
                                          },
                                          {
                                            "attributes": {
                                              "argumentTypes": null,
                                              "overloadedDeclarations": [
                                                null
                                              ],
                                              "referencedDeclaration": 645,
                                              "type": "uint256",
                                              "value": "_value"
                                            },
                                            "id": 700,
                                            "name": "Identifier",
                                            "src": "9246:6:5"
                                          }
                                        ],
                                        "id": 701,
                                        "name": "FunctionCall",
                                        "src": "9212:41:5"
                                      }
                                    ],
                                    "id": 702,
                                    "name": "UnaryOperation",
                                    "src": "9211:42:5"
                                  },
                                  {
                                    "attributes": {
                                      "functionReturnParameters": 655
                                    },
                                    "children": [
                                      {
                                        "attributes": {
                                          "argumentTypes": null,
                                          "isConstant": false,
                                          "isInlineArray": false,
                                          "isLValue": false,
                                          "isPure": true,
                                          "lValueRequested": false,
                                          "type": "tuple(bool,int_const 80,bytes32)"
                                        },
                                        "children": [
                                          {
                                            "attributes": {
                                              "argumentTypes": null,
                                              "hexvalue": "66616c7365",
                                              "isConstant": false,
                                              "isLValue": false,
                                              "isPure": true,
                                              "lValueRequested": false,
                                              "subdenomination": null,
                                              "token": "bool",
                                              "type": "bool",
                                              "value": "false"
                                            },
                                            "id": 703,
                                            "name": "Literal",
                                            "src": "9276:5:5"
                                          },
                                          {
                                            "attributes": {
                                              "argumentTypes": null,
                                              "hexvalue": "30783530",
                                              "isConstant": false,
                                              "isLValue": false,
                                              "isPure": true,
                                              "lValueRequested": false,
                                              "subdenomination": null,
                                              "token": "number",
                                              "type": "int_const 80",
                                              "value": "0x50"
                                            },
                                            "id": 704,
                                            "name": "Literal",
                                            "src": "9283:4:5"
                                          },
                                          {
                                            "attributes": {
                                              "argumentTypes": null,
                                              "isConstant": false,
                                              "isLValue": false,
                                              "isPure": true,
                                              "isStructConstructorCall": false,
                                              "lValueRequested": false,
                                              "names": [
                                                null
                                              ],
                                              "type": "bytes32",
                                              "type_conversion": true
                                            },
                                            "children": [
                                              {
                                                "attributes": {
                                                  "argumentTypes": [
                                                    {
                                                      "typeIdentifier": "t_rational_0_by_1",
                                                      "typeString": "int_const 0"
                                                    }
                                                  ],
                                                  "isConstant": false,
                                                  "isLValue": false,
                                                  "isPure": true,
                                                  "lValueRequested": false,
                                                  "type": "type(bytes32)",
                                                  "value": "bytes32"
                                                },
                                                "id": 705,
                                                "name": "ElementaryTypeNameExpression",
                                                "src": "9289:7:5"
                                              },
                                              {
                                                "attributes": {
                                                  "argumentTypes": null,
                                                  "hexvalue": "30",
                                                  "isConstant": false,
                                                  "isLValue": false,
                                                  "isPure": true,
                                                  "lValueRequested": false,
                                                  "subdenomination": null,
                                                  "token": "number",
                                                  "type": "int_const 0",
                                                  "value": "0"
                                                },
                                                "id": 706,
                                                "name": "Literal",
                                                "src": "9297:1:5"
                                              }
                                            ],
                                            "id": 707,
                                            "name": "FunctionCall",
                                            "src": "9289:10:5"
                                          }
                                        ],
                                        "id": 708,
                                        "name": "TupleExpression",
                                        "src": "9275:25:5"
                                      }
                                    ],
                                    "id": 709,
                                    "name": "Return",
                                    "src": "9268:32:5"
                                  }
                                ],
                                "id": 710,
                                "name": "IfStatement",
                                "src": "9207:93:5"
                              }
                            ],
                            "id": 711,
                            "name": "IfStatement",
                            "src": "9121:179:5"
                          }
                        ],
                        "id": 712,
                        "name": "IfStatement",
                        "src": "9027:273:5"
                      }
                    ],
                    "id": 713,
                    "name": "IfStatement",
                    "src": "8922:378:5"
                  },
                  {
                    "attributes": {
                      "functionReturnParameters": 655
                    },
                    "children": [
                      {
                        "attributes": {
                          "argumentTypes": null,
                          "isConstant": false,
                          "isInlineArray": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "type": "tuple(bool,int_const 81,bytes32)"
                        },
                        "children": [
                          {
                            "attributes": {
                              "argumentTypes": null,
                              "hexvalue": "74727565",
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "lValueRequested": false,
                              "subdenomination": null,
                              "token": "bool",
                              "type": "bool",
                              "value": "true"
                            },
                            "id": 714,
                            "name": "Literal",
                            "src": "9319:4:5"
                          },
                          {
                            "attributes": {
                              "argumentTypes": null,
                              "hexvalue": "30783531",
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "lValueRequested": false,
                              "subdenomination": null,
                              "token": "number",
                              "type": "int_const 81",
                              "value": "0x51"
                            },
                            "id": 715,
                            "name": "Literal",
                            "src": "9325:4:5"
                          },
                          {
                            "attributes": {
                              "argumentTypes": null,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "isStructConstructorCall": false,
                              "lValueRequested": false,
                              "names": [
                                null
                              ],
                              "type": "bytes32",
                              "type_conversion": true
                            },
                            "children": [
                              {
                                "attributes": {
                                  "argumentTypes": [
                                    {
                                      "typeIdentifier": "t_rational_0_by_1",
                                      "typeString": "int_const 0"
                                    }
                                  ],
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": true,
                                  "lValueRequested": false,
                                  "type": "type(bytes32)",
                                  "value": "bytes32"
                                },
                                "id": 716,
                                "name": "ElementaryTypeNameExpression",
                                "src": "9331:7:5"
                              },
                              {
                                "attributes": {
                                  "argumentTypes": null,
                                  "hexvalue": "30",
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": true,
                                  "lValueRequested": false,
                                  "subdenomination": null,
                                  "token": "number",
                                  "type": "int_const 0",
                                  "value": "0"
                                },
                                "id": 717,
                                "name": "Literal",
                                "src": "9339:1:5"
                              }
                            ],
                            "id": 718,
                            "name": "FunctionCall",
                            "src": "9331:10:5"
                          }
                        ],
                        "id": 719,
                        "name": "TupleExpression",
                        "src": "9318:24:5"
                      }
                    ],
                    "id": 720,
                    "name": "Return",
                    "src": "9311:31:5"
                  }
                ],
                "id": 721,
                "name": "Block",
                "src": "8850:500:5"
              }
            ],
            "id": 722,
            "name": "FunctionDefinition",
            "src": "8724:626:5"
          }
        ],
        "id": 723,
        "name": "ContractDefinition",
        "src": "404:8951:5"
      }
    ],
    "id": 724,
    "name": "SourceUnit",
    "src": "0:9357:5"
  },
  "compiler": {
    "name": "solc",
    "version": "0.4.24+commit.e67f0147.Emscripten.clang"
  },
  "networks": {},
  "schemaVersion": "3.4.2",
  "updatedAt": "2021-08-07T13:45:05.318Z",
  "devdoc": {
    "methods": {
      "allowance(address,address)": {
        "details": "Function to check the amount of tokens that an owner allowed to a spender.\r",
        "params": {
          "owner": "address The address which owns the funds.\r",
          "spender": "address The address which will spend the funds.\r"
        },
        "return": "A uint256 specifying the amount of tokens still available for the spender.\r"
      },
      "approve(address,uint256)": {
        "details": "Approve the passed address to spend the specified amount of tokens on behalf of msg.sender.\r Beware that changing an allowance with this method brings the risk that someone may use both the old\r and the new allowance by unfortunate transaction ordering. One possible solution to mitigate this\r race condition is to first reduce the spender's allowance to 0 and set the desired value afterwards:\r https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729\r",
        "params": {
          "spender": "The address which will spend the funds.\r",
          "value": "The amount of tokens to be spent.\r"
        }
      },
      "balanceOf(address)": {
        "details": "Gets the balance of the specified address.\r",
        "params": {
          "owner": "The address to query the balance of.\r"
        },
        "return": "An uint256 representing the amount owned by the passed address.\r"
      },
      "canTransfer(address,uint256,bytes)": {
        "params": {
          "_data": "The `bytes _data` allows arbitrary data to be submitted alongside the transfer.\r",
          "_to": "address The address which you want to transfer to\r",
          "_value": "uint256 the amount of tokens to be transferred\r"
        },
        "return": "bool It signifies whether the transaction will be executed or not.\rbyte Ethereum status code (ESC)\rbytes32 Application specific reason code \r"
      },
      "canTransferFrom(address,address,uint256,bytes)": {
        "params": {
          "_data": "The `bytes _data` allows arbitrary data to be submitted alongside the transfer.\r",
          "_from": "address The address which you want to send tokens from\r",
          "_to": "address The address which you want to transfer to\r",
          "_value": "uint256 the amount of tokens to be transferred\r"
        },
        "return": "bool It signifies whether the transaction will be executed or not.\rbyte Ethereum status code (ESC)\rbytes32 Application specific reason code \r"
      },
      "decreaseAllowance(address,uint256)": {
        "details": "Decrease the amount of tokens that an owner allowed to a spender.\r approve should be called when allowed_[_spender] == 0. To decrement\r allowed value is better to use this function to avoid 2 calls (and wait until\r the first transaction is mined)\r From MonolithDAO Token.sol\r",
        "params": {
          "spender": "The address which will spend the funds.\r",
          "subtractedValue": "The amount of tokens to decrease the allowance by.\r"
        }
      },
      "increaseAllowance(address,uint256)": {
        "details": "Increase the amount of tokens that an owner allowed to a spender.\r approve should be called when allowed_[_spender] == 0. To increment\r allowed value is better to use this function to avoid 2 calls (and wait until\r the first transaction is mined)\r From MonolithDAO Token.sol\r",
        "params": {
          "addedValue": "The amount of tokens to increase the allowance by.\r",
          "spender": "The address which will spend the funds.\r"
        }
      },
      "isIssuable()": {
        "details": "If a token returns FALSE for `isIssuable()` then it MUST always return FALSE in the future.\r If a token returns FALSE for `isIssuable()` then it MUST never allow additional tokens to be issued.\r",
        "return": "bool `true` signifies the minting is allowed. While `false` denotes the end of minting\r"
      },
      "issue(address,uint256,bytes)": {
        "details": "It only be called by the token issuer or the operator defined by the issuer. ERC1594 doesn't have\r have the any logic related to operator but its superset ERC1400 have the operator logic and this function\r is allowed to call by the operator.\r",
        "params": {
          "_data": "The `bytes _data` allows arbitrary data to be submitted alongside the transfer.\r",
          "_tokenHolder": "The account that will receive the created tokens (account should be whitelisted or KYCed).\r",
          "_value": "The amount of tokens need to be issued\r"
        }
      },
      "redeem(uint256,bytes)": {
        "params": {
          "_data": "The `bytes _data` it can be used in the token contract to authenticate the redemption.\r",
          "_value": "The amount of tokens need to be redeemed\r"
        }
      },
      "redeemFrom(address,uint256,bytes)": {
        "details": "It is analogy to `transferFrom`\r",
        "params": {
          "_data": "The `bytes _data` it can be used in the token contract to authenticate the redemption.\r",
          "_tokenHolder": "The account whose tokens gets redeemed.\r",
          "_value": "The amount of tokens need to be redeemed\r"
        }
      },
      "renounceOwnership()": {
        "details": "Allows the current owner to relinquish control of the contract."
      },
      "totalSupply()": {
        "details": "Total number of tokens in existence\r"
      },
      "transfer(address,uint256)": {
        "details": "Transfer token for a specified address\r",
        "params": {
          "to": "The address to transfer to.\r",
          "value": "The amount to be transferred.\r"
        }
      },
      "transferFrom(address,address,uint256)": {
        "details": "Transfer tokens from one address to another\r",
        "params": {
          "from": "address The address which you want to send tokens from\r",
          "to": "address The address which you want to transfer to\r",
          "value": "uint256 the amount of tokens to be transferred\r"
        }
      },
      "transferFromWithData(address,address,uint256,bytes)": {
        "details": "`msg.sender` MUST have a sufficient `allowance` set and this `allowance` must be debited by the `_value`.\r",
        "params": {
          "_data": "The `bytes _data` allows arbitrary data to be submitted alongside the transfer.\r for the token contract to interpret or record. This could be signed data authorising the transfer\r (e.g. a dynamic whitelist) but is flexible enough to accomadate other use-cases.\r",
          "_from": "address The address which you want to send tokens from\r",
          "_to": "address The address which you want to transfer to\r",
          "_value": "uint256 the amount of tokens to be transferred\r"
        }
      },
      "transferOwnership(address)": {
        "details": "Allows the current owner to transfer control of the contract to a newOwner.",
        "params": {
          "_newOwner": "The address to transfer ownership to."
        }
      },
      "transferWithData(address,uint256,bytes)": {
        "params": {
          "_data": "The `bytes _data` allows arbitrary data to be submitted alongside the transfer.\r for the token contract to interpret or record. This could be signed data authorising the transfer\r (e.g. a dynamic whitelist) but is flexible enough to accomadate other use-cases.\r",
          "_to": "address The address which you want to transfer to\r",
          "_value": "uint256 the amount of tokens to be transferred\r"
        }
      }
    },
    "title": "Standard implementation of ERC1594 (Subset of ERC1400 https://github.com/ethereum/EIPs/issues/1411)\r"
  },
  "userdoc": {
    "methods": {
      "canTransfer(address,uint256,bytes)": {
        "notice": "Transfers of securities may fail for a number of reasons. So this function will used to understand the\r cause of failure by getting the byte value. Which will be the ESC that follows the EIP 1066. ESC can be mapped \r with a reson string to understand the failure cause, table of Ethereum status code will always reside off-chain\r"
      },
      "canTransferFrom(address,address,uint256,bytes)": {
        "notice": "Transfers of securities may fail for a number of reasons. So this function will used to understand the\r cause of failure by getting the byte value. Which will be the ESC that follows the EIP 1066. ESC can be mapped \r with a reson string to understand the failure cause, table of Ethereum status code will always reside off-chain\r"
      },
      "isIssuable()": {
        "notice": "A security token issuer can specify that issuance has finished for the token\r (i.e. no new tokens can be minted or issued).\r"
      },
      "issue(address,uint256,bytes)": {
        "notice": "This function must be called to increase the total supply (Corresponds to mint function of ERC20).\r"
      },
      "redeem(uint256,bytes)": {
        "notice": "This function redeem an amount of the token of a msg.sender. For doing so msg.sender may incentivize\r using different ways that could be implemented with in the `redeem` function definition. But those implementations\r are out of the scope of the ERC1594. \r"
      },
      "redeemFrom(address,uint256,bytes)": {
        "notice": "This function redeem an amount of the token of a msg.sender. For doing so msg.sender may incentivize\r using different ways that could be implemented with in the `redeem` function definition. But those implementations\r are out of the scope of the ERC1594. \r"
      },
      "transferFromWithData(address,address,uint256,bytes)": {
        "notice": "Transfer restrictions can take many forms and typically involve on-chain rules or whitelists.\r However for many types of approved transfers, maintaining an on-chain list of approved transfers can be\r cumbersome and expensive. An alternative is the co-signing approach, where in addition to the token holder\r approving a token transfer, and authorised entity provides signed data which further validates the transfer.\r"
      },
      "transferWithData(address,uint256,bytes)": {
        "notice": "Transfer restrictions can take many forms and typically involve on-chain rules or whitelists.\r However for many types of approved transfers, maintaining an on-chain list of approved transfers can be\r cumbersome and expensive. An alternative is the co-signing approach, where in addition to the token holder\r approving a token transfer, and authorised entity provides signed data which further validates the transfer.\r"
      }
    }
  }
}